#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleTalk_Aerith

#include "Basic.hpp"

#include "BattleTalk_Aerith_classes.hpp"
#include "BattleTalk_Aerith_parameters.hpp"


namespace SDK
{

// Function BattleTalk_Aerith.BattleTalk_Aerith_C.OnNotify
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             AnimName                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SoundName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEndCharacter*                    ownerChara                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBattleTalk_Aerith_C::OnNotify(class FName& AnimName, class FName& SoundName, class AEndCharacter* ownerChara) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleTalk_Aerith_C", "OnNotify");

	Params::BattleTalk_Aerith_C_OnNotify Parms{};

	Parms.AnimName = AnimName;
	Parms.SoundName = SoundName;
	Parms.ownerChara = ownerChara;

	UObject::ProcessEvent(Func, &Parms);

	AnimName = Parms.AnimName;
	SoundName = Parms.SoundName;

	return Parms.ReturnValue;
}


// Function BattleTalk_Aerith.BattleTalk_Aerith_C.OnNotifyWithAbility
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             AnimName                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SoundName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEndCharacter*                    ownerChara                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEndCharacter*                    targetChara                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AbilityID                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEndDataTableBattleAbility       dataTableBattleAbility                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bFinishBlow                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBattleTalk_Aerith_C::OnNotifyWithAbility(class FName& AnimName, class FName& SoundName, class AEndCharacter* ownerChara, class AEndCharacter* targetChara, class FName& AbilityID, struct FEndDataTableBattleAbility& dataTableBattleAbility, bool bFinishBlow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleTalk_Aerith_C", "OnNotifyWithAbility");

	Params::BattleTalk_Aerith_C_OnNotifyWithAbility Parms{};

	Parms.AnimName = AnimName;
	Parms.SoundName = SoundName;
	Parms.ownerChara = ownerChara;
	Parms.targetChara = targetChara;
	Parms.AbilityID = AbilityID;
	Parms.dataTableBattleAbility = std::move(dataTableBattleAbility);
	Parms.bFinishBlow = bFinishBlow;

	UObject::ProcessEvent(Func, &Parms);

	AnimName = Parms.AnimName;
	SoundName = Parms.SoundName;
	AbilityID = Parms.AbilityID;
	dataTableBattleAbility = std::move(Parms.dataTableBattleAbility);

	return Parms.ReturnValue;
}

}

