#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleTarget_New

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleTarget_New.BattleTarget_New_C
// 0x02A8 (0x0608 - 0x0360)
class UBattleTarget_New_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Auto_Loop;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Auto_In;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       LockDefaultScale;                                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       FreeDefaultScale;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Auto_Shift;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Color_Shift;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       FreeLock_Shift;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Range_Loop;                                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock_Loop;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Free_Loop;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Range_In;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock_In;                                           // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Free_In;                                           // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_BattleTarget;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_Nut_BattleTarget;                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_00a;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_00b;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_01a;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_01b;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_02a;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_02b;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_03a;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Auto_03b;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_00a;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_00b;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_01a;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_01b;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_02a;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_02b;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_03a;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_03b;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_04a;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_04b;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_05a;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Free_05b;                                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_00a;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_00b;                                      // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_01a;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_01b;                                      // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_02a;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_02b;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_03a;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_03b;                                      // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_04a;                                      // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_04b;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_05a;                                      // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_05b;                                      // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_00a;                                     // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_00b;                                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_01a;                                     // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_01b;                                     // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_02a;                                     // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_02b;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_03a;                                     // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_03b;                                     // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_04a;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_04b;                                     // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_AutoParts_00;                                  // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_AutoParts_01;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_AutoParts_02;                                  // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_AutoParts_03;                                  // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Free;                                          // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_FreeParts_00;                                  // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_FreeParts_01;                                  // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_FreeParts_02;                                  // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_FreeParts_03;                                  // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_FreeParts_04;                                  // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_FreeParts_05;                                  // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Lock;                                          // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_LockParts_00;                                  // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_LockParts_01;                                  // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_LockParts_02;                                  // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_LockParts_03;                                  // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_LockParts_04;                                  // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_LockParts_05;                                  // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Range;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_RangeParts_00;                                 // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_RangeParts_01;                                 // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_RangeParts_02;                                 // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_RangeParts_03;                                 // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_RangeParts_04;                                 // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Auto;                                          // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Lock;                                          // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Lock2;                                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleTarget_New_C">();
	}
	static class UBattleTarget_New_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleTarget_New_C>();
	}
};
static_assert(alignof(UBattleTarget_New_C) == 0x000008, "Wrong alignment on UBattleTarget_New_C");
static_assert(sizeof(UBattleTarget_New_C) == 0x000608, "Wrong size on UBattleTarget_New_C");
static_assert(offsetof(UBattleTarget_New_C, Auto_Loop) == 0x000360, "Member 'UBattleTarget_New_C::Auto_Loop' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Auto_In) == 0x000368, "Member 'UBattleTarget_New_C::Auto_In' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, LockDefaultScale) == 0x000370, "Member 'UBattleTarget_New_C::LockDefaultScale' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, FreeDefaultScale) == 0x000378, "Member 'UBattleTarget_New_C::FreeDefaultScale' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Auto_Shift) == 0x000380, "Member 'UBattleTarget_New_C::Auto_Shift' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Color_Shift) == 0x000388, "Member 'UBattleTarget_New_C::Color_Shift' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, FreeLock_Shift) == 0x000390, "Member 'UBattleTarget_New_C::FreeLock_Shift' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Out) == 0x000398, "Member 'UBattleTarget_New_C::Out' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Range_Loop) == 0x0003A0, "Member 'UBattleTarget_New_C::Range_Loop' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Lock_Loop) == 0x0003A8, "Member 'UBattleTarget_New_C::Lock_Loop' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Free_Loop) == 0x0003B0, "Member 'UBattleTarget_New_C::Free_Loop' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Range_In) == 0x0003B8, "Member 'UBattleTarget_New_C::Range_In' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Lock_In) == 0x0003C0, "Member 'UBattleTarget_New_C::Lock_In' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Free_In) == 0x0003C8, "Member 'UBattleTarget_New_C::Free_In' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, All_BattleTarget) == 0x0003D0, "Member 'UBattleTarget_New_C::All_BattleTarget' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, All_Nut_BattleTarget) == 0x0003D8, "Member 'UBattleTarget_New_C::All_Nut_BattleTarget' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_00a) == 0x0003E0, "Member 'UBattleTarget_New_C::Ims_Auto_00a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_00b) == 0x0003E8, "Member 'UBattleTarget_New_C::Ims_Auto_00b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_01a) == 0x0003F0, "Member 'UBattleTarget_New_C::Ims_Auto_01a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_01b) == 0x0003F8, "Member 'UBattleTarget_New_C::Ims_Auto_01b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_02a) == 0x000400, "Member 'UBattleTarget_New_C::Ims_Auto_02a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_02b) == 0x000408, "Member 'UBattleTarget_New_C::Ims_Auto_02b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_03a) == 0x000410, "Member 'UBattleTarget_New_C::Ims_Auto_03a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Auto_03b) == 0x000418, "Member 'UBattleTarget_New_C::Ims_Auto_03b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_00a) == 0x000420, "Member 'UBattleTarget_New_C::Ims_Free_00a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_00b) == 0x000428, "Member 'UBattleTarget_New_C::Ims_Free_00b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_01a) == 0x000430, "Member 'UBattleTarget_New_C::Ims_Free_01a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_01b) == 0x000438, "Member 'UBattleTarget_New_C::Ims_Free_01b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_02a) == 0x000440, "Member 'UBattleTarget_New_C::Ims_Free_02a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_02b) == 0x000448, "Member 'UBattleTarget_New_C::Ims_Free_02b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_03a) == 0x000450, "Member 'UBattleTarget_New_C::Ims_Free_03a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_03b) == 0x000458, "Member 'UBattleTarget_New_C::Ims_Free_03b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_04a) == 0x000460, "Member 'UBattleTarget_New_C::Ims_Free_04a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_04b) == 0x000468, "Member 'UBattleTarget_New_C::Ims_Free_04b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_05a) == 0x000470, "Member 'UBattleTarget_New_C::Ims_Free_05a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Free_05b) == 0x000478, "Member 'UBattleTarget_New_C::Ims_Free_05b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_00a) == 0x000480, "Member 'UBattleTarget_New_C::Ims_Lock_00a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_00b) == 0x000488, "Member 'UBattleTarget_New_C::Ims_Lock_00b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_01a) == 0x000490, "Member 'UBattleTarget_New_C::Ims_Lock_01a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_01b) == 0x000498, "Member 'UBattleTarget_New_C::Ims_Lock_01b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_02a) == 0x0004A0, "Member 'UBattleTarget_New_C::Ims_Lock_02a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_02b) == 0x0004A8, "Member 'UBattleTarget_New_C::Ims_Lock_02b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_03a) == 0x0004B0, "Member 'UBattleTarget_New_C::Ims_Lock_03a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_03b) == 0x0004B8, "Member 'UBattleTarget_New_C::Ims_Lock_03b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_04a) == 0x0004C0, "Member 'UBattleTarget_New_C::Ims_Lock_04a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_04b) == 0x0004C8, "Member 'UBattleTarget_New_C::Ims_Lock_04b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_05a) == 0x0004D0, "Member 'UBattleTarget_New_C::Ims_Lock_05a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Lock_05b) == 0x0004D8, "Member 'UBattleTarget_New_C::Ims_Lock_05b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_00a) == 0x0004E0, "Member 'UBattleTarget_New_C::Ims_Range_00a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_00b) == 0x0004E8, "Member 'UBattleTarget_New_C::Ims_Range_00b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_01a) == 0x0004F0, "Member 'UBattleTarget_New_C::Ims_Range_01a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_01b) == 0x0004F8, "Member 'UBattleTarget_New_C::Ims_Range_01b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_02a) == 0x000500, "Member 'UBattleTarget_New_C::Ims_Range_02a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_02b) == 0x000508, "Member 'UBattleTarget_New_C::Ims_Range_02b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_03a) == 0x000510, "Member 'UBattleTarget_New_C::Ims_Range_03a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_03b) == 0x000518, "Member 'UBattleTarget_New_C::Ims_Range_03b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_04a) == 0x000520, "Member 'UBattleTarget_New_C::Ims_Range_04a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Ims_Range_04b) == 0x000528, "Member 'UBattleTarget_New_C::Ims_Range_04b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_AutoParts_00) == 0x000530, "Member 'UBattleTarget_New_C::Nut_AutoParts_00' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_AutoParts_01) == 0x000538, "Member 'UBattleTarget_New_C::Nut_AutoParts_01' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_AutoParts_02) == 0x000540, "Member 'UBattleTarget_New_C::Nut_AutoParts_02' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_AutoParts_03) == 0x000548, "Member 'UBattleTarget_New_C::Nut_AutoParts_03' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_Free) == 0x000550, "Member 'UBattleTarget_New_C::Nut_Free' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_FreeParts_00) == 0x000558, "Member 'UBattleTarget_New_C::Nut_FreeParts_00' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_FreeParts_01) == 0x000560, "Member 'UBattleTarget_New_C::Nut_FreeParts_01' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_FreeParts_02) == 0x000568, "Member 'UBattleTarget_New_C::Nut_FreeParts_02' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_FreeParts_03) == 0x000570, "Member 'UBattleTarget_New_C::Nut_FreeParts_03' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_FreeParts_04) == 0x000578, "Member 'UBattleTarget_New_C::Nut_FreeParts_04' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_FreeParts_05) == 0x000580, "Member 'UBattleTarget_New_C::Nut_FreeParts_05' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_Lock) == 0x000588, "Member 'UBattleTarget_New_C::Nut_Lock' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_LockParts_00) == 0x000590, "Member 'UBattleTarget_New_C::Nut_LockParts_00' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_LockParts_01) == 0x000598, "Member 'UBattleTarget_New_C::Nut_LockParts_01' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_LockParts_02) == 0x0005A0, "Member 'UBattleTarget_New_C::Nut_LockParts_02' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_LockParts_03) == 0x0005A8, "Member 'UBattleTarget_New_C::Nut_LockParts_03' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_LockParts_04) == 0x0005B0, "Member 'UBattleTarget_New_C::Nut_LockParts_04' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_LockParts_05) == 0x0005B8, "Member 'UBattleTarget_New_C::Nut_LockParts_05' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_Range) == 0x0005C0, "Member 'UBattleTarget_New_C::Nut_Range' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_RangeParts_00) == 0x0005C8, "Member 'UBattleTarget_New_C::Nut_RangeParts_00' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_RangeParts_01) == 0x0005D0, "Member 'UBattleTarget_New_C::Nut_RangeParts_01' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_RangeParts_02) == 0x0005D8, "Member 'UBattleTarget_New_C::Nut_RangeParts_02' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_RangeParts_03) == 0x0005E0, "Member 'UBattleTarget_New_C::Nut_RangeParts_03' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Nut_RangeParts_04) == 0x0005E8, "Member 'UBattleTarget_New_C::Nut_RangeParts_04' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Txt_Auto) == 0x0005F0, "Member 'UBattleTarget_New_C::Txt_Auto' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Txt_Lock) == 0x0005F8, "Member 'UBattleTarget_New_C::Txt_Lock' has a wrong offset!");
static_assert(offsetof(UBattleTarget_New_C, Txt_Lock2) == 0x000600, "Member 'UBattleTarget_New_C::Txt_Lock2' has a wrong offset!");

}

