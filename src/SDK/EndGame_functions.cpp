#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EndGame

#include "Basic.hpp"

#include "EndGame_classes.hpp"
#include "EndGame_parameters.hpp"


namespace SDK
{

// Function EndGame.EndUserWidget.AddToOffscreen
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::AddToOffscreen(int32 ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "AddToOffscreen");

	Params::EndUserWidget_AddToOffscreen Parms{};

	Parms.ZOrder = ZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.AddToPlayerScreenEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::AddToPlayerScreenEx(int32 ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "AddToPlayerScreenEx");

	Params::EndUserWidget_AddToPlayerScreenEx Parms{};

	Parms.ZOrder = ZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.AddToScene
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndUserWidget::AddToScene(const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "AddToScene");

	Params::EndUserWidget_AddToScene Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.AddToViewportEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::AddToViewportEx(int32 ZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "AddToViewportEx");

	Params::EndUserWidget_AddToViewportEx Parms{};

	Parms.ZOrder = ZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.IsAnimationPlayingForwardByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsAnimationPlayingForwardByName(class FName InAnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsAnimationPlayingForwardByName");

	Params::EndUserWidget_IsAnimationPlayingForwardByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsAnimationPlayingForwardEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsAnimationPlayingForwardEx(const class UWidgetAnimation* InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsAnimationPlayingForwardEx");

	Params::EndUserWidget_IsAnimationPlayingForwardEx Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.PauseAnimationByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndUserWidget::PauseAnimationByName(class FName InAnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PauseAnimationByName");

	Params::EndUserWidget_PauseAnimationByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.PauseAnimationEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndUserWidget::PauseAnimationEx(const class UWidgetAnimation* InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PauseAnimationEx");

	Params::EndUserWidget_PauseAnimationEx Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.PlayAnimationByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::PlayAnimationByName(class FName InAnimationName, float StartAtTime, int32 NumLoopsToPlay, EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PlayAnimationByName");

	Params::EndUserWidget_PlayAnimationByName Parms{};

	Parms.InAnimationName = InAnimationName;
	Parms.StartAtTime = StartAtTime;
	Parms.NumLoopsToPlay = NumLoopsToPlay;
	Parms.PlayMode = PlayMode;
	Parms.PlaybackSpeed = PlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.PlayAnimationEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::PlayAnimationEx(class UWidgetAnimation* InAnimation, float StartAtTime, int32 NumLoopsToPlay, EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PlayAnimationEx");

	Params::EndUserWidget_PlayAnimationEx Parms{};

	Parms.InAnimation = InAnimation;
	Parms.StartAtTime = StartAtTime;
	Parms.NumLoopsToPlay = NumLoopsToPlay;
	Parms.PlayMode = PlayMode;
	Parms.PlaybackSpeed = PlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.PlayAnimationExAutoReverse
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReverseSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::PlayAnimationExAutoReverse(class UWidgetAnimation* InAnimation, float StartAtTime, int32 NumLoopsToPlay, EUMGSequencePlayMode PlayMode, float PlaybackSpeed, float ReverseSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PlayAnimationExAutoReverse");

	Params::EndUserWidget_PlayAnimationExAutoReverse Parms{};

	Parms.InAnimation = InAnimation;
	Parms.StartAtTime = StartAtTime;
	Parms.NumLoopsToPlay = NumLoopsToPlay;
	Parms.PlayMode = PlayMode;
	Parms.PlaybackSpeed = PlaybackSpeed;
	Parms.ReverseSpeed = ReverseSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.PlayAnimationToByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndAtTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::PlayAnimationToByName(class FName InAnimationName, float StartAtTime, float EndAtTime, int32 NumLoopsToPlay, EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PlayAnimationToByName");

	Params::EndUserWidget_PlayAnimationToByName Parms{};

	Parms.InAnimationName = InAnimationName;
	Parms.StartAtTime = StartAtTime;
	Parms.EndAtTime = EndAtTime;
	Parms.NumLoopsToPlay = NumLoopsToPlay;
	Parms.PlayMode = PlayMode;
	Parms.PlaybackSpeed = PlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.PlayAnimationToEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndAtTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::PlayAnimationToEx(class UWidgetAnimation* InAnimation, float StartAtTime, float EndAtTime, int32 NumLoopsToPlay, EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PlayAnimationToEx");

	Params::EndUserWidget_PlayAnimationToEx Parms{};

	Parms.InAnimation = InAnimation;
	Parms.StartAtTime = StartAtTime;
	Parms.EndAtTime = EndAtTime;
	Parms.NumLoopsToPlay = NumLoopsToPlay;
	Parms.PlayMode = PlayMode;
	Parms.PlaybackSpeed = PlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.PopFromFocusStack
// (Final, Native, Public, BlueprintCallable)

void UEndUserWidget::PopFromFocusStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PopFromFocusStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.PushToFocusStack
// (Final, Native, Public, BlueprintCallable)

void UEndUserWidget::PushToFocusStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "PushToFocusStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.RemoveFromViewportEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UEndUserWidget::RemoveFromViewportEx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "RemoveFromViewportEx");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.ReverseAnimationByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::ReverseAnimationByName(class FName InAnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "ReverseAnimationByName");

	Params::EndUserWidget_ReverseAnimationByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.ReverseAnimationEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::ReverseAnimationEx(const class UWidgetAnimation* InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "ReverseAnimationEx");

	Params::EndUserWidget_ReverseAnimationEx Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.SetFocusToChild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFocusCause                             InFocusCause                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::SetFocusToChild(class UWidget* InWidget, EFocusCause InFocusCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetFocusToChild");

	Params::EndUserWidget_SetFocusToChild Parms{};

	Parms.InWidget = InWidget;
	Parms.InFocusCause = InFocusCause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.SetLocationInScene
// (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::SetLocationInScene(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetLocationInScene");

	Params::EndUserWidget_SetLocationInScene Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.SetNumLoopsToPlayByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::SetNumLoopsToPlayByName(class FName InAnimationName, int32 NumLoopsToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetNumLoopsToPlayByName");

	Params::EndUserWidget_SetNumLoopsToPlayByName Parms{};

	Parms.InAnimationName = InAnimationName;
	Parms.NumLoopsToPlay = NumLoopsToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.SetNumLoopsToPlayEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::SetNumLoopsToPlayEx(const class UWidgetAnimation* InAnimation, int32 NumLoopsToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetNumLoopsToPlayEx");

	Params::EndUserWidget_SetNumLoopsToPlayEx Parms{};

	Parms.InAnimation = InAnimation;
	Parms.NumLoopsToPlay = NumLoopsToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.SetPlaybackSpeedByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::SetPlaybackSpeedByName(class FName InAnimationName, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetPlaybackSpeedByName");

	Params::EndUserWidget_SetPlaybackSpeedByName Parms{};

	Parms.InAnimationName = InAnimationName;
	Parms.PlaybackSpeed = PlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.SetPlaybackSpeedEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlaybackSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::SetPlaybackSpeedEx(const class UWidgetAnimation* InAnimation, float PlaybackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetPlaybackSpeedEx");

	Params::EndUserWidget_SetPlaybackSpeedEx Parms{};

	Parms.InAnimation = InAnimation;
	Parms.PlaybackSpeed = PlaybackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.SetRotationInScene
// (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         InRotation                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndUserWidget::SetRotationInScene(const struct FRotator& InRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "SetRotationInScene");

	Params::EndUserWidget_SetRotationInScene Parms{};

	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.StopAllAnimationsEx
// (Final, Native, Public, BlueprintCallable)

void UEndUserWidget::StopAllAnimationsEx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "StopAllAnimationsEx");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.StopAnimationByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::StopAnimationByName(class FName InAnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "StopAnimationByName");

	Params::EndUserWidget_StopAnimationByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.StopAnimationEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndUserWidget::StopAnimationEx(const class UWidgetAnimation* InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "StopAnimationEx");

	Params::EndUserWidget_StopAnimationEx Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndUserWidget.GetAnimationCurrentTimeByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndUserWidget::GetAnimationCurrentTimeByName(class FName InAnimationName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetAnimationCurrentTimeByName");

	Params::EndUserWidget_GetAnimationCurrentTimeByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetAnimationCurrentTimeEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndUserWidget::GetAnimationCurrentTimeEx(const class UWidgetAnimation* InAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetAnimationCurrentTimeEx");

	Params::EndUserWidget_GetAnimationCurrentTimeEx Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetAnimationEndTimeByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndUserWidget::GetAnimationEndTimeByName(class FName InAnimationName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetAnimationEndTimeByName");

	Params::EndUserWidget_GetAnimationEndTimeByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetAnimationStartTimeByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndUserWidget::GetAnimationStartTimeByName(class FName InAnimationName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetAnimationStartTimeByName");

	Params::EndUserWidget_GetAnimationStartTimeByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetFocusedChildWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UEndUserWidget::GetFocusedChildWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetFocusedChildWidget");

	Params::EndUserWidget_GetFocusedChildWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetLocationInScene
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndUserWidget::GetLocationInScene() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetLocationInScene");

	Params::EndUserWidget_GetLocationInScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetRotationInScene
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UEndUserWidget::GetRotationInScene() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetRotationInScene");

	Params::EndUserWidget_GetRotationInScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.GetZOrderInViewport
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndUserWidget::GetZOrderInViewport() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "GetZOrderInViewport");

	Params::EndUserWidget_GetZOrderInViewport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsAnimationPlayingByName
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsAnimationPlayingByName(class FName InAnimationName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsAnimationPlayingByName");

	Params::EndUserWidget_IsAnimationPlayingByName Parms{};

	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsAnimationPlayingEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsAnimationPlayingEx(const class UWidgetAnimation* InAnimation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsAnimationPlayingEx");

	Params::EndUserWidget_IsAnimationPlayingEx Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsAnyAnimationPlayingEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsAnyAnimationPlayingEx() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsAnyAnimationPlayingEx");

	Params::EndUserWidget_IsAnyAnimationPlayingEx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsInViewportEx
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsInViewportEx() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsInViewportEx");

	Params::EndUserWidget_IsInViewportEx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsPlayingAnimationEx
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsPlayingAnimationEx() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsPlayingAnimationEx");

	Params::EndUserWidget_IsPlayingAnimationEx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndUserWidget.IsPlayingAnimationIgnoreStopped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndUserWidget::IsPlayingAnimationIgnoreStopped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndUserWidget", "IsPlayingAnimationIgnoreStopped");

	Params::EndUserWidget_IsPlayingAnimationIgnoreStopped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleDamageSourceComponent.GetDir
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndBattleDamageSourceComponent::GetDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleDamageSourceComponent", "GetDir");

	Params::EndBattleDamageSourceComponent_GetDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleLevelSequenceActor.OnStop
// (Final, Native, Private)

void AEndBattleLevelSequenceActor::OnStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleLevelSequenceActor", "OnStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSaveLoadMenu.OnSaveDataCancelled
// (Final, Native, Private)

void UEndMainSaveLoadMenu::OnSaveDataCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSaveLoadMenu", "OnSaveDataCancelled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSaveLoadMenu.OnSaveDataPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSaveLoadMenu::OnSaveDataPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSaveLoadMenu", "OnSaveDataPressedItem");

	Params::EndMainSaveLoadMenu_OnSaveDataPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSaveLoadMenu.OnSaveDataSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSaveLoadMenu::OnSaveDataSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSaveLoadMenu", "OnSaveDataSelectedIndexChanged");

	Params::EndMainSaveLoadMenu_OnSaveDataSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSaveLoadMenu.OnSaveDataSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSaveLoadMenu::OnSaveDataSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSaveLoadMenu", "OnSaveDataSetupItem");

	Params::EndMainSaveLoadMenu_OnSaveDataSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBikeTriggerBoxResetPhysActor.BeginOverlap
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBikeTriggerBoxResetPhysActor::BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBikeTriggerBoxResetPhysActor", "BeginOverlap");

	Params::EndBikeTriggerBoxResetPhysActor_BeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBizarreBugWallActor.Play
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBizarreBugWallActor::Play(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBizarreBugWallActor", "Play");

	Params::EndBizarreBugWallActor_Play Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBizarreBugWallActor.Stop
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBizarreBugWallActor::Stop(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBizarreBugWallActor", "Stop");

	Params::EndBizarreBugWallActor_Stop Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleReportMenu.OnReportMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleReportMenu::OnReportMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleReportMenu", "OnReportMenuSelectedIndexChanged");

	Params::EndBattleReportMenu_OnReportMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleReportMenu.OnReportMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleReportMenu::OnReportMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleReportMenu", "OnReportMenuSetupItem");

	Params::EndBattleReportMenu_OnReportMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleReportMenu.OnSortListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleReportMenu::OnSortListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleReportMenu", "OnSortListPressedItem");

	Params::EndBattleReportMenu_OnSortListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleReportMenu.SetReportBgImage
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSoftObjectPath                  Path                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleReportMenu::SetReportBgImage(const struct FSoftObjectPath& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleReportMenu", "SetReportBgImage");

	Params::EndBattleReportMenu_SetReportBgImage Parms{};

	Parms.Path = std::move(Path);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleReportMenu.SetReportImage
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSoftObjectPath                  Path                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleReportMenu::SetReportImage(const struct FSoftObjectPath& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleReportMenu", "SetReportImage");

	Params::EndBattleReportMenu_SetReportImage Parms{};

	Parms.Path = std::move(Path);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndImageSet.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImageSet::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImageSet", "SetBlendMode");

	Params::EndImageSet_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImageSet.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImageSet::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImageSet", "SetColorAndOpacity");

	Params::EndImageSet_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImageSet.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImageSet::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImageSet", "SetOpacity");

	Params::EndImageSet_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImageSet.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImageSet::SetSelectedIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImageSet", "SetSelectedIndex");

	Params::EndImageSet_SetSelectedIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImageSet.SetSimpleMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSimpleMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImageSet::SetSimpleMode(bool bInSimpleMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImageSet", "SetSimpleMode");

	Params::EndImageSet_SetSimpleMode Parms{};

	Parms.bInSimpleMode = bInSimpleMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImageSet.SetSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InSize                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImageSet::SetSize(const struct FVector2D& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImageSet", "SetSize");

	Params::EndImageSet_SetSize Parms{};

	Parms.InSize = std::move(InSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleEnvQueryContext.GetTargetContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEndEnvQueryComponent*            InQuery                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InParty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleEnvQueryContext::GetTargetContexts(class UEndEnvQueryComponent* InQuery, bool InParty, float InDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleEnvQueryContext", "GetTargetContexts");

	Params::EndBattleEnvQueryContext_GetTargetContexts Parms{};

	Parms.InQuery = InQuery;
	Parms.InParty = InParty;
	Parms.InDistance = InDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleEnvQueryContext.GetTargetLocationContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEndEnvQueryComponent*            InQuery                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InParty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UEndBattleEnvQueryContext::GetTargetLocationContexts(class UEndEnvQueryComponent* InQuery, bool InParty, float InDistance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleEnvQueryContext", "GetTargetLocationContexts");

	Params::EndBattleEnvQueryContext_GetTargetLocationContexts Parms{};

	Parms.InQuery = InQuery;
	Parms.InParty = InParty;
	Parms.InDistance = InDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleEnvQueryContext.ProvideActorsSet
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UObject*                          QuerierObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           QuerierActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ResultingActorsSet                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleEnvQueryContext::ProvideActorsSet(class UObject* QuerierObject, class AActor* QuerierActor, TArray<class AActor*>* ResultingActorsSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleEnvQueryContext", "ProvideActorsSet");

	Params::EndBattleEnvQueryContext_ProvideActorsSet Parms{};

	Parms.QuerierObject = QuerierObject;
	Parms.QuerierActor = QuerierActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultingActorsSet != nullptr)
		*ResultingActorsSet = std::move(Parms.ResultingActorsSet);
}


// Function EndGame.EndBattleEnvQueryContext.ProvideLocationsSet
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UObject*                          QuerierObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           QuerierActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ResultingLocationSet                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleEnvQueryContext::ProvideLocationsSet(class UObject* QuerierObject, class AActor* QuerierActor, TArray<struct FVector>* ResultingLocationSet) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleEnvQueryContext", "ProvideLocationsSet");

	Params::EndBattleEnvQueryContext_ProvideLocationsSet Parms{};

	Parms.QuerierObject = QuerierObject;
	Parms.QuerierActor = QuerierActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultingLocationSet != nullptr)
		*ResultingLocationSet = std::move(Parms.ResultingLocationSet);
}


// Function EndGame.EndStringListBox.SetDesiredCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDesiredCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringListBox::SetDesiredCount(int32 InDesiredCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringListBox", "SetDesiredCount");

	Params::EndStringListBox_SetDesiredCount Parms{};

	Parms.InDesiredCount = InDesiredCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringListBox.SetItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InItems                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UEndStringListBox::SetItems(const TArray<class FString>& InItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringListBox", "SetItems");

	Params::EndStringListBox_SetItems Parms{};

	Parms.InItems = std::move(InItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringListBox.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndStringListBox::GetSelectedIndex(int32 UserIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringListBox", "GetSelectedIndex");

	Params::EndStringListBox_GetSelectedIndex Parms{};

	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.ActivatePhysicalConstraint
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ActivatePhysicalConstraint(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ActivatePhysicalConstraint");

	Params::EndAIController_ActivatePhysicalConstraint Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ActivateResidentBlendMotion
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ActivateResidentBlendMotion(class FName Key, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ActivateResidentBlendMotion");

	Params::EndAIController_ActivateResidentBlendMotion Parms{};

	Parms.Key = Key;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.CorrectRotate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   correctTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::CorrectRotate(float correctTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "CorrectRotate");

	Params::EndAIController_CorrectRotate Parms{};

	Parms.correctTime = correctTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.DeactivatePhysicalConstraint
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::DeactivatePhysicalConstraint(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "DeactivatePhysicalConstraint");

	Params::EndAIController_DeactivatePhysicalConstraint Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.DeactivateResidentBlendMotion
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::DeactivateResidentBlendMotion(class FName Key, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "DeactivateResidentBlendMotion");

	Params::EndAIController_DeactivateResidentBlendMotion Parms{};

	Parms.Key = Key;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.GetAIFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAIInfoFlag                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::GetAIFlag(EAIInfoFlag InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetAIFlag");

	Params::EndAIController_GetAIFlag Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetAIParam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAIInfoParam                            InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndAIController::GetAIParam(EAIInfoParam InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetAIParam");

	Params::EndAIController_GetAIParam Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetCharacterLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndAIController::GetCharacterLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetCharacterLocation");

	Params::EndAIController_GetCharacterLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetCharacterRootLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndAIController::GetCharacterRootLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetCharacterRootLocation");

	Params::EndAIController_GetCharacterRootLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetCharacterRotation
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AEndAIController::GetCharacterRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetCharacterRotation");

	Params::EndAIController_GetCharacterRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetLocationAngle
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Loc                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndAIController::GetLocationAngle(const struct FVector& Loc, class AEndCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetLocationAngle");

	Params::EndAIController_GetLocationAngle Parms{};

	Parms.Loc = std::move(Loc);
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetLocationAngleAbs
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Loc                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndAIController::GetLocationAngleAbs(const struct FVector& Loc, class AEndCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetLocationAngleAbs");

	Params::EndAIController_GetLocationAngleAbs Parms{};

	Parms.Loc = std::move(Loc);
	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.IsAerial
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::IsAerial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "IsAerial");

	Params::EndAIController_IsAerial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.IsJumping
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::IsJumping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "IsJumping");

	Params::EndAIController_IsJumping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.IsLatestOtherPathBoader
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ContainSemi                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::IsLatestOtherPathBoader(bool ContainSemi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "IsLatestOtherPathBoader");

	Params::EndAIController_IsLatestOtherPathBoader Parms{};

	Parms.ContainSemi = ContainSemi;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.IsMoveModeMigration
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::IsMoveModeMigration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "IsMoveModeMigration");

	Params::EndAIController_IsMoveModeMigration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.IsValidAerialPoint
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::IsValidAerialPoint(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "IsValidAerialPoint");

	Params::EndAIController_IsValidAerialPoint Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.MoveToGround
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   MoveTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   groundTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   groundOffsetZ                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    checkNavArea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::MoveToGround(float MoveTime, float groundTime, float groundOffsetZ, bool checkNavArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "MoveToGround");

	Params::EndAIController_MoveToGround Parms{};

	Parms.MoveTime = MoveTime;
	Parms.groundTime = groundTime;
	Parms.groundOffsetZ = groundOffsetZ;
	Parms.checkNavArea = checkNavArea;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.MoveToGroundByGravity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EMoveToGroundHeightType                 heightType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   specifiedHeight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   groundOffsetZ                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GravityScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    checkNavArea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::MoveToGroundByGravity(EMoveToGroundHeightType heightType, float specifiedHeight, float groundOffsetZ, float GravityScale, float MaxVelocity, bool checkNavArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "MoveToGroundByGravity");

	Params::EndAIController_MoveToGroundByGravity Parms{};

	Parms.heightType = heightType;
	Parms.specifiedHeight = specifiedHeight;
	Parms.groundOffsetZ = groundOffsetZ;
	Parms.GravityScale = GravityScale;
	Parms.MaxVelocity = MaxVelocity;
	Parms.checkNavArea = checkNavArea;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.OnCompleteGraviticJump
// (Event, Public, BlueprintEvent)

void AEndAIController::OnCompleteGraviticJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "OnCompleteGraviticJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndAIController.OnCompleteJump
// (Event, Public, BlueprintEvent)

void AEndAIController::OnCompleteJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "OnCompleteJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndAIController.OverwriteGraviticJumpLandingLocation
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          overwriteLocation                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          overwriteLookAt                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::OverwriteGraviticJumpLandingLocation(const struct FVector& overwriteLocation, const struct FVector& overwriteLookAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "OverwriteGraviticJumpLandingLocation");

	Params::EndAIController_OverwriteGraviticJumpLandingLocation Parms{};

	Parms.overwriteLocation = std::move(overwriteLocation);
	Parms.overwriteLookAt = std::move(overwriteLookAt);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.OverwriteGraviticJumpLandingLocationAndForward
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          overwriteLocation                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          overwriteForward                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::OverwriteGraviticJumpLandingLocationAndForward(const struct FVector& overwriteLocation, const struct FVector& overwriteForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "OverwriteGraviticJumpLandingLocationAndForward");

	Params::EndAIController_OverwriteGraviticJumpLandingLocationAndForward Parms{};

	Parms.overwriteLocation = std::move(overwriteLocation);
	Parms.overwriteForward = std::move(overwriteForward);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.ResetAerialAccelerationMove
// (Final, Native, Public, BlueprintCallable)

void AEndAIController::ResetAerialAccelerationMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ResetAerialAccelerationMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ResetOtherWallLock
// (Native, Public, BlueprintCallable)

void AEndAIController::ResetOtherWallLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ResetOtherWallLock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ResetPrimaryAnimPack
// (Final, Native, Protected, BlueprintCallable)

void AEndAIController::ResetPrimaryAnimPack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ResetPrimaryAnimPack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SaveVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SaveVelocity(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SaveVelocity");

	Params::EndAIController_SaveVelocity Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetAerialFixTurn
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InFix                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLeapSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetAerialFixTurn(bool InFix, float InAngle, float InLeapSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetAerialFixTurn");

	Params::EndAIController_SetAerialFixTurn Parms{};

	Parms.InFix = InFix;
	Parms.InAngle = InAngle;
	Parms.InLeapSpeed = InLeapSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetAIFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAIInfoFlag                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetAIFlag(EAIInfoFlag InType, bool InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetAIFlag");

	Params::EndAIController_SetAIFlag Parms{};

	Parms.InType = InType;
	Parms.InFlag = InFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetAIFlagFromOther
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAIInfoFlag                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetAIFlagFromOther(EAIInfoFlag InType, bool InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetAIFlagFromOther");

	Params::EndAIController_SetAIFlagFromOther Parms{};

	Parms.InType = InType;
	Parms.InFlag = InFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetAIParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAIInfoParam                            InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InParam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetAIParam(EAIInfoParam InType, float InParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetAIParam");

	Params::EndAIController_SetAIParam Parms{};

	Parms.InType = InType;
	Parms.InParam = InParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetCharacterLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetCharacterLocation(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetCharacterLocation");

	Params::EndAIController_SetCharacterLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetCharacterRotation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         InRotation                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AEndAIController::SetCharacterRotation(const struct FRotator& InRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetCharacterRotation");

	Params::EndAIController_SetCharacterRotation Parms{};

	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetForceAerialTurn
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetForceAerialTurn(bool InForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetForceAerialTurn");

	Params::EndAIController_SetForceAerialTurn Parms{};

	Parms.InForce = InForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetMoveMode
// (Native, Public, BlueprintCallable)
// Parameters:
// EEndAiMoveMode                          InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Skip                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetMoveMode(EEndAiMoveMode InType, bool Skip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetMoveMode");

	Params::EndAIController_SetMoveMode Parms{};

	Parms.InType = InType;
	Parms.Skip = Skip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetNextJumpMotion
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             Begin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Loop                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetNextJumpMotion(class FName Begin, class FName Loop, class FName End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetNextJumpMotion");

	Params::EndAIController_SetNextJumpMotion Parms{};

	Parms.Begin = Begin;
	Parms.Loop = Loop;
	Parms.End = End;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetNextJumpWallCollision
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bHit                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetNextJumpWallCollision(bool bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetNextJumpWallCollision");

	Params::EndAIController_SetNextJumpWallCollision Parms{};

	Parms.bHit = bHit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetOverrideAerialHeight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetOverrideAerialHeight(bool InOverride, float InHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetOverrideAerialHeight");

	Params::EndAIController_SetOverrideAerialHeight Parms{};

	Parms.InOverride = InOverride;
	Parms.InHeight = InHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetOverrideJumpBias
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetOverrideJumpBias(bool InOverride, float InBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetOverrideJumpBias");

	Params::EndAIController_SetOverrideJumpBias Parms{};

	Parms.InOverride = InOverride;
	Parms.InBias = InBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetOverrideJumpTime
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetOverrideJumpTime(bool InOverride, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetOverrideJumpTime");

	Params::EndAIController_SetOverrideJumpTime Parms{};

	Parms.InOverride = InOverride;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetOverrideNextJumpForward
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForward                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetOverrideNextJumpForward(bool InOverride, const struct FVector& InForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetOverrideNextJumpForward");

	Params::EndAIController_SetOverrideNextJumpForward Parms{};

	Parms.InOverride = InOverride;
	Parms.InForward = std::move(InForward);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetOverrideTurn
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetOverrideTurn(bool InOverride, float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetOverrideTurn");

	Params::EndAIController_SetOverrideTurn Parms{};

	Parms.InOverride = InOverride;
	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.SetPrimaryAnimPack
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::SetPrimaryAnimPack(const class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "SetPrimaryAnimPack");

	Params::EndAIController_SetPrimaryAnimPack Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.StopMove
// (Native, Public, BlueprintCallable)

void AEndAIController::StopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "StopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToEndJump
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InTrace                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsTraceStartMaxHeightOwn                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToEndJump(bool InTrace, bool IsTraceStartMaxHeightOwn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToEndJump");

	Params::EndAIController_ToEndJump Parms{};

	Parms.InTrace = InTrace;
	Parms.IsTraceStartMaxHeightOwn = IsTraceStartMaxHeightOwn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToGraviticJump
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          landingLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PeakBias                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   turningDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          UpVector                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          forwardVector                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToGraviticJump(const struct FVector& landingLocation, float Height, float PeakBias, float turningDuration, const struct FVector& UpVector, const struct FVector& forwardVector, bool bToTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToGraviticJump");

	Params::EndAIController_ToGraviticJump Parms{};

	Parms.landingLocation = std::move(landingLocation);
	Parms.Height = Height;
	Parms.PeakBias = PeakBias;
	Parms.turningDuration = turningDuration;
	Parms.UpVector = std::move(UpVector);
	Parms.forwardVector = std::move(forwardVector);
	Parms.bToTerrain = bToTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToGraviticLookAtJump
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          landingLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PeakBias                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   turningDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          lookAt                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToGraviticLookAtJump(const struct FVector& landingLocation, float Height, float PeakBias, float turningDuration, const struct FVector& lookAt, bool bToTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToGraviticLookAtJump");

	Params::EndAIController_ToGraviticLookAtJump Parms{};

	Parms.landingLocation = std::move(landingLocation);
	Parms.Height = Height;
	Parms.PeakBias = PeakBias;
	Parms.turningDuration = turningDuration;
	Parms.lookAt = std::move(lookAt);
	Parms.bToTerrain = bToTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToJump
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToJump(bool bToTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToJump");

	Params::EndAIController_ToJump Parms{};

	Parms.bToTerrain = bToTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToJumpFromName
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToJumpFromName(class FName InName, bool bToTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToJumpFromName");

	Params::EndAIController_ToJumpFromName Parms{};

	Parms.InName = InName;
	Parms.bToTerrain = bToTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToJumpFromNav
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AEndNavModifierVolume*            InNav                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToJumpFromNav(class AEndNavModifierVolume* InNav, bool bToTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToJumpFromNav");

	Params::EndAIController_ToJumpFromNav Parms{};

	Parms.InNav = InNav;
	Parms.bToTerrain = bToTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.ToJumpLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRotateYaw                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          lookAt                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocationShift                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndAIController::ToJumpLocation(const struct FVector& Location, bool bRotateYaw, const struct FVector& lookAt, bool bToTerrain, bool bLocationShift)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "ToJumpLocation");

	Params::EndAIController_ToJumpLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.bRotateYaw = bRotateYaw;
	Parms.lookAt = std::move(lookAt);
	Parms.bToTerrain = bToTerrain;
	Parms.bLocationShift = bLocationShift;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAIController.GetLatestMoveMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEndAiMoveMode                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndAiMoveMode AEndAIController::GetLatestMoveMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetLatestMoveMode");

	Params::EndAIController_GetLatestMoveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.GetMoveMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEndAiMoveMode                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndAiMoveMode AEndAIController::GetMoveMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "GetMoveMode");

	Params::EndAIController_GetMoveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAIController.IsMoveMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEndAiMoveMode                          InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndAIController::IsMoveMode(EEndAiMoveMode InType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAIController", "IsMoveMode");

	Params::EndAIController_IsMoveMode Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBorder.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UEndBorder::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "GetDynamicMaterial");

	Params::EndBorder_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBorder.SetBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndBorder::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetBrush");

	Params::EndBorder_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetBrushColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InBrushColor                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetBrushColor(const struct FLinearColor& InBrushColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetBrushColor");

	Params::EndBorder_SetBrushColor Parms{};

	Parms.InBrushColor = std::move(InBrushColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetBrushFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetBrushFromAsset");

	Params::EndBorder_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetBrushFromMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetBrushFromMaterial");

	Params::EndBorder_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetBrushFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetBrushFromTexture(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetBrushFromTexture");

	Params::EndBorder_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetContentColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InContentColorAndOpacity                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetContentColorAndOpacity(const struct FLinearColor& InContentColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetContentColorAndOpacity");

	Params::EndBorder_SetContentColorAndOpacity Parms{};

	Parms.InContentColorAndOpacity = std::move(InContentColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetDesiredSizeScale
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InScale                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetDesiredSizeScale(const struct FVector2D& InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetDesiredSizeScale");

	Params::EndBorder_SetDesiredSizeScale Parms{};

	Parms.InScale = std::move(InScale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetHorizontalAlignment");

	Params::EndBorder_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndBorder::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetPadding");

	Params::EndBorder_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorder.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorder::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorder", "SetVerticalAlignment");

	Params::EndBorder_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.DisableKineDriver
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::DisableKineDriver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "DisableKineDriver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.DisableRagdollPhysics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeOutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCenterActorToHip                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResetRelativeTransform                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::DisableRagdollPhysics(float FadeOutTime, bool bCenterActorToHip, bool bResetRelativeTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "DisableRagdollPhysics");

	Params::EndCharacter_DisableRagdollPhysics Parms{};

	Parms.FadeOutTime = FadeOutTime;
	Parms.bCenterActorToHip = bCenterActorToHip;
	Parms.bResetRelativeTransform = bResetRelativeTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.EnableKineDriver
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::EnableKineDriver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "EnableKineDriver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.EnableRagdollPhysics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisableMovement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceDisableBodyDriver                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::EnableRagdollPhysics(bool bDisableMovement, bool bForceDisableBodyDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "EnableRagdollPhysics");

	Params::EndCharacter_EnableRagdollPhysics Parms{};

	Parms.bDisableMovement = bDisableMovement;
	Parms.bForceDisableBodyDriver = bForceDisableBodyDriver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.GetEQSComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEndEnvQueryComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEndEnvQueryComponent* AEndCharacter::GetEQSComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "GetEQSComponent");

	Params::EndCharacter_GetEQSComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCharacter.GetFeetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndCharacter::GetFeetLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "GetFeetLocation");

	Params::EndCharacter_GetFeetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCharacter.GetPointDirectionFromOwnPosture
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndCharacter::GetPointDirectionFromOwnPosture(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "GetPointDirectionFromOwnPosture");

	Params::EndCharacter_GetPointDirectionFromOwnPosture Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCharacter.GetPointRotationFromOwnPosture
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AEndCharacter::GetPointRotationFromOwnPosture(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "GetPointRotationFromOwnPosture");

	Params::EndCharacter_GetPointRotationFromOwnPosture Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCharacter.OnBeginCutSceneToBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             CutsceneID                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   animBlendTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ikBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::OnBeginCutSceneToBP(const class FName& CutsceneID, float animBlendTime, float ikBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "OnBeginCutSceneToBP");

	Params::EndCharacter_OnBeginCutSceneToBP Parms{};

	Parms.CutsceneID = CutsceneID;
	Parms.animBlendTime = animBlendTime;
	Parms.ikBlendTime = ikBlendTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndCharacter.OnBodyDriverRagdollImpact
// (Final, Native, Public)

void AEndCharacter::OnBodyDriverRagdollImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "OnBodyDriverRagdollImpact");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.OnBodyDriverRagdollReadyForRemoval
// (Final, Native, Public)

void AEndCharacter::OnBodyDriverRagdollReadyForRemoval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "OnBodyDriverRagdollReadyForRemoval");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.OnEndCutSceneToBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             CutsceneID                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   animBlendTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ikBlendTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::OnEndCutSceneToBP(const class FName& CutsceneID, float animBlendTime, float ikBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "OnEndCutSceneToBP");

	Params::EndCharacter_OnEndCutSceneToBP Parms{};

	Parms.CutsceneID = CutsceneID;
	Parms.animBlendTime = animBlendTime;
	Parms.ikBlendTime = ikBlendTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndCharacter.OnShowBreakMesh
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             meshName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::OnShowBreakMesh(const class FName& meshName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "OnShowBreakMesh");

	Params::EndCharacter_OnShowBreakMesh Parms{};

	Parms.meshName = meshName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndCharacter.OverrideDefaultEmissiveColor
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::OverrideDefaultEmissiveColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "OverrideDefaultEmissiveColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.PlayEmissiveColorAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ColorPaletteId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndEmissiveModifierType                ModifierType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndEmissiveCurveType                   CurveType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndOffset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::PlayEmissiveColorAnimation(class FName RequestID, class FName ColorPaletteId, EEndEmissiveModifierType ModifierType, EEndEmissiveCurveType CurveType, bool bLoop, float Duration, float BlendInTime, float BlendOutTime, float StartOffset, float EndOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "PlayEmissiveColorAnimation");

	Params::EndCharacter_PlayEmissiveColorAnimation Parms{};

	Parms.RequestID = RequestID;
	Parms.ColorPaletteId = ColorPaletteId;
	Parms.ModifierType = ModifierType;
	Parms.CurveType = CurveType;
	Parms.bLoop = bLoop;
	Parms.Duration = Duration;
	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;
	Parms.StartOffset = StartOffset;
	Parms.EndOffset = EndOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.RequestActivateRagdoll
// (Final, Native, Public)

void AEndCharacter::RequestActivateRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "RequestActivateRagdoll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.RequestDeactivateRagdoll
// (Final, Native, Public)

void AEndCharacter::RequestDeactivateRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "RequestDeactivateRagdoll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.RequestRagdollCollisionOff
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::RequestRagdollCollisionOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "RequestRagdollCollisionOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.RequestRagdollPostActivation
// (Final, Native, Public)

void AEndCharacter::RequestRagdollPostActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "RequestRagdollPostActivation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.ResetDirectEmissiveColor
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::ResetDirectEmissiveColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "ResetDirectEmissiveColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.ResetEndCutSceneCorrectionHeight
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::ResetEndCutSceneCorrectionHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "ResetEndCutSceneCorrectionHeight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.ResetRagdollPhysics
// (Final, Native, Public, BlueprintCallable)

void AEndCharacter::ResetRagdollPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "ResetRagdollPhysics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.SetChildMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             meshName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Label                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::SetChildMesh(class FName meshName, class FName Label)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "SetChildMesh");

	Params::EndCharacter_SetChildMesh Parms{};

	Parms.meshName = meshName;
	Parms.Label = Label;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.SetDirectEmissiveColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ColorPaletteId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IntensityBias                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::SetDirectEmissiveColor(class FName ColorPaletteId, float IntensityBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "SetDirectEmissiveColor");

	Params::EndCharacter_SetDirectEmissiveColor Parms{};

	Parms.ColorPaletteId = ColorPaletteId;
	Parms.IntensityBias = IntensityBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.SetIgnoreRagdollPhysics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::SetIgnoreRagdollPhysics(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "SetIgnoreRagdollPhysics");

	Params::EndCharacter_SetIgnoreRagdollPhysics Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.StopEmissiveColorAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndCharacter::StopEmissiveColorAnimation(class FName RequestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "StopEmissiveColorAnimation");

	Params::EndCharacter_StopEmissiveColorAnimation Parms{};

	Parms.RequestID = RequestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.UseHookShotSimple
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          landingLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         LandingRotation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AEndCharacter::UseHookShotSimple(const struct FVector& landingLocation, const struct FRotator& LandingRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "UseHookShotSimple");

	Params::EndCharacter_UseHookShotSimple Parms{};

	Parms.landingLocation = std::move(landingLocation);
	Parms.LandingRotation = std::move(LandingRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCharacter.IsPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndCharacter::IsPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "IsPlayer");

	Params::EndCharacter_IsPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCharacter.IsRagdollPhysicsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndCharacter::IsRagdollPhysicsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCharacter", "IsRagdollPhysicsEnabled");

	Params::EndCharacter_IsRagdollPhysicsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleNavQueryContext.GetTargetLocationContext
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndBattleNavQueryContext::GetTargetLocationContext(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleNavQueryContext", "GetTargetLocationContext");

	Params::EndBattleNavQueryContext_GetTargetLocationContext Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleNavQueryContext.ProvideSingleLocation
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          QuerierObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           QuerierActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ResultingLocation                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleNavQueryContext::ProvideSingleLocation(class UObject* QuerierObject, class AActor* QuerierActor, struct FVector* ResultingLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleNavQueryContext", "ProvideSingleLocation");

	Params::EndBattleNavQueryContext_ProvideSingleLocation Parms{};

	Parms.QuerierObject = QuerierObject;
	Parms.QuerierActor = QuerierActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultingLocation != nullptr)
		*ResultingLocation = std::move(Parms.ResultingLocation);
}


// Function EndGame.EndTriggerBox.OnBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEndTriggerBox::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTriggerBox", "OnBeginOverlap");

	Params::EndTriggerBox_OnBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTriggerBox.OnEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndTriggerBox::OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTriggerBox", "OnEndOverlap");

	Params::EndTriggerBox_OnEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleSceneBlueprint.AddStatusChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             CharaName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EEndBattleStatusChangeType>      Types                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::AddStatusChange(const class FName CharaName, const TArray<EEndBattleStatusChangeType>& Types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "AddStatusChange");

	Params::EndBattleSceneBlueprint_AddStatusChange Parms{};

	Parms.CharaName = CharaName;
	Parms.Types = std::move(Types);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.BattleSceneDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::BattleSceneDelay(float Duration, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "BattleSceneDelay");

	Params::EndBattleSceneBlueprint_BattleSceneDelay Parms{};

	Parms.Duration = Duration;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleSceneBlueprint.ChangePhase
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::ChangePhase(int32 _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "ChangePhase");

	Params::EndBattleSceneBlueprint_ChangePhase Parms{};

	Parms._phase = _phase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.ConvertMultiTalkPlayTriggerID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TalkPlayTriggerId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleSceneBlueprint::ConvertMultiTalkPlayTriggerID(class FName TalkPlayTriggerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "ConvertMultiTalkPlayTriggerID");

	Params::EndBattleSceneBlueprint_ConvertMultiTalkPlayTriggerID Parms{};

	Parms.TalkPlayTriggerId = TalkPlayTriggerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleSceneBlueprint.ForceAIPCUseAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetPartsID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::ForceAIPCUseAbility(EPlayerType PlayerType, class FName AbilityID, class AEndCharacter* Target, class FName TargetPartsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "ForceAIPCUseAbility");

	Params::EndBattleSceneBlueprint_ForceAIPCUseAbility Parms{};

	Parms.PlayerType = PlayerType;
	Parms.AbilityID = AbilityID;
	Parms.Target = Target;
	Parms.TargetPartsID = TargetPartsID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleSceneBlueprint.OnBeginLinkCommand
// (Event, Public, BlueprintEvent)

void AEndBattleSceneBlueprint::OnBeginLinkCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnBeginLinkCommand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleSceneBlueprint.OnBeginTalkTriggerBoxCollide
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TriggerBoxActorName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CollideCharaName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnBeginTalkTriggerBoxCollide(class FName TriggerBoxActorName, class FName CollideCharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnBeginTalkTriggerBoxCollide");

	Params::EndBattleSceneBlueprint_OnBeginTalkTriggerBoxCollide Parms{};

	Parms.TriggerBoxActorName = TriggerBoxActorName;
	Parms.CollideCharaName = CollideCharaName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnCharaPartsBreak
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CauserCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BrokenCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             partsID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CategoryID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CategoryBreakCount                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnCharaPartsBreak(class FName CauserCharaName, class FName BrokenCharaName, class FName partsID, class FName CategoryID, int32 CategoryBreakCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnCharaPartsBreak");

	Params::EndBattleSceneBlueprint_OnCharaPartsBreak Parms{};

	Parms.CauserCharaName = CauserCharaName;
	Parms.BrokenCharaName = BrokenCharaName;
	Parms.partsID = partsID;
	Parms.CategoryID = CategoryID;
	Parms.CategoryBreakCount = CategoryBreakCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnCharaPartsDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CauserCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamagedCharaName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             partsID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CategoryID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RemainHP                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RemainHPPer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnCharaPartsDamage(class FName CauserCharaName, class FName DamagedCharaName, class FName partsID, class FName CategoryID, int32 RemainHP, float RemainHPPer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnCharaPartsDamage");

	Params::EndBattleSceneBlueprint_OnCharaPartsDamage Parms{};

	Parms.CauserCharaName = CauserCharaName;
	Parms.DamagedCharaName = DamagedCharaName;
	Parms.partsID = partsID;
	Parms.CategoryID = CategoryID;
	Parms.RemainHP = RemainHP;
	Parms.RemainHPPer = RemainHPPer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnCharaSpecialStatusChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             ownerCharaName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecialStatusChangeID                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StateId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           Params_0                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     ParamIDs                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ParamActors                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnCharaSpecialStatusChange(const class FName& ownerCharaName, const class FName& SpecialStatusChangeID, EEndBattleSpecialStatusChangeType Type, const class FName& StateId, const TArray<float>& Params_0, const TArray<class FName>& ParamIDs, const TArray<class AActor*>& ParamActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnCharaSpecialStatusChange");

	Params::EndBattleSceneBlueprint_OnCharaSpecialStatusChange Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.SpecialStatusChangeID = SpecialStatusChangeID;
	Parms.Type = Type;
	Parms.StateId = StateId;
	Parms.Params_0 = std::move(Params_0);
	Parms.ParamIDs = std::move(ParamIDs);
	Parms.ParamActors = std::move(ParamActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnCharaSyncAction
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             AttackedCharaName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReceivedCharaName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StateId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StateCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             syncActionID                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CauserCharaName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnCharaSyncAction(const class FName& AttackedCharaName, const class FName& ReceivedCharaName, const class FName& StateId, int32 StateCount, const class FName& syncActionID, const class FName& CauserCharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnCharaSyncAction");

	Params::EndBattleSceneBlueprint_OnCharaSyncAction Parms{};

	Parms.AttackedCharaName = AttackedCharaName;
	Parms.ReceivedCharaName = ReceivedCharaName;
	Parms.StateId = StateId;
	Parms.StateCount = StateCount;
	Parms.syncActionID = syncActionID;
	Parms.CauserCharaName = CauserCharaName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnCollideBattleTalkColideBox
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             ColideBoxName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndDataTableBattleDamageSource  DamageSourceDataTable                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnCollideBattleTalkColideBox(class FName ColideBoxName, class AEndCharacter* ownerChara, class FName DamageSourceID, const struct FEndDataTableBattleDamageSource& DamageSourceDataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnCollideBattleTalkColideBox");

	Params::EndBattleSceneBlueprint_OnCollideBattleTalkColideBox Parms{};

	Parms.ColideBoxName = ColideBoxName;
	Parms.ownerChara = ownerChara;
	Parms.DamageSourceID = DamageSourceID;
	Parms.DamageSourceDataTable = std::move(DamageSourceDataTable);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnCompletedTalkState
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TalkStateId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnCompletedTalkState(class FName TalkStateId, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnCompletedTalkState");

	Params::EndBattleSceneBlueprint_OnCompletedTalkState Parms{};

	Parms.TalkStateId = TalkStateId;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnDLCSummonUltimateMagicEnd
// (Event, Public, BlueprintEvent)

void AEndBattleSceneBlueprint::OnDLCSummonUltimateMagicEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnDLCSummonUltimateMagicEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleSceneBlueprint.OnEndFreeAct
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnEndFreeAct(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEndFreeAct");

	Params::EndBattleSceneBlueprint_OnEndFreeAct Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnEndLinkCommand
// (Event, Public, BlueprintEvent)

void AEndBattleSceneBlueprint::OnEndLinkCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEndLinkCommand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleSceneBlueprint.OnEndRailCamera
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             RailCameraID                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnEndRailCamera(const class FName& RailCameraID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEndRailCamera");

	Params::EndBattleSceneBlueprint_OnEndRailCamera Parms{};

	Parms.RailCameraID = RailCameraID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnEndTalkTriggerBoxCollide
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TriggerBoxActorName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CollideCharaName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnEndTalkTriggerBoxCollide(class FName TriggerBoxActorName, class FName CollideCharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEndTalkTriggerBoxCollide");

	Params::EndBattleSceneBlueprint_OnEndTalkTriggerBoxCollide Parms{};

	Parms.TriggerBoxActorName = TriggerBoxActorName;
	Parms.CollideCharaName = CollideCharaName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnEntryBattleScene
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             BattleSceneID                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndDataTableBattleScene         dataTableBattleScene                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnEntryBattleScene(const class FName& BattleSceneID, const struct FEndDataTableBattleScene& dataTableBattleScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEntryBattleScene");

	Params::EndBattleSceneBlueprint_OnEntryBattleScene Parms{};

	Parms.BattleSceneID = BattleSceneID;
	Parms.dataTableBattleScene = std::move(dataTableBattleScene);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnEntryBattleSceneAfter
// (Event, Public, BlueprintEvent)

void AEndBattleSceneBlueprint::OnEntryBattleSceneAfter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEntryBattleSceneAfter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleSceneBlueprint.OnEntryBattleSceneWave
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             BattleSceneID                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             baseBattleSceneId                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndDataTableBattleScene         dataTableBattleScene                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnEntryBattleSceneWave(const class FName& BattleSceneID, const class FName& baseBattleSceneId, const struct FEndDataTableBattleScene& dataTableBattleScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnEntryBattleSceneWave");

	Params::EndBattleSceneBlueprint_OnEntryBattleSceneWave Parms{};

	Parms.BattleSceneID = BattleSceneID;
	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.dataTableBattleScene = std::move(dataTableBattleScene);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnExitBattleScene
// (Event, Public, BlueprintEvent)

void AEndBattleSceneBlueprint::OnExitBattleScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnExitBattleScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleSceneBlueprint.OnIncrementBattleCountPerID
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CauserCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnIncrementBattleCountPerID(class FName CauserCharaName, class FName TargetCharaName, EEndBattleCountLogType Type, class FName ID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnIncrementBattleCountPerID");

	Params::EndBattleSceneBlueprint_OnIncrementBattleCountPerID Parms{};

	Parms.CauserCharaName = CauserCharaName;
	Parms.TargetCharaName = TargetCharaName;
	Parms.Type = Type;
	Parms.ID = ID;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnMetaMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnMetaMessage(const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnMetaMessage");

	Params::EndBattleSceneBlueprint_OnMetaMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnMotionMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CharaName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             motionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnMotionMessage(class FName CharaName, class FName motionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnMotionMessage");

	Params::EndBattleSceneBlueprint_OnMotionMessage Parms{};

	Parms.CharaName = CharaName;
	Parms.motionName = motionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnReadyBattleTalk
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             BattleSceneID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnReadyBattleTalk(class FName BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnReadyBattleTalk");

	Params::EndBattleSceneBlueprint_OnReadyBattleTalk Parms{};

	Parms.BattleSceneID = BattleSceneID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnShowMenuGameOver
// (Event, Public, BlueprintEvent)

void AEndBattleSceneBlueprint::OnShowMenuGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnShowMenuGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleSceneBlueprint.OnTakeDamage
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CauserCharaName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamagedCharaName                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBind                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGuard                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDodge                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             hitBoneName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAttributeHit                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttributeType                 DmgSrcAttributeType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   justHitRotYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hitPosition                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHeal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnTakeDamage(int32 Damage, const class FName& CauserCharaName, const class FName& DamagedCharaName, const class FName& AbilityID, bool bBind, bool bGuard, bool bDodge, const class FName& hitBoneName, bool bAttributeHit, const class FName& DamageSourceID, EEndBattleAttributeType DmgSrcAttributeType, float justHitRotYaw, const struct FVector& hitPosition, bool bHeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnTakeDamage");

	Params::EndBattleSceneBlueprint_OnTakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.CauserCharaName = CauserCharaName;
	Parms.DamagedCharaName = DamagedCharaName;
	Parms.AbilityID = AbilityID;
	Parms.bBind = bBind;
	Parms.bGuard = bGuard;
	Parms.bDodge = bDodge;
	Parms.hitBoneName = hitBoneName;
	Parms.bAttributeHit = bAttributeHit;
	Parms.DamageSourceID = DamageSourceID;
	Parms.DmgSrcAttributeType = DmgSrcAttributeType;
	Parms.justHitRotYaw = justHitRotYaw;
	Parms.hitPosition = std::move(hitPosition);
	Parms.bHeal = bHeal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.OnTakeDamageSpecialStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             characterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSpecialStatusChangeType       specialStatus                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             abilityName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   damageParcent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::OnTakeDamageSpecialStatus(class FName characterName, EEndBattleSpecialStatusChangeType specialStatus, class FName abilityName, float damageParcent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "OnTakeDamageSpecialStatus");

	Params::EndBattleSceneBlueprint_OnTakeDamageSpecialStatus Parms{};

	Parms.characterName = characterName;
	Parms.specialStatus = specialStatus;
	Parms.abilityName = abilityName;
	Parms.damageParcent = damageParcent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.RemoveStatusChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             CharaName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EEndBattleStatusChangeType>      Types                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::RemoveStatusChange(const class FName CharaName, const TArray<EEndBattleStatusChangeType>& Types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "RemoveStatusChange");

	Params::EndBattleSceneBlueprint_RemoveStatusChange Parms{};

	Parms.CharaName = CharaName;
	Parms.Types = std::move(Types);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleSceneBlueprint.SetAIPCControllerTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::SetAIPCControllerTick(EPlayerType PlayerType, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "SetAIPCControllerTick");

	Params::EndBattleSceneBlueprint_SetAIPCControllerTick Parms{};

	Parms.PlayerType = PlayerType;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleSceneBlueprint.SetHPByBattleSceneCharacterIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   srcCharacterIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   destCharacterIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::SetHPByBattleSceneCharacterIndex(int32 srcCharacterIndex, int32 destCharacterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "SetHPByBattleSceneCharacterIndex");

	Params::EndBattleSceneBlueprint_SetHPByBattleSceneCharacterIndex Parms{};

	Parms.srcCharacterIndex = srcCharacterIndex;
	Parms.destCharacterIndex = destCharacterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleSceneBlueprint.SetPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::SetPhase(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "SetPhase");

	Params::EndBattleSceneBlueprint_SetPhase Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleSceneBlueprint.SwitchCharaState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EEndBattleSceneCharaStateType           State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExecInState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleSceneBlueprint::SwitchCharaState(EEndBattleSceneCharaStateType* State, class FName CharaName, bool bExecInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "SwitchCharaState");

	Params::EndBattleSceneBlueprint_SwitchCharaState Parms{};

	Parms.CharaName = CharaName;
	Parms.bExecInState = bExecInState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (State != nullptr)
		*State = Parms.State;
}


// Function EndGame.EndBattleSceneBlueprint.GetPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleSceneBlueprint::GetPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleSceneBlueprint", "GetPhase");

	Params::EndBattleSceneBlueprint_GetPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPieImage.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UEndPieImage::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "GetDynamicMaterial");

	Params::EndPieImage_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPieImage.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetBlendMode");

	Params::EndPieImage_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndPieImage::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetBrush");

	Params::EndPieImage_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetBrushFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetBrushFromAsset");

	Params::EndPieImage_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetBrushFromMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetBrushFromMaterial");

	Params::EndPieImage_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetBrushFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetBrushFromTexture");

	Params::EndPieImage_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetBrushFromTextureDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetBrushFromTextureDynamic");

	Params::EndPieImage_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetColorAndOpacity");

	Params::EndPieImage_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetEndAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetEndAngle(float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetEndAngle");

	Params::EndPieImage_SetEndAngle Parms{};

	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetOpacity");

	Params::EndPieImage_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPieImage.SetStartAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPieImage::SetStartAngle(float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPieImage", "SetStartAngle");

	Params::EndPieImage_SetStartAngle Parms{};

	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFeelerBarrierActor.Play
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndFeelerBarrierActor::Play(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFeelerBarrierActor", "Play");

	Params::EndFeelerBarrierActor_Play Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFeelerBarrierActor.Stop
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndFeelerBarrierActor::Stop(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFeelerBarrierActor", "Stop");

	Params::EndFeelerBarrierActor_Stop Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuestMenu.OnQuestScrollBoxPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndQuestMenu::OnQuestScrollBoxPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuestMenu", "OnQuestScrollBoxPressedItem");

	Params::EndQuestMenu_OnQuestScrollBoxPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuestMenu.OnQuestScrollBoxSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndQuestMenu::OnQuestScrollBoxSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuestMenu", "OnQuestScrollBoxSetupItem");

	Params::EndQuestMenu_OnQuestScrollBoxSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPlayerStatusPanel.OnSetupStatusPanel
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPlayerStatusPanel::OnSetupStatusPanel(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPlayerStatusPanel", "OnSetupStatusPanel");

	Params::EndPlayerStatusPanel_OnSetupStatusPanel Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndEmissiveControlActor.UpdateControllerComponent
// (Final, Native, Public, BlueprintCallable)

void AEndEmissiveControlActor::UpdateControllerComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEmissiveControlActor", "UpdateControllerComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEmissiveControlActor.GetControllerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEndEmissiveControlComponent*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEndEmissiveControlComponent* AEndEmissiveControlActor::GetControllerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEmissiveControlActor", "GetControllerComponent");

	Params::EndEmissiveControlActor_GetControllerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.ApplyBoxType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBreakBoxMiniGameBoxType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndBreakBoxMiniGameBoxType AEndActionBreakBoxMiniGameBoxActor::ApplyBoxType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "ApplyBoxType");

	Params::EndActionBreakBoxMiniGameBoxActor_ApplyBoxType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.Deactive_TimerFunc
// (Final, Native, Private)

void AEndActionBreakBoxMiniGameBoxActor::Deactive_TimerFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "Deactive_TimerFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.GetBoxType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndBreakBoxMiniGameBoxType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndBreakBoxMiniGameBoxType AEndActionBreakBoxMiniGameBoxActor::GetBoxType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "GetBoxType");

	Params::EndActionBreakBoxMiniGameBoxActor_GetBoxType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.Hit_TimerFunc
// (Final, Native, Private)

void AEndActionBreakBoxMiniGameBoxActor::Hit_TimerFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "Hit_TimerFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.OnComponentHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEndActionBreakBoxMiniGameBoxActor::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "OnComponentHit");

	Params::EndActionBreakBoxMiniGameBoxActor_OnComponentHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.OnEndImpulseInterval
// (Final, Native, Private)

void AEndActionBreakBoxMiniGameBoxActor::OnEndImpulseInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "OnEndImpulseInterval");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.PlayHitSe_TimerFunc
// (Final, Native, Private)

void AEndActionBreakBoxMiniGameBoxActor::PlayHitSe_TimerFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "PlayHitSe_TimerFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.SetEffectDummyPoint
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EEndBreakBoxMiniGameEffect              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndActionBreakBoxMiniGameBoxActor::SetEffectDummyPoint(EEndBreakBoxMiniGameEffect Type, class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "SetEffectDummyPoint");

	Params::EndActionBreakBoxMiniGameBoxActor_SetEffectDummyPoint Parms{};

	Parms.Type = Type;
	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.SetImpulseRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndActionBreakBoxMiniGameBoxActor::SetImpulseRadius(float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "SetImpulseRadius");

	Params::EndActionBreakBoxMiniGameBoxActor_SetImpulseRadius Parms{};

	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionBreakBoxMiniGameBoxActor.SetReferenceStaticMesh
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EEndBreakBoxMiniGameBoxType             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMeshComponent*             StaticMeshComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndActionBreakBoxMiniGameBoxActor::SetReferenceStaticMesh(EEndBreakBoxMiniGameBoxType Type, class UStaticMeshComponent* StaticMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionBreakBoxMiniGameBoxActor", "SetReferenceStaticMesh");

	Params::EndActionBreakBoxMiniGameBoxActor_SetReferenceStaticMesh Parms{};

	Parms.Type = Type;
	Parms.StaticMeshComp = StaticMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnAcquisionSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnAcquisionSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnAcquisionSetup");

	Params::EndEnemyDetailWindow_OnAcquisionSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnBattleAbilitySetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnBattleAbilitySetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnBattleAbilitySetup");

	Params::EndEnemyDetailWindow_OnBattleAbilitySetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnBattleLogSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnBattleLogSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnBattleLogSetup");

	Params::EndEnemyDetailWindow_OnBattleLogSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnBufferSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnBufferSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnBufferSetup");

	Params::EndEnemyDetailWindow_OnBufferSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnBuffIconSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnBuffIconSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnBuffIconSetup");

	Params::EndEnemyDetailWindow_OnBuffIconSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnDebuffIconSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnDebuffIconSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnDebuffIconSetup");

	Params::EndEnemyDetailWindow_OnDebuffIconSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnDropItemListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnDropItemListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnDropItemListSetupItem");

	Params::EndEnemyDetailWindow_OnDropItemListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnRareDropItemListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnRareDropItemListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnRareDropItemListSetupItem");

	Params::EndEnemyDetailWindow_OnRareDropItemListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnResistanceIconListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnResistanceIconListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnResistanceIconListSetupItem");

	Params::EndEnemyDetailWindow_OnResistanceIconListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnResistanceListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnResistanceListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnResistanceListSetupItem");

	Params::EndEnemyDetailWindow_OnResistanceListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyDetailWindow.OnStealListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyDetailWindow::OnStealListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyDetailWindow", "OnStealListSetupItem");

	Params::EndEnemyDetailWindow_OnStealListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionMako5TimingInputArrowWidget.OnInAnimationFinished
// (Final, Native, Private)

void UEndActionMako5TimingInputArrowWidget::OnInAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionMako5TimingInputArrowWidget", "OnInAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionMako5TimingInputWidget.OnMainGuideAnimationFinished
// (Final, Native, Private)

void UEndActionMako5TimingInputWidget::OnMainGuideAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionMako5TimingInputWidget", "OnMainGuideAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActionSlum7DartsRankWindowWidget.OnSetupItems
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndActionSlum7DartsRankWindowWidget::OnSetupItems(class UWidget* ItemWidget, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndActionSlum7DartsRankWindowWidget", "OnSetupItems");

	Params::EndActionSlum7DartsRankWindowWidget_OnSetupItems Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBikeTriggerBox.OnOverlapBegin
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBikeTriggerBox::OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBikeTriggerBox", "OnOverlapBegin");

	Params::EndBikeTriggerBox_OnOverlapBegin Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBikeTriggerBox.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBikeTriggerBox::OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBikeTriggerBox", "OnOverlapEnd");

	Params::EndBikeTriggerBox_OnOverlapEnd Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActivityAPI.ActivityInit
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndActivityAPI::ActivityInit(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndActivityAPI", "ActivityInit");

	Params::EndActivityAPI_ActivityInit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndActivityAPI.GetActivityInitResult
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndActivityInitResult                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndActivityInitResult UEndActivityAPI::GetActivityInitResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndActivityAPI", "GetActivityInitResult");

	Params::EndActivityAPI_GetActivityInitResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBonamikGlobalWindActor.SetDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InDirection                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBonamikGlobalWindActor::SetDirection(const struct FVector& InDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikGlobalWindActor", "SetDirection");

	Params::EndBonamikGlobalWindActor_SetDirection Parms{};

	Parms.InDirection = std::move(InDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBonamikGlobalWindActor.SetWindData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEndBonamikWindData*              InWindData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBonamikGlobalWindActor::SetWindData(class UEndBonamikWindData* InWindData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikGlobalWindActor", "SetWindData");

	Params::EndBonamikGlobalWindActor_SetWindData Parms{};

	Parms.InWindData = InWindData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndInvalidationBox.InvalidateCache
// (Final, Native, Public, BlueprintCallable)

void UEndInvalidationBox::InvalidateCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndInvalidationBox", "InvalidateCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndInvalidationBox.SetCanCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    CanCache                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndInvalidationBox::SetCanCache(bool CanCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndInvalidationBox", "SetCanCache");

	Params::EndInvalidationBox_SetCanCache Parms{};

	Parms.CanCache = CanCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndInvalidationBox.GetCanCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndInvalidationBox::GetCanCache() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndInvalidationBox", "GetCanCache");

	Params::EndInvalidationBox_GetCanCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainMenuListBase.OnCellPressed
// (Native, Protected)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMenuListBase::OnCellPressed(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMenuListBase", "OnCellPressed");

	Params::EndMainMenuListBase_OnCellPressed Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorderSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorderSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorderSlot", "SetHorizontalAlignment");

	Params::EndBorderSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorderSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndBorderSlot::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorderSlot", "SetPadding");

	Params::EndBorderSlot_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBorderSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBorderSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBorderSlot", "SetVerticalAlignment");

	Params::EndBorderSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTestPlayTitleMenu.OnStartButtonClicked
// (Final, Native, Private)

void UEndTestPlayTitleMenu::OnStartButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTestPlayTitleMenu", "OnStartButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAITimerComponent.AddTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndAITimerComponent::AddTimer(float InTime, class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "AddTimer");

	Params::EndAITimerComponent_AddTimer Parms{};

	Parms.InTime = InTime;
	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAITimerComponent.IsRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndAITimerComponent::IsRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "IsRunning");

	Params::EndAITimerComponent_IsRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAITimerComponent.IsRunningFromName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndAITimerComponent::IsRunningFromName(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "IsRunningFromName");

	Params::EndAITimerComponent_IsRunningFromName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAITimerComponent.NotRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndAITimerComponent::NotRunning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "NotRunning");

	Params::EndAITimerComponent_NotRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAITimerComponent.NotRunningFromName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndAITimerComponent::NotRunningFromName(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "NotRunningFromName");

	Params::EndAITimerComponent_NotRunningFromName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndAITimerComponent.START
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndAITimerComponent::START(float InTime, class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "START");

	Params::EndAITimerComponent_START Parms{};

	Parms.InTime = InTime;
	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAITimerComponent.Suspend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndAITimerComponent::Suspend(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAITimerComponent", "Suspend");

	Params::EndAITimerComponent_Suspend Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.ActivateCameraFlavorReset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Pitch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::ActivateCameraFlavorReset(float Pitch, float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "ActivateCameraFlavorReset");

	Params::EndFieldAPI_ActivateCameraFlavorReset Parms{};

	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.CallbackCreatePlayerActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             partyActorName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::CallbackCreatePlayerActor(const class FName& partyActorName, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "CallbackCreatePlayerActor");

	Params::EndFieldAPI_CallbackCreatePlayerActor Parms{};

	Parms.partyActorName = partyActorName;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.CheckExclusion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EndFieldExclusion                       enumValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::CheckExclusion(EndFieldExclusion enumValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "CheckExclusion");

	Params::EndFieldAPI_CheckExclusion Parms{};

	Parms.enumValue = enumValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.ClearDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDebugFlag                           Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::ClearDebugFlag(EEndDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "ClearDebugFlag");

	Params::EndFieldAPI_ClearDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.DeactivateCameraFlavorReset
// (Final, Native, Static, Public, BlueprintCallable)

void UEndFieldAPI::DeactivateCameraFlavorReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "DeactivateCameraFlavorReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.DelayFinishBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::DelayFinishBattleScene(class FName baseBattleSceneId, float DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "DelayFinishBattleScene");

	Params::EndFieldAPI_DelayFinishBattleScene Parms{};

	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.DelayTime = DelayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.EntryLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             LocationName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::EntryLocation(const class FName& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "EntryLocation");

	Params::EndFieldAPI_EntryLocation Parms{};

	Parms.LocationName = LocationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.ExitLoation
// (Final, Native, Static, Public, BlueprintCallable)

void UEndFieldAPI::ExitLoation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "ExitLoation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.FieldAiLookAtTarget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             TargetActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LookAtTargetActorName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LookAtTargetLocation                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReactionDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIgnoreLookAtDeactiveAngle                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsLookAwayFromActor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::FieldAiLookAtTarget(class FName TargetActorName, class FName LookAtTargetActorName, const struct FVector& LookAtTargetLocation, float ReactionDistance, bool InIgnoreLookAtDeactiveAngle, bool InIsLookAwayFromActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "FieldAiLookAtTarget");

	Params::EndFieldAPI_FieldAiLookAtTarget Parms{};

	Parms.TargetActorName = TargetActorName;
	Parms.LookAtTargetActorName = LookAtTargetActorName;
	Parms.LookAtTargetLocation = std::move(LookAtTargetLocation);
	Parms.ReactionDistance = ReactionDistance;
	Parms.InIgnoreLookAtDeactiveAngle = InIgnoreLookAtDeactiveAngle;
	Parms.InIsLookAwayFromActor = InIsLookAwayFromActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.FindEndTargetPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             NodeName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndFieldAPI::FindEndTargetPoint(class FName NodeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "FindEndTargetPoint");

	Params::EndFieldAPI_FindEndTargetPoint Parms{};

	Parms.NodeName = NodeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.FinishBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::FinishBattleScene(class FName baseBattleSceneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "FinishBattleScene");

	Params::EndFieldAPI_FinishBattleScene Parms{};

	Parms.baseBattleSceneId = baseBattleSceneId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.GetEndTargetPointLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             NodeName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndFieldAPI::GetEndTargetPointLocation(class FName NodeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "GetEndTargetPointLocation");

	Params::EndFieldAPI_GetEndTargetPointLocation Parms{};

	Parms.NodeName = NodeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.GetEndTargetPointTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             NodeName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndFieldAPI::GetEndTargetPointTransform(class FName NodeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "GetEndTargetPointTransform");

	Params::EndFieldAPI_GetEndTargetPointTransform Parms{};

	Parms.NodeName = NodeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsEnableFieldControler
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEncount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsEnableFieldControler(bool bEncount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsEnableFieldControler");

	Params::EndFieldAPI_IsEnableFieldControler Parms{};

	Parms.bEncount = bEncount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsEnableFieldFullScreenMainMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsEnableFieldFullScreenMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsEnableFieldFullScreenMainMenu");

	Params::EndFieldAPI_IsEnableFieldFullScreenMainMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsEnableSkipPauseMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsEnableSkipPauseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsEnableSkipPauseMenu");

	Params::EndFieldAPI_IsEnableSkipPauseMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsEnableUpdateBattleParameter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsEnableUpdateBattleParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsEnableUpdateBattleParameter");

	Params::EndFieldAPI_IsEnableUpdateBattleParameter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsEncountWaveBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             BattleSceneID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsEncountWaveBattleScene(class FName BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsEncountWaveBattleScene");

	Params::EndFieldAPI_IsEncountWaveBattleScene Parms{};

	Parms.BattleSceneID = BattleSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsEscaping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsEscaping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsEscaping");

	Params::EndFieldAPI_IsEscaping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsShowEscaping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsShowEscaping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsShowEscaping");

	Params::EndFieldAPI_IsShowEscaping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsStable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsStable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsStable");

	Params::EndFieldAPI_IsStable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsWaveBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   waveIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsWaveBattleScene(class FName baseBattleSceneId, int32 waveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsWaveBattleScene");

	Params::EndFieldAPI_IsWaveBattleScene Parms{};

	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.waveIndex = waveIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.IsWaveCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::IsWaveCharacter(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "IsWaveCharacter");

	Params::EndFieldAPI_IsWaveCharacter Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.PlayBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EndFieldBGMLayer                        Layer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BGM                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeStartTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fadeEndTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    crossFade                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::PlayBGM(EndFieldBGMLayer Layer, class FName BGM, float fadeStartTime, float fadeEndTime, bool crossFade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "PlayBGM");

	Params::EndFieldAPI_PlayBGM Parms{};

	Parms.Layer = Layer;
	Parms.BGM = BGM;
	Parms.fadeStartTime = fadeStartTime;
	Parms.fadeEndTime = fadeEndTime;
	Parms.crossFade = crossFade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.RefreshCacheBGM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           cacheBGM                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::RefreshCacheBGM(const class FString& cacheBGM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "RefreshCacheBGM");

	Params::EndFieldAPI_RefreshCacheBGM Parms{};

	Parms.cacheBGM = std::move(cacheBGM);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.ResetFieldAiLookAtTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndFieldAPI::ResetFieldAiLookAtTarget(class FName TargetActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "ResetFieldAiLookAtTarget");

	Params::EndFieldAPI_ResetFieldAiLookAtTarget Parms{};

	Parms.TargetActorName = TargetActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.ResetOverrideTargetLengthCameraFlavorByBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::ResetOverrideTargetLengthCameraFlavorByBP(class FName CharaSpecID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "ResetOverrideTargetLengthCameraFlavorByBP");

	Params::EndFieldAPI_ResetOverrideTargetLengthCameraFlavorByBP Parms{};

	Parms.CharaSpecID = CharaSpecID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SendPlannerEventTrigger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             PlannerEventID                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TriggerId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SendPlannerEventTrigger(const class FName& PlannerEventID, const class FString& TriggerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SendPlannerEventTrigger");

	Params::EndFieldAPI_SendPlannerEventTrigger Parms{};

	Parms.PlannerEventID = PlannerEventID;
	Parms.TriggerId = std::move(TriggerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SendStateTrigger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           StateTriggerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SendStateTrigger(const class FString& StateTriggerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SendStateTrigger");

	Params::EndFieldAPI_SendStateTrigger Parms{};

	Parms.StateTriggerName = std::move(StateTriggerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SendStateTriggerDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           StateTriggerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SendStateTriggerDirect(const class FString& StateTriggerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SendStateTriggerDirect");

	Params::EndFieldAPI_SendStateTriggerDirect Parms{};

	Parms.StateTriggerName = std::move(StateTriggerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SetDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDebugFlag                           Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SetDebugFlag(EEndDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SetDebugFlag");

	Params::EndFieldAPI_SetDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SetExecSlotIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SetExecSlotIndex(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SetExecSlotIndex");

	Params::EndFieldAPI_SetExecSlotIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SetOverrideTargetLengthCameraFlavorByBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             dataTableCameraFlavorID                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SetOverrideTargetLengthCameraFlavorByBP(class FName CharaSpecID, class FName dataTableCameraFlavorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SetOverrideTargetLengthCameraFlavorByBP");

	Params::EndFieldAPI_SetOverrideTargetLengthCameraFlavorByBP Parms{};

	Parms.CharaSpecID = CharaSpecID;
	Parms.dataTableCameraFlavorID = dataTableCameraFlavorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.SetTruthLocationName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             truthLocationName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldAPI::SetTruthLocationName(class FName truthLocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "SetTruthLocationName");

	Params::EndFieldAPI_SetTruthLocationName Parms{};

	Parms.truthLocationName = truthLocationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldAPI.StartWaveBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EndWaveBattleSceneType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument00                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument01                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument02                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument03                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               enemyPopTransforms                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndFieldAPI::StartWaveBattleScene(class FName baseBattleSceneId, EndWaveBattleSceneType Type, int32 IntegerArgument00, int32 IntegerArgument01, int32 IntegerArgument02, int32 IntegerArgument03, const TArray<struct FTransform>& enemyPopTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "StartWaveBattleScene");

	Params::EndFieldAPI_StartWaveBattleScene Parms{};

	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.Type = Type;
	Parms.IntegerArgument00 = IntegerArgument00;
	Parms.IntegerArgument01 = IntegerArgument01;
	Parms.IntegerArgument02 = IntegerArgument02;
	Parms.IntegerArgument03 = IntegerArgument03;
	Parms.enemyPopTransforms = std::move(enemyPopTransforms);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.StartWaveBattleSceneReturnWaveBattleSceneId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EndWaveBattleSceneType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument00                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument01                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument02                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument03                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               enemyPopTransforms                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndFieldAPI::StartWaveBattleSceneReturnWaveBattleSceneId(class FName baseBattleSceneId, EndWaveBattleSceneType Type, int32 IntegerArgument00, int32 IntegerArgument01, int32 IntegerArgument02, int32 IntegerArgument03, const TArray<struct FTransform>& enemyPopTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "StartWaveBattleSceneReturnWaveBattleSceneId");

	Params::EndFieldAPI_StartWaveBattleSceneReturnWaveBattleSceneId Parms{};

	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.Type = Type;
	Parms.IntegerArgument00 = IntegerArgument00;
	Parms.IntegerArgument01 = IntegerArgument01;
	Parms.IntegerArgument02 = IntegerArgument02;
	Parms.IntegerArgument03 = IntegerArgument03;
	Parms.enemyPopTransforms = std::move(enemyPopTransforms);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldAPI.WaitStable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndFieldAPI::WaitStable(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndFieldAPI", "WaitStable");

	Params::EndFieldAPI_WaitStable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldKeyGuideList.OnCommandCellSetupField
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldKeyGuideList::OnCommandCellSetupField(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFieldKeyGuideList", "OnCommandCellSetupField");

	Params::EndFieldKeyGuideList_OnCommandCellSetupField Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldKeyGuideList.OnCommandCellSetupGBike
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldKeyGuideList::OnCommandCellSetupGBike(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFieldKeyGuideList", "OnCommandCellSetupGBike");

	Params::EndFieldKeyGuideList_OnCommandCellSetupGBike Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldKeyGuideList.OnCommandCellSetupPlayFeel
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldKeyGuideList::OnCommandCellSetupPlayFeel(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFieldKeyGuideList", "OnCommandCellSetupPlayFeel");

	Params::EndFieldKeyGuideList_OnCommandCellSetupPlayFeel Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.BranchAnd2
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    A                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    B                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::BranchAnd2(EEndAIBranchBit* OutSignal, bool A, bool B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAIController", "BranchAnd2");

	Params::EndBattleAIController_BranchAnd2 Parms{};

	Parms.A = A;
	Parms.B = B;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.AddAirPointArea
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddAirPointArea(const struct FVector& InLocation, float InRadius, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddAirPointArea");

	Params::EndBattleAIController_AddAirPointArea Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddAreaFromModify
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EModifierVolumeType                     InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddAreaFromModify(EModifierVolumeType InType, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddAreaFromModify");

	Params::EndBattleAIController_AddAreaFromModify Parms{};

	Parms.InType = InType;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddAttachEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FEndCharacterAttachEffectArgumentsargs                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddAttachEffect(const struct FEndCharacterAttachEffectArguments& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddAttachEffect");

	Params::EndBattleAIController_AddAttachEffect Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddBindAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::AddBindAction(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddBindAction");

	Params::EndBattleAIController_AddBindAction Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.AddBlackListArea
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddBlackListArea(const struct FVector& InLocation, float InRadius, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddBlackListArea");

	Params::EndBattleAIController_AddBlackListArea Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddChaseArea
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddChaseArea(const struct FVector& InLocation, float InRadius, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddChaseArea");

	Params::EndBattleAIController_AddChaseArea Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddDefenseArea
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddDefenseArea(const struct FVector& InLocation, float InRadius, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddDefenseArea");

	Params::EndBattleAIController_AddDefenseArea Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddDestructionPartsName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             meshName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             destructionPartsLabelName                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             restorePartsLabelName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::AddDestructionPartsName(class FName keyword, class FName meshName, class FName destructionPartsLabelName, class FName restorePartsLabelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddDestructionPartsName");

	Params::EndBattleAIController_AddDestructionPartsName Parms{};

	Parms.keyword = keyword;
	Parms.meshName = meshName;
	Parms.destructionPartsLabelName = destructionPartsLabelName;
	Parms.restorePartsLabelName = restorePartsLabelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.AddEasySpawnCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedDisableCollision                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   destroyTimer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    recycle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    enableStartupDestroyTimer                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::AddEasySpawnCharacter(class FName keyword, class FName CharaSpecName, bool spawnedInvisible, bool spawnedDisableCollision, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float destroyTimer, bool recycle, bool enableStartupDestroyTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddEasySpawnCharacter");

	Params::EndBattleAIController_AddEasySpawnCharacter Parms{};

	Parms.keyword = keyword;
	Parms.CharaSpecName = CharaSpecName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.spawnedDisableCollision = spawnedDisableCollision;
	Parms.enableRagdollType = enableRagdollType;
	Parms.destroyTimer = destroyTimer;
	Parms.recycle = recycle;
	Parms.enableStartupDestroyTimer = enableStartupDestroyTimer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.AddIgnoreNavArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddIgnoreNavArea(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddIgnoreNavArea");

	Params::EndBattleAIController_AddIgnoreNavArea Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddPathArea
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddPathArea(const struct FVector& InLocation, float InRadius, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddPathArea");

	Params::EndBattleAIController_AddPathArea Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddSpecialStateEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             specialStateEffectID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddSpecialStateEffect(class FName specialStateEffectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddSpecialStateEffect");

	Params::EndBattleAIController_AddSpecialStateEffect Parms{};

	Parms.specialStateEffectID = specialStateEffectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddSpecialStateEffectWithBeamTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             specialStateEffectID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            beamTargetCharaList                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddSpecialStateEffectWithBeamTarget(class FName specialStateEffectID, const TArray<class AEndCharacter*>& beamTargetCharaList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddSpecialStateEffectWithBeamTarget");

	Params::EndBattleAIController_AddSpecialStateEffectWithBeamTarget Parms{};

	Parms.specialStateEffectID = specialStateEffectID;
	Parms.beamTargetCharaList = std::move(beamTargetCharaList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddSpecialStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddSpecialStatus(EEndBattleSpecialStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddSpecialStatus");

	Params::EndBattleAIController_AddSpecialStatus Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddSpecialStatusByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddSpecialStatusByID(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddSpecialStatusByID");

	Params::EndBattleAIController_AddSpecialStatusByID Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AddSubStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::AddSubStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddSubStep");

	Params::EndBattleAIController_AddSubStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.AddWhiteListArea
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::AddWhiteListArea(const struct FVector& InLocation, float InRadius, int32 InGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AddWhiteListArea");

	Params::EndBattleAIController_AddWhiteListArea Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;
	Parms.InGroup = InGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.AIDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndBattleAIController::AIDelay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "AIDelay");

	Params::EndBattleAIController_AIDelay Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Duration = Duration;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ApplyHate
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ApplyHate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ApplyHate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.BranchAnd
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Flag1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::BranchAnd(bool Flag1, bool Flag2, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "BranchAnd");

	Params::EndBattleAIController_BranchAnd Parms{};

	Parms.Flag1 = Flag1;
	Parms.Flag2 = Flag2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.BranchOR
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Flag1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::BranchOR(bool Flag1, bool Flag2, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "BranchOR");

	Params::EndBattleAIController_BranchOR Parms{};

	Parms.Flag1 = Flag1;
	Parms.Flag2 = Flag2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.BranchXOR
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    Flag1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::BranchXOR(bool Flag1, bool Flag2, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "BranchXOR");

	Params::EndBattleAIController_BranchXOR Parms{};

	Parms.Flag1 = Flag1;
	Parms.Flag2 = Flag2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.CalcATBChangeValue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   IntervalTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    resetComparetiveATB                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    defaultIntervalSeconds                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::CalcATBChangeValue(float IntervalTime, bool resetComparetiveATB, bool defaultIntervalSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CalcATBChangeValue");

	Params::EndBattleAIController_CalcATBChangeValue Parms{};

	Parms.IntervalTime = IntervalTime;
	Parms.resetComparetiveATB = resetComparetiveATB;
	Parms.defaultIntervalSeconds = defaultIntervalSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CalcATBCompareValue
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIController::CalcATBCompareValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CalcATBCompareValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CancelActorChase
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::CancelActorChase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CancelActorChase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CancelGroundSpline
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::CancelGroundSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CancelGroundSpline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CanSeeBlockCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::CanSeeBlockCharacter(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CanSeeBlockCharacter");

	Params::EndBattleAIController_CanSeeBlockCharacter Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.CanSeeBlockTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::CanSeeBlockTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CanSeeBlockTarget");

	Params::EndBattleAIController_CanSeeBlockTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.CanSeeCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::CanSeeCharacter(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CanSeeCharacter");

	Params::EndBattleAIController_CanSeeCharacter Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.CanSeeTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::CanSeeTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CanSeeTarget");

	Params::EndBattleAIController_CanSeeTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ChangeBattleScenePhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Phase                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ChangeBattleScenePhase(int32 Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ChangeBattleScenePhase");

	Params::EndBattleAIController_ChangeBattleScenePhase Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ClearAction
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ClearAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ClearAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ClearBPDamageCoefficient
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ClearBPDamageCoefficient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ClearBPDamageCoefficient");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ClearDisableRemainAttributeEffect
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ClearDisableRemainAttributeEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ClearDisableRemainAttributeEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ClearHPMinLimit
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ClearHPMinLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ClearHPMinLimit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ClearHPMinLimitAIPCAttack
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ClearHPMinLimitAIPCAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ClearHPMinLimitAIPCAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ClearHPMinLimitPassiveDamage
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ClearHPMinLimitPassiveDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ClearHPMinLimitPassiveDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CreateDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideDamage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverrideDamage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::CreateDamageSource(class FName DamageSourceID, class AEndCharacter* targetChara, class FName AbilityID, bool bOverrideDamage, int32 OverrideDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CreateDamageSource");

	Params::EndBattleAIController_CreateDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;
	Parms.targetChara = targetChara;
	Parms.AbilityID = AbilityID;
	Parms.bOverrideDamage = bOverrideDamage;
	Parms.OverrideDamage = OverrideDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CreateDamageSourceByCurrentTargetBase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::CreateDamageSourceByCurrentTargetBase(class FName DamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CreateDamageSourceByCurrentTargetBase");

	Params::EndBattleAIController_CreateDamageSourceByCurrentTargetBase Parms{};

	Parms.DamageSourceID = DamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CreateOtherPath
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::CreateOtherPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CreateOtherPath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.CreateSyncAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             syncActionID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverwrite                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::CreateSyncAction(class FName syncActionID, class AEndCharacter* targetChara, bool bOverwrite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "CreateSyncAction");

	Params::EndBattleAIController_CreateSyncAction Parms{};

	Parms.syncActionID = syncActionID;
	Parms.targetChara = targetChara;
	Parms.bOverwrite = bOverwrite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.DestroyDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::DestroyDamageSource(class FName DamageSourceID, bool bDestroyEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "DestroyDamageSource");

	Params::EndBattleAIController_DestroyDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;
	Parms.bDestroyEffect = bDestroyEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.DisableProcessDead
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::DisableProcessDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "DisableProcessDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.DoOnceWithThen
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EEndDoOnceCode                          Code                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EEndDoOnceOutCode                       Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::DoOnceWithThen(const EEndDoOnceCode Code, const struct FLatentActionInfo& LatentInfo, EEndDoOnceOutCode* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "DoOnceWithThen");

	Params::EndBattleAIController_DoOnceWithThen Parms{};

	Parms.Code = Code;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function EndGame.EndBattleAIController.EnableDamageReactionOwnerSyncAction
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::EnableDamageReactionOwnerSyncAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "EnableDamageReactionOwnerSyncAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.EnableProcessDead
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::EnableProcessDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "EnableProcessDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.EndBurstInstant
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::EndBurstInstant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "EndBurstInstant");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.EndDisableLatestContactWall
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::EndDisableLatestContactWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "EndDisableLatestContactWall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.EndFsmAddMotion
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::EndFsmAddMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "EndFsmAddMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.FinishBattle
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::FinishBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "FinishBattle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.FinishEscape
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::FinishEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "FinishEscape");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.FloatCmpBranch
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ValueA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::FloatCmpBranch(float ValueA, float ValueB, EEndAiMathCmp cmp, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "FloatCmpBranch");

	Params::EndBattleAIController_FloatCmpBranch Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.ForceDisableAimEffectorSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             EffectorSettingName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ForceDisableAimEffectorSetting(class FName EffectorSettingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ForceDisableAimEffectorSetting");

	Params::EndBattleAIController_ForceDisableAimEffectorSetting Parms{};

	Parms.EffectorSettingName = EffectorSettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ForceEnableAimEffectorSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             EffectorSettingName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ForceEnableAimEffectorSetting(class FName EffectorSettingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ForceEnableAimEffectorSetting");

	Params::EndBattleAIController_ForceEnableAimEffectorSetting Parms{};

	Parms.EffectorSettingName = EffectorSettingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ForceRequestAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ForceRequestAction(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ForceRequestAction");

	Params::EndBattleAIController_ForceRequestAction Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionAbilityLocalCountFromID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetActionAbilityLocalCountFromID(class FName InAbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionAbilityLocalCountFromID");

	Params::EndBattleAIController_GetActionAbilityLocalCountFromID Parms{};

	Parms.InAbilityID = InAbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InActionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> AEndBattleAIController::GetActionCharacter(EEndAiBattleTargetType InTarget, class FName InActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionCharacter");

	Params::EndBattleAIController_GetActionCharacter Parms{};

	Parms.InTarget = InTarget;
	Parms.InActionName = InActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetActionCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionCount");

	Params::EndBattleAIController_GetActionCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionInTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetActionInTime(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionInTime");

	Params::EndBattleAIController_GetActionInTime Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionLocalCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetActionLocalCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionLocalCount");

	Params::EndBattleAIController_GetActionLocalCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionRequestCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetActionRequestCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionRequestCount");

	Params::EndBattleAIController_GetActionRequestCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetActionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetActionTime(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetActionTime");

	Params::EndBattleAIController_GetActionTime Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetAerialBoidsLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetAerialBoidsLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetAerialBoidsLeader");

	Params::EndBattleAIController_GetAerialBoidsLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetAerialHeliVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetAerialHeliVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetAerialHeliVelocity");

	Params::EndBattleAIController_GetAerialHeliVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetAerialMoveType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleAirMoveType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleAirMoveType AEndBattleAIController::GetAerialMoveType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetAerialMoveType");

	Params::EndBattleAIController_GetAerialMoveType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetAirMoveGoalDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetAirMoveGoalDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetAirMoveGoalDistance");

	Params::EndBattleAIController_GetAirMoveGoalDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetAirMoveGoalDistance2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetAirMoveGoalDistance2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetAirMoveGoalDistance2D");

	Params::EndBattleAIController_GetAirMoveGoalDistance2D Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetATB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetATB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetATB");

	Params::EndBattleAIController_GetATB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetATBMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetATBMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetATBMax");

	Params::EndBattleAIController_GetATBMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleAIFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleAIInfoFlag                       InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::GetBattleAIFlag(EBattleAIInfoFlag InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleAIFlag");

	Params::EndBattleAIController_GetBattleAIFlag Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleAIParam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleAIInfoParam                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetBattleAIParam(EBattleAIInfoParam InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleAIParam");

	Params::EndBattleAIController_GetBattleAIParam Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleAIProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleAIProgress                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleAIProgress AEndBattleAIController::GetBattleAIProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleAIProgress");

	Params::EndBattleAIController_GetBattleAIProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleInSituation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleInSituationType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleInSituationType AEndBattleAIController::GetBattleInSituation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleInSituation");

	Params::EndBattleAIController_GetBattleInSituation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleMoveType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleMoveType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleMoveType AEndBattleAIController::GetBattleMoveType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleMoveType");

	Params::EndBattleAIController_GetBattleMoveType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleSceneBlueprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndBattleSceneBlueprint*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndBattleSceneBlueprint* AEndBattleAIController::GetBattleSceneBlueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleSceneBlueprint");

	Params::EndBattleAIController_GetBattleSceneBlueprint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleScenePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetBattleScenePhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleScenePhase");

	Params::EndBattleAIController_GetBattleScenePhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBattleScenePhaseTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetBattleScenePhaseTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBattleScenePhaseTime");

	Params::EndBattleAIController_GetBattleScenePhaseTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBP");

	Params::EndBattleAIController_GetBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetBPPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetBPPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetBPPercent");

	Params::EndBattleAIController_GetBPPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetCharaBattleID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetCharaBattleID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetCharaBattleID");

	Params::EndBattleAIController_GetCharaBattleID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetCharacter");

	Params::EndBattleAIController_GetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetCharaRoleID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetCharaRoleID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetCharaRoleID");

	Params::EndBattleAIController_GetCharaRoleID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetCharaSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIController::GetCharaSpec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetCharaSpec");

	Params::EndBattleAIController_GetCharaSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetCurrentAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIController::GetCurrentAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetCurrentAction");

	Params::EndBattleAIController_GetCurrentAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetCurrentBindAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIController::GetCurrentBindAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetCurrentBindAction");

	Params::EndBattleAIController_GetCurrentBindAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Path                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetDistance(class AEndCharacter* Target, bool Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetDistance");

	Params::EndBattleAIController_GetDistance Parms{};

	Parms.Target = Target;
	Parms.Path = Path;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyABSAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyABSAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyABSAngle");

	Params::EndBattleAIController_GetEnemyABSAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyAngle");

	Params::EndBattleAIController_GetEnemyAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyDistance");

	Params::EndBattleAIController_GetEnemyDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyDistance2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyDistance2D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyDistance2D");

	Params::EndBattleAIController_GetEnemyDistance2D Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyHeightDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyHeightDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyHeightDistance");

	Params::EndBattleAIController_GetEnemyHeightDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyHeightDistanceAbs
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyHeightDistanceAbs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyHeightDistanceAbs");

	Params::EndBattleAIController_GetEnemyHeightDistanceAbs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIController::GetEnemyLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyLocation");

	Params::EndBattleAIController_GetEnemyLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            OutMember                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bAlive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::GetEnemyMember(TArray<class AEndCharacter*>* OutMember, bool bAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyMember");

	Params::EndBattleAIController_GetEnemyMember Parms{};

	Parms.bAlive = bAlive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMember != nullptr)
		*OutMember = std::move(Parms.OutMember);
}


// Function EndGame.EndBattleAIController.GetEnemyMembersIgnoreSelf
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> AEndBattleAIController::GetEnemyMembersIgnoreSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyMembersIgnoreSelf");

	Params::EndBattleAIController_GetEnemyMembersIgnoreSelf Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyPitchAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyPitchAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyPitchAngle");

	Params::EndBattleAIController_GetEnemyPitchAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AEndBattleAIController::GetEnemyRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyRotation");

	Params::EndBattleAIController_GetEnemyRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemysDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemysDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemysDistance");

	Params::EndBattleAIController_GetEnemysDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyToPathDistance
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetEnemyToPathDistance(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyToPathDistance");

	Params::EndBattleAIController_GetEnemyToPathDistance Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEnemyVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIController::GetEnemyVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEnemyVector");

	Params::EndBattleAIController_GetEnemyVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEntryType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattleEntryType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleEntryType AEndBattleAIController::GetEntryType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEntryType");

	Params::EndBattleAIController_GetEntryType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetEscapeState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiEscapeState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndAiEscapeState AEndBattleAIController::GetEscapeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEscapeState");

	Params::EndBattleAIController_GetEscapeState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetHP");

	Params::EndBattleAIController_GetHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetHPMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetHPMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetHPMax");

	Params::EndBattleAIController_GetHPMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetHPPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetHPPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetHPPercent");

	Params::EndBattleAIController_GetHPPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetLeader");

	Params::EndBattleAIController_GetLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetNearestSplinePoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetNearestSplinePoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetNearestSplinePoint");

	Params::EndBattleAIController_GetNearestSplinePoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetNearestSplinePointFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetNearestSplinePointFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetNearestSplinePointFloat");

	Params::EndBattleAIController_GetNearestSplinePointFloat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetNextWarpPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIController::GetNextWarpPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetNextWarpPosition");

	Params::EndBattleAIController_GetNextWarpPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetPartsHPPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             partsID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetPartsHPPercent(class FName partsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetPartsHPPercent");

	Params::EndBattleAIController_GetPartsHPPercent Parms{};

	Parms.partsID = partsID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetPartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            OutMember                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::GetPartyMember(TArray<class AEndCharacter*>* OutMember, bool bIgnoreSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetPartyMember");

	Params::EndBattleAIController_GetPartyMember Parms{};

	Parms.bIgnoreSelf = bIgnoreSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMember != nullptr)
		*OutMember = std::move(Parms.OutMember);
}


// Function EndGame.EndBattleAIController.GetPathDistance
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetPathDistance(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetPathDistance");

	Params::EndBattleAIController_GetPathDistance Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRaceAndRoleCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InRace                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRaceAndRoleCount(class FName InRace, EEndAiBattleRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRaceAndRoleCount");

	Params::EndBattleAIController_GetRaceAndRoleCount Parms{};

	Parms.InRace = InRace;
	Parms.InRole = InRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRaceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InRace                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRaceCount(class FName InRace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRaceCount");

	Params::EndBattleAIController_GetRaceCount Parms{};

	Parms.InRace = InRace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRatioSwitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           inArray                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRatioSwitch(const TArray<int32>& inArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRatioSwitch");

	Params::EndBattleAIController_GetRatioSwitch Parms{};

	Parms.inArray = std::move(inArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRatioSwitch2
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Switch0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Switch1                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRatioSwitch2(int32 Switch0, int32 Switch1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRatioSwitch2");

	Params::EndBattleAIController_GetRatioSwitch2 Parms{};

	Parms.Switch0 = Switch0;
	Parms.Switch1 = Switch1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRatioSwitch3
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Switch0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Switch1                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Switch2                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRatioSwitch3(int32 Switch0, int32 Switch1, int32 Switch2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRatioSwitch3");

	Params::EndBattleAIController_GetRatioSwitch3 Parms{};

	Parms.Switch0 = Switch0;
	Parms.Switch1 = Switch1;
	Parms.Switch2 = Switch2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRemainingHardAttackATB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRemainingHardAttackATB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRemainingHardAttackATB");

	Params::EndBattleAIController_GetRemainingHardAttackATB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRemainingLightAttackATB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRemainingLightAttackATB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRemainingLightAttackATB");

	Params::EndBattleAIController_GetRemainingLightAttackATB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetReserveRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleRole                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndAiBattleRole AEndBattleAIController::GetReserveRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetReserveRole");

	Params::EndBattleAIController_GetReserveRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetReserveStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetReserveStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetReserveStep");

	Params::EndBattleAIController_GetReserveStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetReserveSubStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetReserveSubStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetReserveSubStep");

	Params::EndBattleAIController_GetReserveSubStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleRole                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndAiBattleRole AEndBattleAIController::GetRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRole");

	Params::EndBattleAIController_GetRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetRoleCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetRoleCount(EEndAiBattleRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetRoleCount");

	Params::EndBattleAIController_GetRoleCount Parms{};

	Parms.InRole = InRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSceneEnemyCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetSceneEnemyCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSceneEnemyCount");

	Params::EndBattleAIController_GetSceneEnemyCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSpecialStatusChangeCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> AEndBattleAIController::GetSpecialStatusChangeCharacter(EEndAiBattleTargetType InTarget, EEndBattleSpecialStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSpecialStatusChangeCharacter");

	Params::EndBattleAIController_GetSpecialStatusChangeCharacter Parms{};

	Parms.InTarget = InTarget;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSplinePoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetSplinePoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSplinePoint");

	Params::EndBattleAIController_GetSplinePoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSplinePointFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetSplinePointFloat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSplinePointFloat");

	Params::EndBattleAIController_GetSplinePointFloat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetStatusChangeCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleStatusChangeType              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> AEndBattleAIController::GetStatusChangeCharacter(EEndAiBattleTargetType InTarget, EEndBattleStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetStatusChangeCharacter");

	Params::EndBattleAIController_GetStatusChangeCharacter Parms{};

	Parms.InTarget = InTarget;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetStep");

	Params::EndBattleAIController_GetStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSubStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetSubStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSubStep");

	Params::EndBattleAIController_GetSubStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSummonMaster
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetSummonMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSummonMaster");

	Params::EndBattleAIController_GetSummonMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSyncActionCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSyncActionType                Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> AEndBattleAIController::GetSyncActionCharacter(EEndAiBattleTargetType InTarget, EEndBattleSyncActionType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSyncActionCharacter");

	Params::EndBattleAIController_GetSyncActionCharacter Parms{};

	Parms.InTarget = InTarget;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetTarget
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetTarget");

	Params::EndBattleAIController_GetTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetTargetBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetTargetBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetTargetBase");

	Params::EndBattleAIController_GetTargetBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetTriggerBoxCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETriggerBoxCondition                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETriggerBoxCondition AEndBattleAIController::GetTriggerBoxCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetTriggerBoxCondition");

	Params::EndBattleAIController_GetTriggerBoxCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWarpPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   warpPointId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIController::GetWarpPosition(int32 warpPointId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWarpPosition");

	Params::EndBattleAIController_GetWarpPosition Parms{};

	Parms.warpPointId = warpPointId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWorkBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::GetWorkBool(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWorkBool");

	Params::EndBattleAIController_GetWorkBool Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWorkFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetWorkFloat(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWorkFloat");

	Params::EndBattleAIController_GetWorkFloat Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWorkInt32
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::GetWorkInt32(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWorkInt32");

	Params::EndBattleAIController_GetWorkInt32 Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWorkName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIController::GetWorkName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWorkName");

	Params::EndBattleAIController_GetWorkName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWorkRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AEndBattleAIController::GetWorkRotator(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWorkRotator");

	Params::EndBattleAIController_GetWorkRotator Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetWorkVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIController::GetWorkVector(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetWorkVector");

	Params::EndBattleAIController_GetWorkVector Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HaltAction
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::HaltAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HaltAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.HasAbilityCancelNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasAbilityCancelNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasAbilityCancelNumber");

	Params::EndBattleAIController_HasAbilityCancelNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasDamageSource(class FName DamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasDamageSource");

	Params::EndBattleAIController_HasDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasSpecialStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasSpecialStatus(EEndBattleSpecialStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasSpecialStatus");

	Params::EndBattleAIController_HasSpecialStatus Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasSpecialStatusByID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasSpecialStatusByID(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasSpecialStatusByID");

	Params::EndBattleAIController_HasSpecialStatusByID Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasStatusChange
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleStatusChangeType              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasStatusChange(EEndAiBattleTargetType InTarget, EEndBattleStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasStatusChange");

	Params::EndBattleAIController_HasStatusChange Parms{};

	Parms.InTarget = InTarget;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasStatusChangeDeSpell
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasStatusChangeDeSpell(EEndAiBattleTargetType InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasStatusChangeDeSpell");

	Params::EndBattleAIController_HasStatusChangeDeSpell Parms{};

	Parms.InTarget = InTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasStatusChangeEsuna
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasStatusChangeEsuna(EEndAiBattleTargetType InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasStatusChangeEsuna");

	Params::EndBattleAIController_HasStatusChangeEsuna Parms{};

	Parms.InTarget = InTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.HasStatusDeBarrier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleTargetType                  InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::HasStatusDeBarrier(EEndAiBattleTargetType InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "HasStatusDeBarrier");

	Params::EndBattleAIController_HasStatusDeBarrier Parms{};

	Parms.InTarget = InTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ImmediateAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ImmediateAction(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ImmediateAction");

	Params::EndBattleAIController_ImmediateAction Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ImmediateBindAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCancelID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ImmediateBindAction(class FName InName, int32 InCancelID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ImmediateBindAction");

	Params::EndBattleAIController_ImmediateBindAction Parms{};

	Parms.InName = InName;
	Parms.InCancelID = InCancelID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ImmediateMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Inter                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ImmediateMotion(class FName InName, float Inter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ImmediateMotion");

	Params::EndBattleAIController_ImmediateMotion Parms{};

	Parms.InName = InName;
	Parms.Inter = Inter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ImmediateRegisterMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ImmediateRegisterMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ImmediateRegisterMove");

	Params::EndBattleAIController_ImmediateRegisterMove Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ImmediateRegisterMoveWeak
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ImmediateRegisterMoveWeak(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ImmediateRegisterMoveWeak");

	Params::EndBattleAIController_ImmediateRegisterMoveWeak Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.IntCmpBranch
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ValueA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IntCmpBranch(int32 ValueA, int32 ValueB, EEndAiMathCmp cmp, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IntCmpBranch");

	Params::EndBattleAIController_IntCmpBranch Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.IsAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsAbility(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsAbility");

	Params::EndBattleAIController_IsAbility Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsAbilityState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsAbilityState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsAbilityState");

	Params::EndBattleAIController_IsAbilityState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsActionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           InCmp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsActionCount(class FName InName, int32 InCount, EEndAiMathCmp InCmp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsActionCount");

	Params::EndBattleAIController_IsActionCount Parms{};

	Parms.InName = InName;
	Parms.InCount = InCount;
	Parms.InCmp = InCmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsActionLocalCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           InCmp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsActionLocalCount(class FName InName, int32 InCount, EEndAiMathCmp InCmp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsActionLocalCount");

	Params::EndBattleAIController_IsActionLocalCount Parms{};

	Parms.InName = InName;
	Parms.InCount = InCount;
	Parms.InCmp = InCmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsActionTimeOver
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsActionTimeOver(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsActionTimeOver");

	Params::EndBattleAIController_IsActionTimeOver Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsAggressive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsAggressive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsAggressive");

	Params::EndBattleAIController_IsAggressive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsATB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InATB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsATB(int32 InATB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsATB");

	Params::EndBattleAIController_IsATB Parms{};

	Parms.InATB = InATB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsATBLightAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsATBLightAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsATBLightAttack");

	Params::EndBattleAIController_IsATBLightAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsBadState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsBadState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBadState");

	Params::EndBattleAIController_IsBadState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsBattleAIEnableTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsBattleAIEnableTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBattleAIEnableTick");

	Params::EndBattleAIController_IsBattleAIEnableTick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsBattleScenePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsBattleScenePhase(int32 InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBattleScenePhase");

	Params::EndBattleAIController_IsBattleScenePhase Parms{};

	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsBoolBranch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IsBoolBranch(class FName Name_0, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBoolBranch");

	Params::EndBattleAIController_IsBoolBranch Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.IsBPAttackChance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsBPAttackChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBPAttackChance");

	Params::EndBattleAIController_IsBPAttackChance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsBrokenParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             partsID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsBrokenParts(class FName partsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBrokenParts");

	Params::EndBattleAIController_IsBrokenParts Parms{};

	Parms.partsID = partsID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsBurst
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsBurst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsBurst");

	Params::EndBattleAIController_IsBurst Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsCombo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsCombo(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsCombo");

	Params::EndBattleAIController_IsCombo Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsDelayProcessing
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsDelayProcessing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsDelayProcessing");

	Params::EndBattleAIController_IsDelayProcessing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsDestruction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsDestruction(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsDestruction");

	Params::EndBattleAIController_IsDestruction Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsDisableProcessDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsDisableProcessDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsDisableProcessDead");

	Params::EndBattleAIController_IsDisableProcessDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsEnemyAngleFront
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InReverse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsEnemyAngleFront(float InAngle, bool InReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyAngleFront");

	Params::EndBattleAIController_IsEnemyAngleFront Parms{};

	Parms.InAngle = InAngle;
	Parms.InReverse = InReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsEnemyAngleFrontBranch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InReverse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IsEnemyAngleFrontBranch(float InAngle, EEndAIBranchBit* OutSignal, bool InReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyAngleFrontBranch");

	Params::EndBattleAIController_IsEnemyAngleFrontBranch Parms{};

	Parms.InAngle = InAngle;
	Parms.InReverse = InReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.IsEnemyDistanceBranch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IsEnemyDistanceBranch(float InDistance, EEndAiMathCmp cmp, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyDistanceBranch");

	Params::EndBattleAIController_IsEnemyDistanceBranch Parms{};

	Parms.InDistance = InDistance;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.IsEnemyDistanceHigh
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsEnemyDistanceHigh(float InDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyDistanceHigh");

	Params::EndBattleAIController_IsEnemyDistanceHigh Parms{};

	Parms.InDistance = InDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsEnemyDistanceLow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsEnemyDistanceLow(float InDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyDistanceLow");

	Params::EndBattleAIController_IsEnemyDistanceLow Parms{};

	Parms.InDistance = InDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsEnemyRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsEnemyRange(float InMin, float InMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyRange");

	Params::EndBattleAIController_IsEnemyRange Parms{};

	Parms.InMin = InMin;
	Parms.InMax = InMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsEnemyRangeBranch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathBinCmp                        cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IsEnemyRangeBranch(float InMin, float InMax, EEndAiMathBinCmp cmp, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEnemyRangeBranch");

	Params::EndBattleAIController_IsEnemyRangeBranch Parms{};

	Parms.InMin = InMin;
	Parms.InMax = InMax;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.IsEscaping
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsEscaping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsEscaping");

	Params::EndBattleAIController_IsEscaping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsFly
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsFly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsFly");

	Params::EndBattleAIController_IsFly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsHPPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsHPPercent(int32 Percent, EEndAiMathCmp cmp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsHPPercent");

	Params::EndBattleAIController_IsHPPercent Parms{};

	Parms.Percent = Percent;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsIdle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsIdle");

	Params::EndBattleAIController_IsIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsMotion(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsMotion");

	Params::EndBattleAIController_IsMotion Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsMotionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsMotionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsMotionState");

	Params::EndBattleAIController_IsMotionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsOverrideUpperAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsOverrideUpperAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsOverrideUpperAnim");

	Params::EndBattleAIController_IsOverrideUpperAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsRangeArea
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsRangeArea(class AEndCharacter* InChara, const struct FVector& InLocation, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsRangeArea");

	Params::EndBattleAIController_IsRangeArea Parms{};

	Parms.InChara = InChara;
	Parms.InLocation = std::move(InLocation);
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsRole(EEndAiBattleRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsRole");

	Params::EndBattleAIController_IsRole Parms{};

	Parms.InRole = InRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsRunningAITimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsRunningAITimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsRunningAITimer");

	Params::EndBattleAIController_IsRunningAITimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsSceneSense
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsSceneSense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsSceneSense");

	Params::EndBattleAIController_IsSceneSense Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsStep(int32 InStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsStep");

	Params::EndBattleAIController_IsStep Parms{};

	Parms.InStep = InStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsStepAndSubStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSubStep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsStepAndSubStep(int32 InStep, int32 InSubStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsStepAndSubStep");

	Params::EndBattleAIController_IsStepAndSubStep Parms{};

	Parms.InStep = InStep;
	Parms.InSubStep = InSubStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsSubStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InSubStep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsSubStep(int32 InSubStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsSubStep");

	Params::EndBattleAIController_IsSubStep Parms{};

	Parms.InSubStep = InSubStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsToad
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsToad(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsToad");

	Params::EndBattleAIController_IsToad Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsTriggerBoxCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETriggerBoxCondition                    Condition                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsTriggerBoxCondition(const ETriggerBoxCondition Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsTriggerBoxCondition");

	Params::EndBattleAIController_IsTriggerBoxCondition Parms{};

	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsValidAerialCharaPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InOffset                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InRotateYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsValidAerialCharaPoint(const struct FVector& InOffset, bool InRotateYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsValidAerialCharaPoint");

	Params::EndBattleAIController_IsValidAerialCharaPoint Parms{};

	Parms.InOffset = std::move(InOffset);
	Parms.InRotateYaw = InRotateYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsValidPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsValidPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsValidPath");

	Params::EndBattleAIController_IsValidPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsValidPathPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InQuantity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsValidPathPoint(struct FVector* OutLocation, float InQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsValidPathPoint");

	Params::EndBattleAIController_IsValidPathPoint Parms{};

	Parms.InQuantity = InQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsWeakCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsWeakCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsWeakCondition");

	Params::EndBattleAIController_IsWeakCondition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsWithinTargetEQS
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          inP                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsWithinTargetEQS(const struct FVector& inP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsWithinTargetEQS");

	Params::EndBattleAIController_IsWithinTargetEQS Parms{};

	Parms.inP = std::move(inP);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsWorkFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsWorkFloat(class FName Name_0, float Value, EEndAiMathCmp cmp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsWorkFloat");

	Params::EndBattleAIController_IsWorkFloat Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsWorkFloatBranch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IsWorkFloatBranch(class FName Name_0, float Value, EEndAiMathCmp cmp, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsWorkFloatBranch");

	Params::EndBattleAIController_IsWorkFloatBranch Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.IsWorkInt32
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsWorkInt32(class FName Name_0, int32 Value, EEndAiMathCmp cmp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsWorkInt32");

	Params::EndBattleAIController_IsWorkInt32 Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsWorkInt32Branch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::IsWorkInt32Branch(class FName Name_0, int32 Value, EEndAiMathCmp cmp, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsWorkInt32Branch");

	Params::EndBattleAIController_IsWorkInt32Branch Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.LockTargetCharaBase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleTargetCharaBaseLockType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLock                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::LockTargetCharaBase(EEndBattleTargetCharaBaseLockType Type, bool bLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "LockTargetCharaBase");

	Params::EndBattleAIController_LockTargetCharaBase Parms{};

	Parms.Type = Type;
	Parms.bLock = bLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.NextSubStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::NextSubStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "NextSubStep");

	Params::EndBattleAIController_NextSubStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.NotBoolBranch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::NotBoolBranch(class FName Name_0, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "NotBoolBranch");

	Params::EndBattleAIController_NotBoolBranch Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAIController.NotifyAbilityReaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Param0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::NotifyAbilityReaction(float Param0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "NotifyAbilityReaction");

	Params::EndBattleAIController_NotifyAbilityReaction Parms{};

	Parms.Param0 = Param0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.OnAbilityReactionCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleAbilityReactionConditionType  abilityReactionConditionType                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnAbilityReactionCondition(EEndBattleAbilityReactionConditionType abilityReactionConditionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAbilityReactionCondition");

	Params::EndBattleAIController_OnAbilityReactionCondition Parms{};

	Parms.abilityReactionConditionType = abilityReactionConditionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnAbilityReactionConditionTargetDodge
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             AbilityID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnAbilityReactionConditionTargetDodge(const class FName& AbilityID, class AEndCharacter* targetChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAbilityReactionConditionTargetDodge");

	Params::EndBattleAIController_OnAbilityReactionConditionTargetDodge Parms{};

	Parms.AbilityID = AbilityID;
	Parms.targetChara = targetChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnAbilityReactionConditionTargetDodgeAngle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             AbilityID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnAbilityReactionConditionTargetDodgeAngle(const class FName& AbilityID, class AEndCharacter* targetChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAbilityReactionConditionTargetDodgeAngle");

	Params::EndBattleAIController_OnAbilityReactionConditionTargetDodgeAngle Parms{};

	Parms.AbilityID = AbilityID;
	Parms.targetChara = targetChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnAbilityReactionConditionTargetDodgeDirection
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             AbilityID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnAbilityReactionConditionTargetDodgeDirection(const class FName& AbilityID, class AEndCharacter* targetChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAbilityReactionConditionTargetDodgeDirection");

	Params::EndBattleAIController_OnAbilityReactionConditionTargetDodgeDirection Parms{};

	Parms.AbilityID = AbilityID;
	Parms.targetChara = targetChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnAddStatusChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleStatusChangeType              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnAddStatusChange(EEndBattleStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAddStatusChange");

	Params::EndBattleAIController_OnAddStatusChange Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnAerialSplineBegin
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnAerialSplineBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAerialSplineBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnAerialSplineEnd
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnAerialSplineEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnAerialSplineEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnArrivalRegisterMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnArrivalRegisterMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnArrivalRegisterMove");

	Params::EndBattleAIController_OnArrivalRegisterMove Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnATBHardAttackEvent
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnATBHardAttackEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnATBHardAttackEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnATBLightAttackEvent
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnATBLightAttackEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnATBLightAttackEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnBeginAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnBeginAbility(class AEndCharacter* InChara, class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBeginAbility");

	Params::EndBattleAIController_OnBeginAbility Parms{};

	Parms.InChara = InChara;
	Parms.InAbilityName = InAbilityName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnBeginCutScene
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             CutsceneID                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnBeginCutScene(const class FName& CutsceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBeginCutScene");

	Params::EndBattleAIController_OnBeginCutScene Parms{};

	Parms.CutsceneID = CutsceneID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnBeginOtherMove
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnBeginOtherMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBeginOtherMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnBPAttackChanceFinish
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnBPAttackChanceFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBPAttackChanceFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnBPAttackChanceStart
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnBPAttackChanceStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBPAttackChanceStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnBurstBegin
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnBurstBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBurstBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnBurstEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    instant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnBurstEnd(bool instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnBurstEnd");

	Params::EndBattleAIController_OnBurstEnd Parms{};

	Parms.instant = instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnChangeAggressive
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AEndBattleAIController::OnChangeAggressive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangeAggressive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnChangeLeader
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InLeader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnChangeLeader(class AEndCharacter* InLeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangeLeader");

	Params::EndBattleAIController_OnChangeLeader Parms{};

	Parms.InLeader = InLeader;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnChangeMotionState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Before                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   After                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnChangeMotionState(int32 Before, int32 After)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangeMotionState");

	Params::EndBattleAIController_OnChangeMotionState Parms{};

	Parms.Before = Before;
	Parms.After = After;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnChangeMoveMode
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnChangeMoveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangeMoveMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnChangePhase
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNew                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InOld                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnChangePhase(int32 InNew, int32 InOld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangePhase");

	Params::EndBattleAIController_OnChangePhase Parms{};

	Parms.InNew = InNew;
	Parms.InOld = InOld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnChangeRole
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnChangeRole(EEndAiBattleRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangeRole");

	Params::EndBattleAIController_OnChangeRole Parms{};

	Parms.InRole = InRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnChangeStep
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnChangeStep(int32 InStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnChangeStep");

	Params::EndBattleAIController_OnChangeStep Parms{};

	Parms.InStep = InStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnCheckBindAction
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CheckID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ComboIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnCheckBindAction(class FName ActionName, int32 CheckID, int32 ComboIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnCheckBindAction");

	Params::EndBattleAIController_OnCheckBindAction Parms{};

	Parms.ActionName = ActionName;
	Parms.CheckID = CheckID;
	Parms.ComboIndex = ComboIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnClearAction
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnClearAction(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnClearAction");

	Params::EndBattleAIController_OnClearAction Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnCompleteAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnCompleteAbility(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnCompleteAbility");

	Params::EndBattleAIController_OnCompleteAbility Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnCompletedAbilityExtraActionEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityFName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnCompletedAbilityExtraActionEvent(EPlayerType PlayerType, class FName AbilityFName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnCompletedAbilityExtraActionEvent");

	Params::EndBattleAIController_OnCompletedAbilityExtraActionEvent Parms{};

	Parms.PlayerType = PlayerType;
	Parms.AbilityFName = AbilityFName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnCompleteRegisterMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnCompleteRegisterMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnCompleteRegisterMove");

	Params::EndBattleAIController_OnCompleteRegisterMove Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnContactObject
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnContactObject(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnContactObject");

	Params::EndBattleAIController_OnContactObject Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnContactWall
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnContactWall(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnContactWall");

	Params::EndBattleAIController_OnContactWall Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnConvocation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InLeader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFormationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnConvocation(class AEndCharacter* InLeader, class FName InFormationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnConvocation");

	Params::EndBattleAIController_OnConvocation Parms{};

	Parms.InLeader = InLeader;
	Parms.InFormationName = InFormationName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnCreateDamageSource
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEndBattleDamageSourceComponent*  InDamageSource                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnCreateDamageSource(class AEndCharacter* InOwner, const class FName& DamageSourceID, class UEndBattleDamageSourceComponent* InDamageSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnCreateDamageSource");

	Params::EndBattleAIController_OnCreateDamageSource Parms{};

	Parms.InOwner = InOwner;
	Parms.DamageSourceID = DamageSourceID;
	Parms.InDamageSource = InDamageSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnCutSceneMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             Message                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnCutSceneMessage(const class FName& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnCutSceneMessage");

	Params::EndBattleAIController_OnCutSceneMessage Parms{};

	Parms.Message = Message;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnDamageSourceEntry
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEndBattleDamageSourceComponent*  InDamageSourceComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnDamageSourceEntry(class AEndCharacter* InChara, class FName InAbilityName, const struct FVector& InLocation, class UEndBattleDamageSourceComponent* InDamageSourceComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnDamageSourceEntry");

	Params::EndBattleAIController_OnDamageSourceEntry Parms{};

	Parms.InChara = InChara;
	Parms.InAbilityName = InAbilityName;
	Parms.InLocation = std::move(InLocation);
	Parms.InDamageSourceComponent = InDamageSourceComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnDead
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    AtBurst                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnDead(bool AtBurst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnDead");

	Params::EndBattleAIController_OnDead Parms{};

	Parms.AtBurst = AtBurst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnDestroyDamageSource
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             DamageSourceID                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnDestroyDamageSource(const class FName& DamageSourceID, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnDestroyDamageSource");

	Params::EndBattleAIController_OnDestroyDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnEndCutScene
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             CutsceneID                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEndCutScene(const class FName& CutsceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEndCutScene");

	Params::EndBattleAIController_OnEndCutScene Parms{};

	Parms.CutsceneID = CutsceneID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnEndOtherMove
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEndOtherMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEndOtherMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEndSetPlay
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEndSetPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEndSetPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEntryBattleScene
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEntryBattleScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEntryBattleScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEntryCharaRange
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEntryCharaRange(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEntryCharaRange");

	Params::EndBattleAIController_OnEntryCharaRange Parms{};

	Parms.InChara = InChara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnEscape
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEscapeBegin
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEscapeBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEscapeBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEscapeCancel
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEscapeCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEscapeCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEscapeSuccess
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnEscapeSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEscapeSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnEventAddWeakCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleWeakConditionType             ConditionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEventAddWeakCondition(EEndBattleWeakConditionType ConditionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEventAddWeakCondition");

	Params::EndBattleAIController_OnEventAddWeakCondition Parms{};

	Parms.ConditionType = ConditionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnEventCompletedWeakCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleWeakConditionType             ConditionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEventCompletedWeakCondition(EEndBattleWeakConditionType ConditionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEventCompletedWeakCondition");

	Params::EndBattleAIController_OnEventCompletedWeakCondition Parms{};

	Parms.ConditionType = ConditionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnEventDamageOverWeakCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleWeakConditionType             ConditionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEventDamageOverWeakCondition(EEndBattleWeakConditionType ConditionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEventDamageOverWeakCondition");

	Params::EndBattleAIController_OnEventDamageOverWeakCondition Parms{};

	Parms.ConditionType = ConditionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnEventDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEventDamageSource(class FName DamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEventDamageSource");

	Params::EndBattleAIController_OnEventDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.OnEventRemoveWeakCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleWeakConditionType             ConditionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnEventRemoveWeakCondition(EEndBattleWeakConditionType ConditionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnEventRemoveWeakCondition");

	Params::EndBattleAIController_OnEventRemoveWeakCondition Parms{};

	Parms.ConditionType = ConditionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnFear
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEndBattleDamageSourceComponent*  InDamageSourceComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnFear(class AEndCharacter* InChara, class FName InAbilityName, const struct FVector& InLocation, class UEndBattleDamageSourceComponent* InDamageSourceComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnFear");

	Params::EndBattleAIController_OnFear Parms{};

	Parms.InChara = InChara;
	Parms.InAbilityName = InAbilityName;
	Parms.InLocation = std::move(InLocation);
	Parms.InDamageSourceComponent = InDamageSourceComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnFirstUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnFirstUpdate(EEndAiBattleRole InRole, int32 InStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnFirstUpdate");

	Params::EndBattleAIController_OnFirstUpdate Parms{};

	Parms.InRole = InRole;
	Parms.InStep = InStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnGetCreateFieldPosition
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          outPosition                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBattleAbilityID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDamageSourceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::OnGetCreateFieldPosition(struct FVector* outPosition, class FName InBattleAbilityID, class FName InDamageSourceID, class FName InAnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnGetCreateFieldPosition");

	Params::EndBattleAIController_OnGetCreateFieldPosition Parms{};

	Parms.InBattleAbilityID = InBattleAbilityID;
	Parms.InDamageSourceID = InDamageSourceID;
	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outPosition != nullptr)
		*outPosition = std::move(Parms.outPosition);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.OnGetTargetFieldPosition
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          outPosition                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBattleAbilityID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDamageSourceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::OnGetTargetFieldPosition(struct FVector* outPosition, class FName InBattleAbilityID, class FName InDamageSourceID, class FName InAnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnGetTargetFieldPosition");

	Params::EndBattleAIController_OnGetTargetFieldPosition Parms{};

	Parms.InBattleAbilityID = InBattleAbilityID;
	Parms.InDamageSourceID = InDamageSourceID;
	Parms.InAnimationName = InAnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outPosition != nullptr)
		*outPosition = std::move(Parms.outPosition);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.OnGiveDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InBind                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InGuard                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InJustGuard                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    KeepOver                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDodge                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCounter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAttributeWeak                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDamageSourceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSteal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    heal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnGiveDamage(int32 Damage, class AEndCharacter* InTarget, class FName InName, bool InBind, bool InGuard, bool InJustGuard, bool KeepOver, bool InDodge, bool InCounter, class FName InBoneName, bool InAttributeWeak, class FName InDamageSourceID, bool InSteal, bool heal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnGiveDamage");

	Params::EndBattleAIController_OnGiveDamage Parms{};

	Parms.Damage = Damage;
	Parms.InTarget = InTarget;
	Parms.InName = InName;
	Parms.InBind = InBind;
	Parms.InGuard = InGuard;
	Parms.InJustGuard = InJustGuard;
	Parms.KeepOver = KeepOver;
	Parms.InDodge = InDodge;
	Parms.InCounter = InCounter;
	Parms.InBoneName = InBoneName;
	Parms.InAttributeWeak = InAttributeWeak;
	Parms.InDamageSourceID = InDamageSourceID;
	Parms.InSteal = InSteal;
	Parms.heal = heal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnInAreaSensorEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnInAreaSensorEvent(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnInAreaSensorEvent");

	Params::EndBattleAIController_OnInAreaSensorEvent Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnIncrementBattleCountPerID
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnIncrementBattleCountPerID(class FName TargetCharaName, EEndBattleCountLogType Type, class FName ID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnIncrementBattleCountPerID");

	Params::EndBattleAIController_OnIncrementBattleCountPerID Parms{};

	Parms.TargetCharaName = TargetCharaName;
	Parms.Type = Type;
	Parms.ID = ID;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnInitializeProc
// (Event, Protected, BlueprintEvent)

void AEndBattleAIController::OnInitializeProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnInitializeProc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnInterceptAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnInterceptAbility(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnInterceptAbility");

	Params::EndBattleAIController_OnInterceptAbility Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnIsHitDamage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   abilityUniqueID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::OnIsHitDamage(class AEndCharacter* causerChara, class FName AbilityID, int32 abilityUniqueID, class FName DamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnIsHitDamage");

	Params::EndBattleAIController_OnIsHitDamage Parms{};

	Parms.causerChara = causerChara;
	Parms.AbilityID = AbilityID;
	Parms.abilityUniqueID = abilityUniqueID;
	Parms.DamageSourceID = DamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.OnItemStolen
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnItemStolen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnItemStolen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InBind                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnKilled(int32 Damage, class AEndCharacter* InTarget, class FName InName, bool InBind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnKilled");

	Params::EndBattleAIController_OnKilled Parms{};

	Parms.Damage = Damage;
	Parms.InTarget = InTarget;
	Parms.InName = InName;
	Parms.InBind = InBind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMetaEventNotifyEnemyAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InSender                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InReceiver                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNormal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMetaEventNotifyEnemyAbility(class AEndCharacter* InSender, class AEndCharacter* InReceiver, class FName InName, bool InNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMetaEventNotifyEnemyAbility");

	Params::EndBattleAIController_OnMetaEventNotifyEnemyAbility Parms{};

	Parms.InSender = InSender;
	Parms.InReceiver = InReceiver;
	Parms.InName = InName;
	Parms.InNormal = InNormal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMetaEventTakeDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InSender                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InReceiver                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InBind                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InGuard                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDodge                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAttributeWeak                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InHeal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMetaEventTakeDamage(int32 Damage, class AEndCharacter* InSender, class AEndCharacter* InReceiver, class FName InName, bool InBind, bool InGuard, bool InDodge, class FName InBoneName, bool InAttributeWeak, bool InHeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMetaEventTakeDamage");

	Params::EndBattleAIController_OnMetaEventTakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.InSender = InSender;
	Parms.InReceiver = InReceiver;
	Parms.InName = InName;
	Parms.InBind = InBind;
	Parms.InGuard = InGuard;
	Parms.InDodge = InDodge;
	Parms.InBoneName = InBoneName;
	Parms.InAttributeWeak = InAttributeWeak;
	Parms.InHeal = InHeal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMetaMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMetaMessage(const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMetaMessage");

	Params::EndBattleAIController_OnMetaMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMetaMessageAboutCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMetaMessageAboutCharacter(class AEndCharacter* InChara, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMetaMessageAboutCharacter");

	Params::EndBattleAIController_OnMetaMessageAboutCharacter Parms{};

	Parms.InChara = InChara;
	Parms.InMessage = std::move(InMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMotionMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIntValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloatValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMotionMessage(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMotionMessage");

	Params::EndBattleAIController_OnMotionMessage Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InName = InName;
	Parms.InIntValue = InIntValue;
	Parms.InFloatValue = InFloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMotionStateMessageBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIntValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloatValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTotalDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMotionStateMessageBegin(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue, float InTotalDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMotionStateMessageBegin");

	Params::EndBattleAIController_OnMotionStateMessageBegin Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InName = InName;
	Parms.InIntValue = InIntValue;
	Parms.InFloatValue = InFloatValue;
	Parms.InTotalDuration = InTotalDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMotionStateMessageEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIntValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloatValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMotionStateMessageEnd(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMotionStateMessageEnd");

	Params::EndBattleAIController_OnMotionStateMessageEnd Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InName = InName;
	Parms.InIntValue = InIntValue;
	Parms.InFloatValue = InFloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnMotionStateMessageUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIntValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloatValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LatestContactWall                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LatestContact                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnMotionStateMessageUpdate(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue, float InProgress, bool LatestContactWall, bool LatestContact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnMotionStateMessageUpdate");

	Params::EndBattleAIController_OnMotionStateMessageUpdate Parms{};

	Parms.InMotionName = InMotionName;
	Parms.InName = InName;
	Parms.InIntValue = InIntValue;
	Parms.InFloatValue = InFloatValue;
	Parms.InProgress = InProgress;
	Parms.LatestContactWall = LatestContactWall;
	Parms.LatestContact = LatestContact;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnNotifyEnemyAbility
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InEnemy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNormal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnNotifyEnemyAbility(class AEndCharacter* InEnemy, class FName InName, bool InNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnNotifyEnemyAbility");

	Params::EndBattleAIController_OnNotifyEnemyAbility Parms{};

	Parms.InEnemy = InEnemy;
	Parms.InName = InName;
	Parms.InNormal = InNormal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnOrder
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMessage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnOrder(class AEndCharacter* InChara, class FName InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnOrder");

	Params::EndBattleAIController_OnOrder Parms{};

	Parms.InChara = InChara;
	Parms.InMessage = InMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnOutAreaSensorEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnOutAreaSensorEvent(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnOutAreaSensorEvent");

	Params::EndBattleAIController_OnOutAreaSensorEvent Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnOverlapTriggerBox
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             ObjectName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnOverlapTriggerBox(class FName ObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnOverlapTriggerBox");

	Params::EndBattleAIController_OnOverlapTriggerBox Parms{};

	Parms.ObjectName = ObjectName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPartsBreak
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             partsID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPartsBreak(class FName partsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPartsBreak");

	Params::EndBattleAIController_OnPartsBreak Parms{};

	Parms.partsID = partsID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPassiveUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPassiveUpdate(EEndAiBattleRole InRole, int32 InStep, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPassiveUpdate");

	Params::EndBattleAIController_OnPassiveUpdate Parms{};

	Parms.InRole = InRole;
	Parms.InStep = InStep;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPinchCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// EPlayerType                             playerTyoe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPinchCondition(EPlayerType playerTyoe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPinchCondition");

	Params::EndBattleAIController_OnPinchCondition Parms{};

	Parms.playerTyoe = playerTyoe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPreBurstBegin
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnPreBurstBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPreBurstBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnPreCalcDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             abilityName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPreCalcDamage(class AEndCharacter* causerCharacter, class FName abilityName, class FName DamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPreCalcDamage");

	Params::EndBattleAIController_OnPreCalcDamage Parms{};

	Parms.causerCharacter = causerCharacter;
	Parms.abilityName = abilityName;
	Parms.DamageSourceID = DamageSourceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPrepareAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPrepareAbility(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPrepareAbility");

	Params::EndBattleAIController_OnPrepareAbility Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPrepareProc
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnPrepareProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPrepareProc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnPreparingAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPreparingAbility(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPreparingAbility");

	Params::EndBattleAIController_OnPreparingAbility Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPressedDodgeButtonFromSyncAction
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   totalPower                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxPower                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPressedDodgeButtonFromSyncAction(float totalPower, float MaxPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPressedDodgeButtonFromSyncAction");

	Params::EndBattleAIController_OnPressedDodgeButtonFromSyncAction Parms{};

	Parms.totalPower = totalPower;
	Parms.MaxPower = MaxPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnPreTakeDamage
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   justHitRotYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    OwnerCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             hitBoneName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hitPosition                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InGuard                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnPreTakeDamage(float justHitRotYaw, class AEndCharacter* OwnerCharacter, class FName InName, class FName hitBoneName, class FName DamageSourceID, const struct FVector& hitPosition, int32 Damage, bool InGuard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnPreTakeDamage");

	Params::EndBattleAIController_OnPreTakeDamage Parms{};

	Parms.justHitRotYaw = justHitRotYaw;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.InName = InName;
	Parms.hitBoneName = hitBoneName;
	Parms.DamageSourceID = DamageSourceID;
	Parms.hitPosition = std::move(hitPosition);
	Parms.Damage = Damage;
	Parms.InGuard = InGuard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnReactionSensing
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleReactionInfluenceType         ReactionInfluenceType                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttackDirectionType           AttackDirectionType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityCommandType            CommandType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttributeType                 DmgSrcAttributeType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CutValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnReactionSensing(class AEndCharacter* causerChara, EEndBattleReactionInfluenceType ReactionInfluenceType, EEndBattleAttackDirectionType AttackDirectionType, EEndBattleAbilityCommandType CommandType, EEndBattleAttributeType DmgSrcAttributeType, int32 CutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnReactionSensing");

	Params::EndBattleAIController_OnReactionSensing Parms{};

	Parms.causerChara = causerChara;
	Parms.ReactionInfluenceType = ReactionInfluenceType;
	Parms.AttackDirectionType = AttackDirectionType;
	Parms.CommandType = CommandType;
	Parms.DmgSrcAttributeType = DmgSrcAttributeType;
	Parms.CutValue = CutValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnReactionSensingAbilityInvoke
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleReactionInfluenceType         ReactionInfluenceType                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttackDirectionType           AttackDirectionType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityCommandType            CommandType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnReactionSensingAbilityInvoke(class AEndCharacter* causerChara, EEndBattleReactionInfluenceType ReactionInfluenceType, EEndBattleAttackDirectionType AttackDirectionType, EEndBattleAbilityCommandType CommandType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnReactionSensingAbilityInvoke");

	Params::EndBattleAIController_OnReactionSensingAbilityInvoke Parms{};

	Parms.causerChara = causerChara;
	Parms.ReactionInfluenceType = ReactionInfluenceType;
	Parms.AttackDirectionType = AttackDirectionType;
	Parms.CommandType = CommandType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnReactionSensingAbilitySequenceInvoke
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleReactionInfluenceType         ReactionInfluenceType                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttackDirectionType           AttackDirectionType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityCommandType            CommandType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    AnimSequence                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnReactionSensingAbilitySequenceInvoke(class AEndCharacter* causerChara, EEndBattleReactionInfluenceType ReactionInfluenceType, EEndBattleAttackDirectionType AttackDirectionType, EEndBattleAbilityCommandType CommandType, const class UAnimSequence* AnimSequence, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnReactionSensingAbilitySequenceInvoke");

	Params::EndBattleAIController_OnReactionSensingAbilitySequenceInvoke Parms{};

	Parms.causerChara = causerChara;
	Parms.ReactionInfluenceType = ReactionInfluenceType;
	Parms.AttackDirectionType = AttackDirectionType;
	Parms.CommandType = CommandType;
	Parms.AnimSequence = AnimSequence;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnRemoveStatusChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndBattleStatusChangeType              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnRemoveStatusChange(EEndBattleStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnRemoveStatusChange");

	Params::EndBattleAIController_OnRemoveStatusChange Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnRunningRegisterMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnRunningRegisterMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnRunningRegisterMove");

	Params::EndBattleAIController_OnRunningRegisterMove Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnShowedWaveBattleScene
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnShowedWaveBattleScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnShowedWaveBattleScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSpecialStateEffectEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnSpecialStateEffectEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSpecialStateEffectEvent");

	Params::EndBattleAIController_OnSpecialStateEffectEvent Parms{};

	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnSpecialStatusChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             SpecialStatusChangeID                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChangeID                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           Params_0                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     ParamIDs                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ParamActors                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnSpecialStatusChange(const class FName& SpecialStatusChangeID, EEndBattleSpecialStatusChangeType Type, const class FName& ChangeID, const TArray<float>& Params_0, const TArray<class FName>& ParamIDs, const TArray<class AActor*>& ParamActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSpecialStatusChange");

	Params::EndBattleAIController_OnSpecialStatusChange Parms{};

	Parms.SpecialStatusChangeID = SpecialStatusChangeID;
	Parms.Type = Type;
	Parms.ChangeID = ChangeID;
	Parms.Params_0 = std::move(Params_0);
	Parms.ParamIDs = std::move(ParamIDs);
	Parms.ParamActors = std::move(ParamActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnSplineModeBegin
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSplineModeBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSplineModeBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSplineModeEnd
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSplineModeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSplineModeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnStartSetPlay
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnStartSetPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnStartSetPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnStolen
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnStolen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnStolen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSummonCutSceneDamaged
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSummonCutSceneDamaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSummonCutSceneDamaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSummonCutSceneEnd
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSummonCutSceneEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSummonCutSceneEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSummonCutSceneRequested
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSummonCutSceneRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSummonCutSceneRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSummonEndOfChanting
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSummonEndOfChanting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSummonEndOfChanting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSummonStartChanting
// (Event, Public, BlueprintEvent)

void AEndBattleAIController::OnSummonStartChanting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSummonStartChanting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIController.OnSuspendAbility
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiAbilitySuspendFactor              InFactor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiAbilitySuspendTiming              InTiming                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnSuspendAbility(class FName InName, EEndAiAbilitySuspendFactor InFactor, EEndAiAbilitySuspendTiming InTiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSuspendAbility");

	Params::EndBattleAIController_OnSuspendAbility Parms{};

	Parms.InName = InName;
	Parms.InFactor = InFactor;
	Parms.InTiming = InTiming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnSuspendRegisterTurn
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnSuspendRegisterTurn(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSuspendRegisterTurn");

	Params::EndBattleAIController_OnSuspendRegisterTurn Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnSyncActionChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             syncActionID                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ChangeID                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DetachDamageSourceID                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnSyncActionChange(const class FName& syncActionID, const class FName& ChangeID, const class FName& DetachDamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSyncActionChange");

	Params::EndBattleAIController_OnSyncActionChange Parms{};

	Parms.syncActionID = syncActionID;
	Parms.ChangeID = ChangeID;
	Parms.DetachDamageSourceID = DetachDamageSourceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnSystemMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnSystemMessage(const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnSystemMessage");

	Params::EndBattleAIController_OnSystemMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnTakeAbilityInvoke
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             abilityName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityCommandType            AbilityCommandType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     AnimationNameList                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnTakeAbilityInvoke(class AEndCharacter* causerChara, const class FName& abilityName, EEndBattleAbilityCommandType AbilityCommandType, const TArray<class FName>& AnimationNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnTakeAbilityInvoke");

	Params::EndBattleAIController_OnTakeAbilityInvoke Parms{};

	Parms.causerChara = causerChara;
	Parms.abilityName = abilityName;
	Parms.AbilityCommandType = AbilityCommandType;
	Parms.AnimationNameList = std::move(AnimationNameList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnTakeAbilitySequenceInvoke
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             abilityName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    AnimSequence                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnTakeAbilitySequenceInvoke(class AEndCharacter* causerChara, const class FName& abilityName, const class FName& AnimName, const class UAnimSequence* AnimSequence, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnTakeAbilitySequenceInvoke");

	Params::EndBattleAIController_OnTakeAbilitySequenceInvoke Parms{};

	Parms.causerChara = causerChara;
	Parms.abilityName = abilityName;
	Parms.AnimName = AnimName;
	Parms.AnimSequence = AnimSequence;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnTakeDamage
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityCommandType            InCommandType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InBind                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InGuard                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDodge                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAttributeWeak                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDmgSrcID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttributeType                 InDmgSrcAttribute                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   justHitRotYaw                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hitPosition                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InHeal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCounter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndDataTableBattleDamageSource  dataTableBattleDamageSource                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    useAbilityUCPC                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnTakeDamage(int32 Damage, class AEndCharacter* InChara, class FName InName, EEndBattleAbilityCommandType InCommandType, bool InBind, bool InGuard, bool InDodge, class FName InBoneName, bool InAttributeWeak, class FName InDmgSrcID, EEndBattleAttributeType InDmgSrcAttribute, float justHitRotYaw, const struct FVector& hitPosition, bool InHeal, bool InCounter, const struct FEndDataTableBattleDamageSource& dataTableBattleDamageSource, bool useAbilityUCPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnTakeDamage");

	Params::EndBattleAIController_OnTakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.InChara = InChara;
	Parms.InName = InName;
	Parms.InCommandType = InCommandType;
	Parms.InBind = InBind;
	Parms.InGuard = InGuard;
	Parms.InDodge = InDodge;
	Parms.InBoneName = InBoneName;
	Parms.InAttributeWeak = InAttributeWeak;
	Parms.InDmgSrcID = InDmgSrcID;
	Parms.InDmgSrcAttribute = InDmgSrcAttribute;
	Parms.justHitRotYaw = justHitRotYaw;
	Parms.hitPosition = std::move(hitPosition);
	Parms.InHeal = InHeal;
	Parms.InCounter = InCounter;
	Parms.dataTableBattleDamageSource = std::move(dataTableBattleDamageSource);
	Parms.useAbilityUCPC = useAbilityUCPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnTakeDamageOnce
// (Event, Public, BlueprintEvent)
// Parameters:
// class AEndCharacter*                    InCauserChara                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAbilityID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAttributeWeak                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityCommandType            AbilityCommandType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnTakeDamageOnce(class AEndCharacter* InCauserChara, class FName InAbilityID, bool InAttributeWeak, EEndBattleAbilityCommandType AbilityCommandType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnTakeDamageOnce");

	Params::EndBattleAIController_OnTakeDamageOnce Parms{};

	Parms.InCauserChara = InCauserChara;
	Parms.InAbilityID = InAbilityID;
	Parms.InAttributeWeak = InAttributeWeak;
	Parms.AbilityCommandType = AbilityCommandType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OnUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OnUpdate(EEndAiBattleRole InRole, int32 InStep, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OnUpdate");

	Params::EndBattleAIController_OnUpdate Parms{};

	Parms.InRole = InRole;
	Parms.InStep = InStep;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIController.OverrideDamageHitReactionID
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndDataTableBattleAbility       dataTableBattleAbility                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    abilityFirstHit                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             damageHitReactionID                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::OverrideDamageHitReactionID(class FName AbilityID, const struct FEndDataTableBattleAbility& dataTableBattleAbility, class FName DamageSourceID, bool abilityFirstHit, class FName* damageHitReactionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "OverrideDamageHitReactionID");

	Params::EndBattleAIController_OverrideDamageHitReactionID Parms{};

	Parms.AbilityID = AbilityID;
	Parms.dataTableBattleAbility = std::move(dataTableBattleAbility);
	Parms.DamageSourceID = DamageSourceID;
	Parms.abilityFirstHit = abilityFirstHit;

	UObject::ProcessEvent(Func, &Parms);

	if (damageHitReactionID != nullptr)
		*damageHitReactionID = Parms.damageHitReactionID;
}


// Function EndGame.EndBattleAIController.PlayAddMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             motionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndExtraActionLayer                    Layer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInfiniteLoop                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::PlayAddMotion(class FName motionName, EEndExtraActionLayer Layer, bool bInfiniteLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "PlayAddMotion");

	Params::EndBattleAIController_PlayAddMotion Parms{};

	Parms.motionName = motionName;
	Parms.Layer = Layer;
	Parms.bInfiniteLoop = bInfiniteLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.PlayBattleCameraSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SequenceID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::PlayBattleCameraSequence(class FName SequenceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "PlayBattleCameraSequence");

	Params::EndBattleAIController_PlayBattleCameraSequence Parms{};

	Parms.SequenceID = SequenceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.PlayFsmAddMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             motionBegin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             motionLoop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             motionEnd                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::PlayFsmAddMotion(class FName motionBegin, class FName motionLoop, class FName motionEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "PlayFsmAddMotion");

	Params::EndBattleAIController_PlayFsmAddMotion Parms{};

	Parms.motionBegin = motionBegin;
	Parms.motionLoop = motionLoop;
	Parms.motionEnd = motionEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.PlayMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             motionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::PlayMotion(class FName motionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "PlayMotion");

	Params::EndBattleAIController_PlayMotion Parms{};

	Parms.motionName = motionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.PlayPartLoopMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             motionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBone                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndExtraActionLayer                    Layer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::PlayPartLoopMotion(class FName motionName, class FName InBone, EEndExtraActionLayer Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "PlayPartLoopMotion");

	Params::EndBattleAIController_PlayPartLoopMotion Parms{};

	Parms.motionName = motionName;
	Parms.InBone = InBone;
	Parms.Layer = Layer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.PlayPartMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             motionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InBone                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndExtraActionLayer                    Layer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   overrideBlendIn                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   overrideBlendOut                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::PlayPartMotion(class FName motionName, class FName InBone, EEndExtraActionLayer Layer, float overrideBlendIn, float overrideBlendOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "PlayPartMotion");

	Params::EndBattleAIController_PlayPartMotion Parms{};

	Parms.motionName = motionName;
	Parms.InBone = InBone;
	Parms.Layer = Layer;
	Parms.overrideBlendIn = overrideBlendIn;
	Parms.overrideBlendOut = overrideBlendOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RegisterAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InATB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRandomATB                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMinRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMaxRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InActionMin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InActionMax                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeightMin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeightMax                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InViewRange                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ViewReverse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayMove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAbility                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayRandAbility                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNeedMove                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNeedBetterMove                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAerialNeedMove                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCancelLostTarget                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InOverrideLeftAbility                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InOverrideRightAbility                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InNeedSee                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterAbility(class FName InName, class FName InID, float InTime, float InTimeout, int32 InATB, int32 InRandomATB, float InMinRange, float InMaxRange, float InActionMin, float InActionMax, float InHeightMin, float InHeightMax, float InViewRange, bool ViewReverse, float InDelayMove, float InDelayAbility, float InDelayRandAbility, bool InNeedMove, bool InNeedBetterMove, bool InAerialNeedMove, bool InCancelLostTarget, class FName InOverrideLeftAbility, class FName InOverrideRightAbility, bool InNeedSee)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterAbility");

	Params::EndBattleAIController_RegisterAbility Parms{};

	Parms.InName = InName;
	Parms.InID = InID;
	Parms.InTime = InTime;
	Parms.InTimeout = InTimeout;
	Parms.InATB = InATB;
	Parms.InRandomATB = InRandomATB;
	Parms.InMinRange = InMinRange;
	Parms.InMaxRange = InMaxRange;
	Parms.InActionMin = InActionMin;
	Parms.InActionMax = InActionMax;
	Parms.InHeightMin = InHeightMin;
	Parms.InHeightMax = InHeightMax;
	Parms.InViewRange = InViewRange;
	Parms.ViewReverse = ViewReverse;
	Parms.InDelayMove = InDelayMove;
	Parms.InDelayAbility = InDelayAbility;
	Parms.InDelayRandAbility = InDelayRandAbility;
	Parms.InNeedMove = InNeedMove;
	Parms.InNeedBetterMove = InNeedBetterMove;
	Parms.InAerialNeedMove = InAerialNeedMove;
	Parms.InCancelLostTarget = InCancelLostTarget;
	Parms.InOverrideLeftAbility = InOverrideLeftAbility;
	Parms.InOverrideRightAbility = InOverrideRightAbility;
	Parms.InNeedSee = InNeedSee;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterAbilityListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAbility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterAbilityListener(class FName InAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterAbilityListener");

	Params::EndBattleAIController_RegisterAbilityListener Parms{};

	Parms.InAbility = InAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterCharaRangeListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRange                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterCharaRangeListener(class AEndCharacter* InChara, float InRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterCharaRangeListener");

	Params::EndBattleAIController_RegisterCharaRangeListener Parms{};

	Parms.InChara = InChara;
	Parms.InRange = InRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterCombo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InATB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRandomATB                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction1                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction2                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction3                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction4                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction5                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction6                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction7                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InAction8                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTimeout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterCombo(class FName InName, float InTime, int32 InATB, int32 InRandomATB, class FName InAction1, class FName InAction2, class FName InAction3, class FName InAction4, class FName InAction5, class FName InAction6, class FName InAction7, class FName InAction8, bool InLock, bool InTimeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterCombo");

	Params::EndBattleAIController_RegisterCombo Parms{};

	Parms.InName = InName;
	Parms.InTime = InTime;
	Parms.InATB = InATB;
	Parms.InRandomATB = InRandomATB;
	Parms.InAction1 = InAction1;
	Parms.InAction2 = InAction2;
	Parms.InAction3 = InAction3;
	Parms.InAction4 = InAction4;
	Parms.InAction5 = InAction5;
	Parms.InAction6 = InAction6;
	Parms.InAction7 = InAction7;
	Parms.InAction8 = InAction8;
	Parms.InLock = InLock;
	Parms.InTimeout = InTimeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterConfront
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterConfront(class FName InName, float InMin, float InMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterConfront");

	Params::EndBattleAIController_RegisterConfront Parms{};

	Parms.InName = InName;
	Parms.InMin = InMin;
	Parms.InMax = InMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InOverrideKeep                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterMotion(class FName InName, float InTime, int32 InOverrideKeep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterMotion");

	Params::EndBattleAIController_RegisterMotion Parms{};

	Parms.InName = InName;
	Parms.InTime = InTime;
	Parms.InOverrideKeep = InOverrideKeep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLookAt                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPathFind                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWalkRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InWaitIdle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SmoothingDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InImmediate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterMove(class FName InName, const struct FVector& InLocation, const struct FVector& InLookAt, float InRadius, float InTimeout, bool InPathFind, float InWalkRadius, bool InWaitIdle, float SmoothingDistance, bool InImmediate, float InInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterMove");

	Params::EndBattleAIController_RegisterMove Parms{};

	Parms.InName = InName;
	Parms.InLocation = std::move(InLocation);
	Parms.InLookAt = std::move(InLookAt);
	Parms.InRadius = InRadius;
	Parms.InTimeout = InTimeout;
	Parms.InPathFind = InPathFind;
	Parms.InWalkRadius = InWalkRadius;
	Parms.InWaitIdle = InWaitIdle;
	Parms.SmoothingDistance = SmoothingDistance;
	Parms.InImmediate = InImmediate;
	Parms.InInterval = InInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InOrder                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InRace                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattleOrderRule                        InRule                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterest                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterOrder(class FName InName, class FName InOrder, int32 InCount, class FName InRace, EBattleOrderRule InRule, float InInterest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterOrder");

	Params::EndBattleAIController_RegisterOrder Parms{};

	Parms.InName = InName;
	Parms.InOrder = InOrder;
	Parms.InCount = InCount;
	Parms.InRace = InRace;
	Parms.InRule = InRule;
	Parms.InInterest = InInterest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RegisterOverlapTriggerBox
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RegisterOverlapTriggerBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterOverlapTriggerBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RegisterTurn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMargin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RegisterTurn(class FName InName, float InYaw, float InMargin, bool InTarget, float InTimeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RegisterTurn");

	Params::EndBattleAIController_RegisterTurn Parms{};

	Parms.InName = InName;
	Parms.InYaw = InYaw;
	Parms.InMargin = InMargin;
	Parms.InTarget = InTarget;
	Parms.InTimeout = InTimeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RemakeWeakCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETriggerWeakRemakeType                  remakeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    resetProtectionTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RemakeWeakCondition(ETriggerWeakRemakeType remakeType, bool resetProtectionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemakeWeakCondition");

	Params::EndBattleAIController_RemakeWeakCondition Parms{};

	Parms.remakeType = remakeType;
	Parms.resetProtectionTime = resetProtectionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveAllWeakCondiiton
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RemoveAllWeakCondiiton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveAllWeakCondiiton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveAttachEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AttachSocketName                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResourceName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RemoveAttachEffect(const class FName AttachSocketName, const class FName ResourceName, bool bDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveAttachEffect");

	Params::EndBattleAIController_RemoveAttachEffect Parms{};

	Parms.AttachSocketName = AttachSocketName;
	Parms.ResourceName = ResourceName;
	Parms.bDestroy = bDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveIgnoreNavArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RemoveIgnoreNavArea(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveIgnoreNavArea");

	Params::EndBattleAIController_RemoveIgnoreNavArea Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveSpecialStateEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             specialStateEffectID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RemoveSpecialStateEffect(class FName specialStateEffectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveSpecialStateEffect");

	Params::EndBattleAIController_RemoveSpecialStateEffect Parms{};

	Parms.specialStateEffectID = specialStateEffectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveSpecialStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RemoveSpecialStatus(EEndBattleSpecialStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveSpecialStatus");

	Params::EndBattleAIController_RemoveSpecialStatus Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveSpecialStatusByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RemoveSpecialStatusByID(class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveSpecialStatusByID");

	Params::EndBattleAIController_RemoveSpecialStatusByID Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RemoveStatusChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleStatusChangeType              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RemoveStatusChange(EEndBattleStatusChangeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RemoveStatusChange");

	Params::EndBattleAIController_RemoveStatusChange Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestAction(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestAction");

	Params::EndBattleAIController_RequestAction Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestActionStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestActionStep(class FName InName, int32 InStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestActionStep");

	Params::EndBattleAIController_RequestActionStep Parms{};

	Parms.InName = InName;
	Parms.InStep = InStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestActionSubStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSubStep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestActionSubStep(class FName InName, int32 InSubStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestActionSubStep");

	Params::EndBattleAIController_RequestActionSubStep Parms{};

	Parms.InName = InName;
	Parms.InSubStep = InSubStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestActorChase
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InOffset                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestActorChase(class AActor* InActor, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestActorChase");

	Params::EndBattleAIController_RequestActorChase Parms{};

	Parms.InActor = InActor;
	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestAerialCrash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InBurst                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestAerialCrash(bool InBurst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestAerialCrash");

	Params::EndBattleAIController_RequestAerialCrash Parms{};

	Parms.InBurst = InBurst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestAttachSyncAction
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RequestAttachSyncAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestAttachSyncAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestBindAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestBindAction(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestBindAction");

	Params::EndBattleAIController_RequestBindAction Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestBurstLaunch
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RequestBurstLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestBurstLaunch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestDodge
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnemy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestDodge(const struct FVector& Location, bool InEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestDodge");

	Params::EndBattleAIController_RequestDodge Parms{};

	Parms.Location = std::move(Location);
	Parms.InEnemy = InEnemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestEscapeWait
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RequestEscapeWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestEscapeWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestGroundCrash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InBurst                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestGroundCrash(bool InBurst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestGroundCrash");

	Params::EndBattleAIController_RequestGroundCrash Parms{};

	Parms.InBurst = InBurst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestGroundSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestGroundSpline(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestGroundSpline");

	Params::EndBattleAIController_RequestGroundSpline Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestGuard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InMovable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestGuard(float InTime, bool InMovable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestGuard");

	Params::EndBattleAIController_RequestGuard Parms{};

	Parms.InTime = InTime;
	Parms.InMovable = InMovable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestHeliMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FEndBattleHelicopterSpec         InSpec                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   InGoal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSkip                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestHeliMove(const struct FEndBattleHelicopterSpec& InSpec, int32 InGoal, bool InSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestHeliMove");

	Params::EndBattleAIController_RequestHeliMove Parms{};

	Parms.InSpec = std::move(InSpec);
	Parms.InGoal = InGoal;
	Parms.InSkip = InSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestHeliOverridePoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndNavModifierVolume*            InNav                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndBattleHelicopterSpec         InSpec                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestHeliOverridePoint(class AEndNavModifierVolume* InNav, const struct FEndBattleHelicopterSpec& InSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestHeliOverridePoint");

	Params::EndBattleAIController_RequestHeliOverridePoint Parms{};

	Parms.InNav = InNav;
	Parms.InSpec = std::move(InSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestNextSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestNextSpline(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestNextSpline");

	Params::EndBattleAIController_RequestNextSpline Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestOtherLaunch
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RequestOtherLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestOtherLaunch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestOtherMove
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::RequestOtherMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestOtherMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestPathFind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IgnoreCanMove                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestPathFind(bool IgnoreCanMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestPathFind");

	Params::EndBattleAIController_RequestPathFind Parms{};

	Parms.IgnoreCanMove = IgnoreCanMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestPathFindLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLookAt                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SmoothingDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestPathFindLocation(const struct FVector& InLocation, const struct FVector& InLookAt, float InRadius, float SmoothingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestPathFindLocation");

	Params::EndBattleAIController_RequestPathFindLocation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InLookAt = std::move(InLookAt);
	Parms.InRadius = InRadius;
	Parms.SmoothingDistance = SmoothingDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestReserveAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   iValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           sValue                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestReserveAction(class FName InName, int32 iValue, float fValue, const class FString& sValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestReserveAction");

	Params::EndBattleAIController_RequestReserveAction Parms{};

	Parms.InName = InName;
	Parms.iValue = iValue;
	Parms.fValue = fValue;
	Parms.sValue = std::move(sValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestReserveAction2Arg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   iValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   iValue2                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   fValue2                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           sValue                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           sValue2                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::RequestReserveAction2Arg(class FName InName, int32 iValue, int32 iValue2, float fValue, float fValue2, const class FString& sValue, const class FString& sValue2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestReserveAction2Arg");

	Params::EndBattleAIController_RequestReserveAction2Arg Parms{};

	Parms.InName = InName;
	Parms.iValue = iValue;
	Parms.iValue2 = iValue2;
	Parms.fValue = fValue;
	Parms.fValue2 = fValue2;
	Parms.sValue = std::move(sValue);
	Parms.sValue2 = std::move(sValue2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.RequestShowAbilityName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNonGuardableIcon                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestShowAbilityName(class FName InName, float InTime, bool bNonGuardableIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestShowAbilityName");

	Params::EndBattleAIController_RequestShowAbilityName Parms{};

	Parms.InName = InName;
	Parms.InTime = InTime;
	Parms.bNonGuardableIcon = bNonGuardableIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.RequestWandering
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::RequestWandering(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "RequestWandering");

	Params::EndBattleAIController_RequestWandering Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ReserveAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InImmediate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ReserveAbility(class FName InName, bool InImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ReserveAbility");

	Params::EndBattleAIController_ReserveAbility Parms{};

	Parms.InName = InName;
	Parms.InImmediate = InImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ResetActionAbilityLocalCountFromID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAbilityID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetActionAbilityLocalCountFromID(class FName InAbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetActionAbilityLocalCountFromID");

	Params::EndBattleAIController_ResetActionAbilityLocalCountFromID Parms{};

	Parms.InAbilityID = InAbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetActionLocalCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetActionLocalCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetActionLocalCount");

	Params::EndBattleAIController_ResetActionLocalCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetActionRequestCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetActionRequestCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetActionRequestCount");

	Params::EndBattleAIController_ResetActionRequestCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetAerial
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetAerial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetAerial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetAirPointArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetAirPointArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetAirPointArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetAllWork
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetAllWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetAllWork");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetAngleRangeTargetPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetAngleRangeTargetPoint(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetAngleRangeTargetPoint");

	Params::EndBattleAIController_ResetAngleRangeTargetPoint Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetATB
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetATB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetATB");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetBlackListArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetBlackListArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetBlackListArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetBP
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetChaseArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetChaseArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetChaseArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetDefenseArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetDefenseArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetDefenseArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetIgnoreNavArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetIgnoreNavArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetIgnoreNavArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetLatestContactWall
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetLatestContactWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetLatestContactWall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetMovementMode
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetMovementMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetMovementMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetOverrideActiveAimAngle
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetOverrideActiveAimAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetOverrideActiveAimAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetOverrideAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndLocomotionAnim                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InInter                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetOverrideAnim(EEndLocomotionAnim InType, const class FName InInter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetOverrideAnim");

	Params::EndBattleAIController_ResetOverrideAnim Parms{};

	Parms.InType = InType;
	Parms.InInter = InInter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetOverrideBattleCharaPartsSpec
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BaseID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetOverrideBattleCharaPartsSpec(class FName BaseID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetOverrideBattleCharaPartsSpec");

	Params::EndBattleAIController_ResetOverrideBattleCharaPartsSpec Parms{};

	Parms.BaseID = BaseID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetOverrideBattleCharaSpec
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetOverrideBattleCharaSpec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetOverrideBattleCharaSpec");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetOverrideKeep
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetOverrideKeep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetOverrideKeep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetOverrideUpperAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InPlayEndAnim                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetOverrideUpperAnim(bool InPlayEndAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetOverrideUpperAnim");

	Params::EndBattleAIController_ResetOverrideUpperAnim Parms{};

	Parms.InPlayEndAnim = InPlayEndAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetPathArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetPathArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetPathArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWhiteListArea
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ResetWhiteListArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWhiteListArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWorkBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetWorkBool(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWorkBool");

	Params::EndBattleAIController_ResetWorkBool Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWorkFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetWorkFloat(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWorkFloat");

	Params::EndBattleAIController_ResetWorkFloat Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWorkInt32
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetWorkInt32(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWorkInt32");

	Params::EndBattleAIController_ResetWorkInt32 Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWorkName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetWorkName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWorkName");

	Params::EndBattleAIController_ResetWorkName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWorkRotator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetWorkRotator(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWorkRotator");

	Params::EndBattleAIController_ResetWorkRotator Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ResetWorkVector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ResetWorkVector(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ResetWorkVector");

	Params::EndBattleAIController_ResetWorkVector Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SelfDisappear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    drawPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SelfDisappear(bool drawPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SelfDisappear");

	Params::EndBattleAIController_SelfDisappear Parms{};

	Parms.drawPause = drawPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetActionTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetActionTime(class FName InName, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetActionTime");

	Params::EndBattleAIController_SetActionTime Parms{};

	Parms.InName = InName;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetAerialBoidsLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InLeader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetAerialBoidsLeader(class AEndCharacter* InLeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetAerialBoidsLeader");

	Params::EndBattleAIController_SetAerialBoidsLeader Parms{};

	Parms.InLeader = InLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetAerialMoveType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleAirMoveType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetAerialMoveType(EBattleAirMoveType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetAerialMoveType");

	Params::EndBattleAIController_SetAerialMoveType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetAISpec
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetAISpec(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetAISpec");

	Params::EndBattleAIController_SetAISpec Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetAngleRangeTargetPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   baseAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   angleRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetAngleRangeTargetPoint(class FName SocketName, float baseAngle, float angleRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetAngleRangeTargetPoint");

	Params::EndBattleAIController_SetAngleRangeTargetPoint Parms{};

	Parms.SocketName = SocketName;
	Parms.baseAngle = baseAngle;
	Parms.angleRange = angleRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBattleAbilityRotateStateLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBattleAbilityRotateStateLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBattleAbilityRotateStateLocation");

	Params::EndBattleAIController_SetBattleAbilityRotateStateLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBattleAbilityRotateStatePointName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             modifierVolumeName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBattleAbilityRotateStatePointName(class FName modifierVolumeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBattleAbilityRotateStatePointName");

	Params::EndBattleAIController_SetBattleAbilityRotateStatePointName Parms{};

	Parms.modifierVolumeName = modifierVolumeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBattleAIFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleAIInfoFlag                       InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBattleAIFlag(EBattleAIInfoFlag InType, bool InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBattleAIFlag");

	Params::EndBattleAIController_SetBattleAIFlag Parms{};

	Parms.InType = InType;
	Parms.InFlag = InFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBattleAIParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleAIInfoParam                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InParam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBattleAIParam(EBattleAIInfoParam InType, float InParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBattleAIParam");

	Params::EndBattleAIController_SetBattleAIParam Parms{};

	Parms.InType = InType;
	Parms.InParam = InParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBattleSafeTransform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBattleSafeTransform(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBattleSafeTransform");

	Params::EndBattleAIController_SetBattleSafeTransform Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBattleSensorShapeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleSensorShapeType                  InSensorShapeType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngleRange                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadiusMin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadiusMax                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBattleSensorShapeType(EBattleSensorShapeType InSensorShapeType, float InAngleRange, float InRadiusMin, float InRadiusMax, class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBattleSensorShapeType");

	Params::EndBattleAIController_SetBattleSensorShapeType Parms{};

	Parms.InSensorShapeType = InSensorShapeType;
	Parms.InAngleRange = InAngleRange;
	Parms.InRadiusMin = InRadiusMin;
	Parms.InRadiusMax = InRadiusMax;
	Parms.InSocketName = InSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBodyDummyParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PartsSpecID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBodyDummyParts(class FName PartsSpecID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBodyDummyParts");

	Params::EndBattleAIController_SetBodyDummyParts Parms{};

	Parms.PartsSpecID = PartsSpecID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBP(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBP");

	Params::EndBattleAIController_SetBP Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBPAttackChance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBPAttackChance(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBPAttackChance");

	Params::EndBattleAIController_SetBPAttackChance Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBPDamageCoefficient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   coefficient                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBPDamageCoefficient(float coefficient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBPDamageCoefficient");

	Params::EndBattleAIController_SetBPDamageCoefficient Parms{};

	Parms.coefficient = coefficient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBPPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBPPercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBPPercent");

	Params::EndBattleAIController_SetBPPercent Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetBurstForceAerial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetBurstForceAerial(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetBurstForceAerial");

	Params::EndBattleAIController_SetBurstForceAerial Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetCapturableBySummon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetCapturableBySummon(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetCapturableBySummon");

	Params::EndBattleAIController_SetCapturableBySummon Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetCommandLinkageTimeScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetCommandLinkageTimeScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetCommandLinkageTimeScale");

	Params::EndBattleAIController_SetCommandLinkageTimeScale Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetConfront
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InNear                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InConfront                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFar                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetConfront(float InNear, float InConfront, float InFar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetConfront");

	Params::EndBattleAIController_SetConfront Parms{};

	Parms.InNear = InNear;
	Parms.InConfront = InConfront;
	Parms.InFar = InFar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetCountDownTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InParam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetCountDownTimer(class FName InName, float InParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetCountDownTimer");

	Params::EndBattleAIController_SetCountDownTimer Parms{};

	Parms.InName = InName;
	Parms.InParam = InParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableBPDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    disable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableBPDamage(bool disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableBPDamage");

	Params::EndBattleAIController_SetDisableBPDamage Parms{};

	Parms.disable = disable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableBurst
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    disable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableBurst(bool disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableBurst");

	Params::EndBattleAIController_SetDisableBurst Parms{};

	Parms.disable = disable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             partsID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableDamage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisableDamageCollision                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableParts(class FName partsID, bool bDisableTarget, bool bDisableDamage, bool bDisableDamageCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableParts");

	Params::EndBattleAIController_SetDisableParts Parms{};

	Parms.partsID = partsID;
	Parms.bDisableTarget = bDisableTarget;
	Parms.bDisableDamage = bDisableDamage;
	Parms.bDisableDamageCollision = bDisableDamageCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableReaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    disable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableReaction(bool disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableReaction");

	Params::EndBattleAIController_SetDisableReaction Parms{};

	Parms.disable = disable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableRemainAttributeEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleAttributeType                 attribute                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableRemainAttributeEffect(EEndBattleAttributeType attribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableRemainAttributeEffect");

	Params::EndBattleAIController_SetDisableRemainAttributeEffect Parms{};

	Parms.attribute = attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableSuspendAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    disable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableSuspendAction(bool disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableSuspendAction");

	Params::EndBattleAIController_SetDisableSuspendAction Parms{};

	Parms.disable = disable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetDisableTargetPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetDisableTargetPoint(class FName SocketName, bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetDisableTargetPoint");

	Params::EndBattleAIController_SetDisableTargetPoint Parms{};

	Parms.SocketName = SocketName;
	Parms.bDisable = bDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetEnableCompletedAbilityExtraActionEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetEnableCompletedAbilityExtraActionEvent(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetEnableCompletedAbilityExtraActionEvent");

	Params::EndBattleAIController_SetEnableCompletedAbilityExtraActionEvent Parms{};

	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetEnableContactWallReturnAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetEnableContactWallReturnAngle(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetEnableContactWallReturnAngle");

	Params::EndBattleAIController_SetEnableContactWallReturnAngle Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetEnabledUpdateAimLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetEnabledUpdateAimLocation(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetEnabledUpdateAimLocation");

	Params::EndBattleAIController_SetEnabledUpdateAimLocation Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetEnablePauseUpdateDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetEnablePauseUpdateDamageSource(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetEnablePauseUpdateDamageSource");

	Params::EndBattleAIController_SetEnablePauseUpdateDamageSource Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetEnableWeakCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndWeakConditionEnable                 Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndWeakConditionEnableOption           Option                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetEnableWeakCondition(EEndWeakConditionEnable Condition, EEndWeakConditionEnableOption Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetEnableWeakCondition");

	Params::EndBattleAIController_SetEnableWeakCondition Parms{};

	Parms.Condition = Condition;
	Parms.Option = Option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetEyeTraceFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InParty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnemy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetEyeTraceFlag(bool InTarget, bool InParty, bool InEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetEyeTraceFlag");

	Params::EndBattleAIController_SetEyeTraceFlag Parms{};

	Parms.InTarget = InTarget;
	Parms.InParty = InParty;
	Parms.InEnemy = InEnemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InUpSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDownSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetFly(float InHeight, float InUpSpeed, float InDownSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetFly");

	Params::EndBattleAIController_SetFly Parms{};

	Parms.InHeight = InHeight;
	Parms.InUpSpeed = InUpSpeed;
	Parms.InDownSpeed = InDownSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetForceDefaultCollisionSetting
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SetForceDefaultCollisionSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetForceDefaultCollisionSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetForceDefaultSetting
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SetForceDefaultSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetForceDefaultSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetForceEnableTargetSpecialStatusChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetForceEnableTargetSpecialStatusChange(EEndBattleSpecialStatusChangeType Type, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetForceEnableTargetSpecialStatusChange");

	Params::EndBattleAIController_SetForceEnableTargetSpecialStatusChange Parms{};

	Parms.Type = Type;
	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetForceMoveType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndAiMoveMode                          InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetForceMoveType(EEndAiMoveMode InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetForceMoveType");

	Params::EndBattleAIController_SetForceMoveType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetHateUpdateFlag
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SetHateUpdateFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetHateUpdateFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetHPMinLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetHPMinLimit(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetHPMinLimit");

	Params::EndBattleAIController_SetHPMinLimit Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetHPMinLimitAIPCAttackPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetHPMinLimitAIPCAttackPercent(int32 InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetHPMinLimitAIPCAttackPercent");

	Params::EndBattleAIController_SetHPMinLimitAIPCAttackPercent Parms{};

	Parms.InPercent = InPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetHPMinLimitPassiveDamagePercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetHPMinLimitPassiveDamagePercent(int32 InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetHPMinLimitPassiveDamagePercent");

	Params::EndBattleAIController_SetHPMinLimitPassiveDamagePercent Parms{};

	Parms.InPercent = InPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetHPMinLimitPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetHPMinLimitPercent(int32 InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetHPMinLimitPercent");

	Params::EndBattleAIController_SetHPMinLimitPercent Parms{};

	Parms.InPercent = InPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetHPPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetHPPercent(int32 Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetHPPercent");

	Params::EndBattleAIController_SetHPPercent Parms{};

	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetIgnore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetIgnore(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetIgnore");

	Params::EndBattleAIController_SetIgnore Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetMeshDisp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InDisp                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetMeshDisp(bool InDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetMeshDisp");

	Params::EndBattleAIController_SetMeshDisp Parms{};

	Parms.InDisp = InDisp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetMovementMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bMovable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHitWall                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHitObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFitFloor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMaxWeight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetMovementMode(bool bMovable, bool bHitWall, bool bHitObject, bool bFitFloor, bool bMaxWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetMovementMode");

	Params::EndBattleAIController_SetMovementMode Parms{};

	Parms.bMovable = bMovable;
	Parms.bHitWall = bHitWall;
	Parms.bHitObject = bHitObject;
	Parms.bFitFloor = bFitFloor;
	Parms.bMaxWeight = bMaxWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetMoveModeParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleMoveType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InStrafe                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRunDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InArrivalRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetMoveModeParam(EBattleMoveType InType, bool InStrafe, float InRunDistance, float InArrivalRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetMoveModeParam");

	Params::EndBattleAIController_SetMoveModeParam Parms{};

	Parms.InType = InType;
	Parms.InStrafe = InStrafe;
	Parms.InRunDistance = InRunDistance;
	Parms.InArrivalRadius = InArrivalRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetNextAbilityTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetNextAbilityTarget(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetNextAbilityTarget");

	Params::EndBattleAIController_SetNextAbilityTarget Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetNextWarpPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          warpPosition                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetNextWarpPosition(const struct FVector& warpPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetNextWarpPosition");

	Params::EndBattleAIController_SetNextWarpPosition Parms{};

	Parms.warpPosition = std::move(warpPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOtherMoveAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InStart                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEnd                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOtherMoveAnim(class FName InStart, class FName InLoop, class FName InEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOtherMoveAnim");

	Params::EndBattleAIController_SetOtherMoveAnim Parms{};

	Parms.InStart = InStart;
	Parms.InLoop = InLoop;
	Parms.InEnd = InEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideAbilityKeep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideAbilityKeep(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideAbilityKeep");

	Params::EndBattleAIController_SetOverrideAbilityKeep Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideAbilityRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPrepareMin                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPrepareMax                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideAbilityRange(float InPrepareMin, float InPrepareMax, float InMin, float InMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideAbilityRange");

	Params::EndBattleAIController_SetOverrideAbilityRange Parms{};

	Parms.InPrepareMin = InPrepareMin;
	Parms.InPrepareMax = InPrepareMax;
	Parms.InMin = InMin;
	Parms.InMax = InMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideActiveAimAngle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ActiveYawRange                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ActivePitchRange                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideActiveAimAngle(const struct FVector2D& ActiveYawRange, const struct FVector2D& ActivePitchRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideActiveAimAngle");

	Params::EndBattleAIController_SetOverrideActiveAimAngle Parms{};

	Parms.ActiveYawRange = std::move(ActiveYawRange);
	Parms.ActivePitchRange = std::move(ActivePitchRange);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideAerialAroundPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPoint                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideAerialAroundPoint(bool InOverride, const struct FVector& InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideAerialAroundPoint");

	Params::EndBattleAIController_SetOverrideAerialAroundPoint Parms{};

	Parms.InOverride = InOverride;
	Parms.InPoint = std::move(InPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndLocomotionAnim                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InInter                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAnimWalkType                        InAfterType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideAnim(EEndLocomotionAnim InType, const class FName InName, const class FName InInter, const EEndAnimWalkType InAfterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideAnim");

	Params::EndBattleAIController_SetOverrideAnim Parms{};

	Parms.InType = InType;
	Parms.InName = InName;
	Parms.InInter = InInter;
	Parms.InAfterType = InAfterType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideAroundPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPoint                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideAroundPoint(bool InOverride, const struct FVector& InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideAroundPoint");

	Params::EndBattleAIController_SetOverrideAroundPoint Parms{};

	Parms.InOverride = InOverride;
	Parms.InPoint = std::move(InPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideAroundPointReserveUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAroundPointType                        InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideAroundPointReserveUpdate(bool InOverride, EAroundPointType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideAroundPointReserveUpdate");

	Params::EndBattleAIController_SetOverrideAroundPointReserveUpdate Parms{};

	Parms.InOverride = InOverride;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideBattleCharaPartsSpec
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BaseID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OverrideId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bChangeHP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideBattleCharaPartsSpec(class FName BaseID, class FName OverrideId, bool bChangeHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideBattleCharaPartsSpec");

	Params::EndBattleAIController_SetOverrideBattleCharaPartsSpec Parms{};

	Parms.BaseID = BaseID;
	Parms.OverrideId = OverrideId;
	Parms.bChangeHP = bChangeHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideBattleCharaSpec
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BattleCharaSpecID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideBattleCharaSpec(class FName BattleCharaSpecID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideBattleCharaSpec");

	Params::EndBattleAIController_SetOverrideBattleCharaSpec Parms{};

	Parms.BattleCharaSpecID = BattleCharaSpecID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideConfrontCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideConfrontCharacter(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideConfrontCharacter");

	Params::EndBattleAIController_SetOverrideConfrontCharacter Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideKeep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InKeep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideKeep(int32 InKeep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideKeep");

	Params::EndBattleAIController_SetOverrideKeep Parms{};

	Parms.InKeep = InKeep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideKeepFromAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideKeepFromAbility(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideKeepFromAbility");

	Params::EndBattleAIController_SetOverrideKeepFromAbility Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideLocomotionAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideLocomotionAnim(class FName InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideLocomotionAnim");

	Params::EndBattleAIController_SetOverrideLocomotionAnim Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideParamTargetCorrectionNotify
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             motionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             abilityName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideDirectionAngle                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDirectionAngle                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideNotDistanceMoveStop                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAbilityTargetCloseMoveType    OverrideNotDistanceMoveStopType                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideParamTargetCorrectionNotify(class FName motionName, class FName abilityName, bool bOverrideDirectionAngle, float OverrideDirectionAngle, bool bOverrideDistance, float OverrideDistance, bool bOverrideNotDistanceMoveStop, EEndBattleAbilityTargetCloseMoveType OverrideNotDistanceMoveStopType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideParamTargetCorrectionNotify");

	Params::EndBattleAIController_SetOverrideParamTargetCorrectionNotify Parms{};

	Parms.motionName = motionName;
	Parms.abilityName = abilityName;
	Parms.bOverrideDirectionAngle = bOverrideDirectionAngle;
	Parms.OverrideDirectionAngle = OverrideDirectionAngle;
	Parms.bOverrideDistance = bOverrideDistance;
	Parms.OverrideDistance = OverrideDistance;
	Parms.bOverrideNotDistanceMoveStop = bOverrideNotDistanceMoveStop;
	Parms.OverrideNotDistanceMoveStopType = OverrideNotDistanceMoveStopType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetOverrideUpperAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InInterIn                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InInterOut                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetOverrideUpperAnim(const class FName InName, const class FName InInterIn, const class FName InInterOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetOverrideUpperAnim");

	Params::EndBattleAIController_SetOverrideUpperAnim Parms{};

	Parms.InName = InName;
	Parms.InInterIn = InInterIn;
	Parms.InInterOut = InInterOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetPauseUpdateDamageSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Pause                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetPauseUpdateDamageSource(bool Pause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetPauseUpdateDamageSource");

	Params::EndBattleAIController_SetPauseUpdateDamageSource Parms{};

	Parms.Pause = Pause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetPreAsyncTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUse                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetPreAsyncTick(bool bUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetPreAsyncTick");

	Params::EndBattleAIController_SetPreAsyncTick Parms{};

	Parms.bUse = bUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetPushCollisionEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             partId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetPushCollisionEnable(class FName partId, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetPushCollisionEnable");

	Params::EndBattleAIController_SetPushCollisionEnable Parms{};

	Parms.partId = partId;
	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndAiBattleRole                        InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetRole(EEndAiBattleRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetRole");

	Params::EndBattleAIController_SetRole Parms{};

	Parms.InRole = InRole;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetSecondRoleTerm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndAiBattleSecondRole                  InTerm                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetSecondRoleTerm(EEndAiBattleSecondRole InTerm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetSecondRoleTerm");

	Params::EndBattleAIController_SetSecondRoleTerm Parms{};

	Parms.InTerm = InTerm;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetSpecialStatusStateChangeID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StateChangeID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             paramID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetSpecialStatusStateChangeID(EEndBattleSpecialStatusChangeType Type, class FName StateChangeID, class FName paramID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetSpecialStatusStateChangeID");

	Params::EndBattleAIController_SetSpecialStatusStateChangeID Parms{};

	Parms.Type = Type;
	Parms.StateChangeID = StateChangeID;
	Parms.paramID = paramID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetSplinePointFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetSplinePointFloat(float InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetSplinePointFloat");

	Params::EndBattleAIController_SetSplinePointFloat Parms{};

	Parms.InPoint = InPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InClearSubStep                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetStep(int32 InStep, bool InClearSubStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetStep");

	Params::EndBattleAIController_SetStep Parms{};

	Parms.InStep = InStep;
	Parms.InClearSubStep = InClearSubStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetSubStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSubStep                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetSubStep(int32 InSubStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetSubStep");

	Params::EndBattleAIController_SetSubStep Parms{};

	Parms.InSubStep = InSubStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetTarget(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTarget");

	Params::EndBattleAIController_SetTarget Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetTargetAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetTargetAbility(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTargetAbility");

	Params::EndBattleAIController_SetTargetAbility Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetTargetByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleAISetTargetType                  InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetTargetByType(EBattleAISetTargetType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTargetByType");

	Params::EndBattleAIController_SetTargetByType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetTargetPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::SetTargetPlayer(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTargetPlayer");

	Params::EndBattleAIController_SetTargetPlayer Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetTargetTurn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InTurn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetTargetTurn(bool InTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTargetTurn");

	Params::EndBattleAIController_SetTargetTurn Parms{};

	Parms.InTurn = InTurn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetTriggerBoxCondition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETriggerBoxCondition                    Condition                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetTriggerBoxCondition(const ETriggerBoxCondition Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTriggerBoxCondition");

	Params::EndBattleAIController_SetTriggerBoxCondition Parms{};

	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetTurn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleMoveType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InTurn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetTurn(EBattleMoveType InType, bool InTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetTurn");

	Params::EndBattleAIController_SetTurn Parms{};

	Parms.InType = InType;
	Parms.InTurn = InTurn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetUncheckEnvStaticMeshContactWall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    uncheck                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetUncheckEnvStaticMeshContactWall(bool uncheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetUncheckEnvStaticMeshContactWall");

	Params::EndBattleAIController_SetUncheckEnvStaticMeshContactWall Parms{};

	Parms.uncheck = uncheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetupCeilJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   MinQt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxQt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KickDistQt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLimitAngle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::SetupCeilJump(float MinQt, float MaxQt, float KickDistQt, float InLimitAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetupCeilJump");

	Params::EndBattleAIController_SetupCeilJump Parms{};

	Parms.MinQt = MinQt;
	Parms.MaxQt = MaxQt;
	Parms.KickDistQt = KickDistQt;
	Parms.InLimitAngle = InLimitAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetupDroppingAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Acc                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rotate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotateUp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RotateDown                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetupDroppingAbility(float Speed, float Acc, float Rotate, float RotateUp, float RotateDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetupDroppingAbility");

	Params::EndBattleAIController_SetupDroppingAbility Parms{};

	Parms.Speed = Speed;
	Parms.Acc = Acc;
	Parms.Rotate = Rotate;
	Parms.RotateUp = RotateUp;
	Parms.RotateDown = RotateDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetupWallJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   MinQt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxQt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KickDistQt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCeil                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::SetupWallJump(float MinQt, float MaxQt, float KickDistQt, bool InCeil)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetupWallJump");

	Params::EndBattleAIController_SetupWallJump Parms{};

	Parms.MinQt = MinQt;
	Parms.MaxQt = MaxQt;
	Parms.KickDistQt = KickDistQt;
	Parms.InCeil = InCeil;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetupWallJumpDetailed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   MinQt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxQt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KickDistQt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCeil                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::SetupWallJumpDetailed(float MinQt, float MaxQt, float KickDistQt, bool InCeil)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetupWallJumpDetailed");

	Params::EndBattleAIController_SetupWallJumpDetailed Parms{};

	Parms.MinQt = MinQt;
	Parms.MaxQt = MaxQt;
	Parms.KickDistQt = KickDistQt;
	Parms.InCeil = InCeil;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetupWarpInformation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     warpPointNames                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetupWarpInformation(const TArray<class FName>& warpPointNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetupWarpInformation");

	Params::EndBattleAIController_SetupWarpInformation Parms{};

	Parms.warpPointNames = std::move(warpPointNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetupWaterJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   InRangeMin                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRangeMax                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIController::SetupWaterJump(float InRangeMin, float InRangeMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetupWaterJump");

	Params::EndBattleAIController_SetupWaterJump Parms{};

	Parms.InRangeMin = InRangeMin;
	Parms.InRangeMax = InRangeMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetVisibilityWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponSlot                             weaponSlotType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetVisibilityWeapon(bool bVisible, EWeaponSlot weaponSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetVisibilityWeapon");

	Params::EndBattleAIController_SetVisibilityWeapon Parms{};

	Parms.bVisible = bVisible;
	Parms.weaponSlotType = weaponSlotType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetWeakConditionDamageOnlyMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    enableDamageOnlyMode                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    enableDamageOverEvent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SetWeakConditionDamageOnlyMode(bool enableDamageOnlyMode, bool enableDamageOverEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWeakConditionDamageOnlyMode");

	Params::EndBattleAIController_SetWeakConditionDamageOnlyMode Parms{};

	Parms.enableDamageOnlyMode = enableDamageOnlyMode;
	Parms.enableDamageOverEvent = enableDamageOverEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SetWorkBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::SetWorkBool(class FName Name_0, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWorkBool");

	Params::EndBattleAIController_SetWorkBool Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetWorkFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::SetWorkFloat(class FName Name_0, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWorkFloat");

	Params::EndBattleAIController_SetWorkFloat Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetWorkInt32
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::SetWorkInt32(class FName Name_0, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWorkInt32");

	Params::EndBattleAIController_SetWorkInt32 Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetWorkName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIController::SetWorkName(class FName Name_0, class FName Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWorkName");

	Params::EndBattleAIController_SetWorkName Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetWorkRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Value                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AEndBattleAIController::SetWorkRotator(class FName Name_0, const struct FRotator& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWorkRotator");

	Params::EndBattleAIController_SetWorkRotator Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.SetWorkVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Value                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIController::SetWorkVector(class FName Name_0, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SetWorkVector");

	Params::EndBattleAIController_SetWorkVector Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.StartBurst
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Force                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::StartBurst(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "StartBurst");

	Params::EndBattleAIController_StartBurst Parms{};

	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.StartDisableLatestContactWall
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::StartDisableLatestContactWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "StartDisableLatestContactWall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.StopAddMotion
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::StopAddMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "StopAddMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.StopPartLoopMotion
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::StopPartLoopMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "StopPartLoopMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SuspendAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Ability                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Motion                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::SuspendAction(bool Ability, bool Motion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SuspendAction");

	Params::EndBattleAIController_SuspendAction Parms{};

	Parms.Ability = Ability;
	Parms.Motion = Motion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SuspendAll
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SuspendAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SuspendAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SuspendDamage
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SuspendDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SuspendDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SwitchAroundMove
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SwitchAroundMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SwitchAroundMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.SwitchingTriggerBoxCondition
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::SwitchingTriggerBoxCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "SwitchingTriggerBoxCondition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ToAerial
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ToAerial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToAerial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ToBreak
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             charaPartsSpecName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableBreakMessage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ToBreak(class FName charaPartsSpecName, bool bEnableBreakMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToBreak");

	Params::EndBattleAIController_ToBreak Parms{};

	Parms.charaPartsSpecName = charaPartsSpecName;
	Parms.bEnableBreakMessage = bEnableBreakMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ToChangeParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             meshName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             meshLabel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ToChangeParts(class FName meshName, class FName meshLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToChangeParts");

	Params::EndBattleAIController_ToChangeParts Parms{};

	Parms.meshName = meshName;
	Parms.meshLabel = meshLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ToDestructionParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::ToDestructionParts(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToDestructionParts");

	Params::EndBattleAIController_ToDestructionParts Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ToKillEasySpawnCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    forceDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ToKillEasySpawnCharacter(class FName keyword, bool forceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToKillEasySpawnCharacter");

	Params::EndBattleAIController_ToKillEasySpawnCharacter Parms{};

	Parms.keyword = keyword;
	Parms.forceDestroy = forceDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ToLanding
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::ToLanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToLanding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ToMoveToSocketEasySpawnCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ToMoveToSocketEasySpawnCharacter(class FName keyword, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToMoveToSocketEasySpawnCharacter");

	Params::EndBattleAIController_ToMoveToSocketEasySpawnCharacter Parms{};

	Parms.keyword = keyword;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ToRepair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             charaPartsSpecName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             meshLabelName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPartsRepairConditionType            Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::ToRepair(class FName charaPartsSpecName, class FName meshLabelName, EEndPartsRepairConditionType Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToRepair");

	Params::EndBattleAIController_ToRepair Parms{};

	Parms.charaPartsSpecName = charaPartsSpecName;
	Parms.meshLabelName = meshLabelName;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ToRepairWithHPPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             charaPartsSpecName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             meshLabelName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HPPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::ToRepairWithHPPercent(class FName charaPartsSpecName, class FName meshLabelName, float HPPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToRepairWithHPPercent");

	Params::EndBattleAIController_ToRepairWithHPPercent Parms{};

	Parms.charaPartsSpecName = charaPartsSpecName;
	Parms.meshLabelName = meshLabelName;
	Parms.HPPercent = HPPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.ToRestoreParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIController::ToRestoreParts(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToRestoreParts");

	Params::EndBattleAIController_ToRestoreParts Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.ToSpawnEasySpawnCharacter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::ToSpawnEasySpawnCharacter(class FName keyword, const struct FVector& hidePosition, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "ToSpawnEasySpawnCharacter");

	Params::EndBattleAIController_ToSpawnEasySpawnCharacter Parms{};

	Parms.keyword = keyword;
	Parms.hidePosition = std::move(hidePosition);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.TransformCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BattleCharaSpecID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIController::TransformCharacter(class FName BattleCharaSpecID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "TransformCharacter");

	Params::EndBattleAIController_TransformCharacter Parms{};

	Parms.BattleCharaSpecID = BattleCharaSpecID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.TryPossibleEasySpawnCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::TryPossibleEasySpawnCharacter(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "TryPossibleEasySpawnCharacter");

	Params::EndBattleAIController_TryPossibleEasySpawnCharacter Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.UnregisterOverlapTriggerBox
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIController::UnregisterOverlapTriggerBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "UnregisterOverlapTriggerBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIController.GetEasySpawnCharacter
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             keyword                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* AEndBattleAIController::GetEasySpawnCharacter(const class FName& keyword) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetEasySpawnCharacter");

	Params::EndBattleAIController_GetEasySpawnCharacter Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetFirstDamageTime
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   FirstDamageTime                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence*                    AnimSequecne                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::GetFirstDamageTime(float* FirstDamageTime, const class UAnimSequence* AnimSequecne, float StartTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetFirstDamageTime");

	Params::EndBattleAIController_GetFirstDamageTime Parms{};

	Parms.AnimSequecne = AnimSequecne;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FirstDamageTime != nullptr)
		*FirstDamageTime = Parms.FirstDamageTime;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSpecialStatusParamFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEndBattleSpecialStatusChangeType       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             paramID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIController::GetSpecialStatusParamFloat(EEndBattleSpecialStatusChangeType Type, class FName paramID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSpecialStatusParamFloat");

	Params::EndBattleAIController_GetSpecialStatusParamFloat Parms{};

	Parms.Type = Type;
	Parms.paramID = paramID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.GetSpecialStatusType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EEndBattleSpecialStatusChangeType>typeList                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AEndBattleAIController::GetSpecialStatusType(TArray<EEndBattleSpecialStatusChangeType>* typeList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "GetSpecialStatusType");

	Params::EndBattleAIController_GetSpecialStatusType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (typeList != nullptr)
		*typeList = std::move(Parms.typeList);
}


// Function EndGame.EndBattleAIController.IsInDummyBattle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsInDummyBattle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsInDummyBattle");

	Params::EndBattleAIController_IsInDummyBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsInSyncAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsInSyncAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsInSyncAction");

	Params::EndBattleAIController_IsInSyncAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIController.IsLockTargetCharaBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIController::IsLockTargetCharaBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIController", "IsLockTargetCharaBase");

	Params::EndBattleAIController_IsLockTargetCharaBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0021Controller.DisableCounter
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0021Controller::DisableCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0021Controller", "DisableCounter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0021Controller.OnCounterCheck
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InTakeAbilityID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTakeMotionID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPlanAction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0021Controller::OnCounterCheck(class FName InTakeAbilityID, class FName InTakeMotionID, class FName InPlanAction, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0021Controller", "OnCounterCheck");

	Params::EndBattleAIEB0021Controller_OnCounterCheck Parms{};

	Parms.InTakeAbilityID = InTakeAbilityID;
	Parms.InTakeMotionID = InTakeMotionID;
	Parms.InPlanAction = InPlanAction;
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0021Controller.OnHitTerrainEvent
// (Event, Public, BlueprintEvent)

void AEndBattleAIEB0021Controller::OnHitTerrainEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0021Controller", "OnHitTerrainEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0021Controller.RequestBlownAway
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    causerCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutTargetName                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutTargetLocation                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0021Controller::RequestBlownAway(class AEndCharacter* causerCharacter, class FName* OutTargetName, struct FVector* OutTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0021Controller", "RequestBlownAway");

	Params::EndBattleAIEB0021Controller_RequestBlownAway Parms{};

	Parms.causerCharacter = causerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTargetName != nullptr)
		*OutTargetName = Parms.OutTargetName;

	if (OutTargetLocation != nullptr)
		*OutTargetLocation = std::move(Parms.OutTargetLocation);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0021Controller.SetHitTerrainAbilityName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             abilitiName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0021Controller::SetHitTerrainAbilityName(class FName abilitiName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0021Controller", "SetHitTerrainAbilityName");

	Params::EndBattleAIEB0021Controller_SetHitTerrainAbilityName Parms{};

	Parms.abilitiName = abilitiName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0021Controller.SetHitTerrainDamageSourceName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             damageSourceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0021Controller::SetHitTerrainDamageSourceName(class FName damageSourceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0021Controller", "SetHitTerrainDamageSourceName");

	Params::EndBattleAIEB0021Controller_SetHitTerrainDamageSourceName Parms{};

	Parms.damageSourceName = damageSourceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSystemMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSystemMenu::OnLeftMenuPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSystemMenu", "OnLeftMenuPressedItem");

	Params::EndMainSystemMenu_OnLeftMenuPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSystemMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSystemMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSystemMenu", "OnLeftMenuSetupItem");

	Params::EndMainSystemMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.FindNearestSplineNodeActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   InFanAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanRadiusMin                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanRadiusMax                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NextPointDistance                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InGroupName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndBattleAISpline*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndBattleAISpline* AEndBattleAIFitSplineController::FindNearestSplineNodeActor(float InFanAngle, float InFanRadiusMin, float InFanRadiusMax, class FName InSocketName, float* NextPointDistance, class FName InGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "FindNearestSplineNodeActor");

	Params::EndBattleAIFitSplineController_FindNearestSplineNodeActor Parms{};

	Parms.InFanAngle = InFanAngle;
	Parms.InFanRadiusMin = InFanRadiusMin;
	Parms.InFanRadiusMax = InFanRadiusMax;
	Parms.InSocketName = InSocketName;
	Parms.InGroupName = InGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NextPointDistance != nullptr)
		*NextPointDistance = Parms.NextPointDistance;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.FindNearestSplineNodeLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             OutSplineNodeName                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutPointLocation                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutNextPointDistance                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanRadiusMin                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanRadiusMax                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InGroupName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIFitSplineController::FindNearestSplineNodeLocation(class FName* OutSplineNodeName, struct FVector* OutPointLocation, float* OutNextPointDistance, float InFanAngle, float InFanRadiusMin, float InFanRadiusMax, class FName InSocketName, class FName InGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "FindNearestSplineNodeLocation");

	Params::EndBattleAIFitSplineController_FindNearestSplineNodeLocation Parms{};

	Parms.InFanAngle = InFanAngle;
	Parms.InFanRadiusMin = InFanRadiusMin;
	Parms.InFanRadiusMax = InFanRadiusMax;
	Parms.InSocketName = InSocketName;
	Parms.InGroupName = InGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSplineNodeName != nullptr)
		*OutSplineNodeName = Parms.OutSplineNodeName;

	if (OutPointLocation != nullptr)
		*OutPointLocation = std::move(Parms.OutPointLocation);

	if (OutNextPointDistance != nullptr)
		*OutNextPointDistance = Parms.OutNextPointDistance;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.FindNearestSplineNodeName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   InFanAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanRadiusMin                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFanRadiusMax                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NextPointDistance                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InGroupName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIFitSplineController::FindNearestSplineNodeName(float InFanAngle, float InFanRadiusMin, float InFanRadiusMax, class FName InSocketName, float* NextPointDistance, class FName InGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "FindNearestSplineNodeName");

	Params::EndBattleAIFitSplineController_FindNearestSplineNodeName Parms{};

	Parms.InFanAngle = InFanAngle;
	Parms.InFanRadiusMin = InFanRadiusMin;
	Parms.InFanRadiusMax = InFanRadiusMax;
	Parms.InSocketName = InSocketName;
	Parms.InGroupName = InGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NextPointDistance != nullptr)
		*NextPointDistance = Parms.NextPointDistance;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.GetConnectGoal
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIFitSplineController::GetConnectGoal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "GetConnectGoal");

	Params::EndBattleAIFitSplineController_GetConnectGoal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.GetCurrentSprine
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIFitSplineController::GetCurrentSprine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "GetCurrentSprine");

	Params::EndBattleAIFitSplineController_GetCurrentSprine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.GetCurrentVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIFitSplineController::GetCurrentVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "GetCurrentVelocity");

	Params::EndBattleAIFitSplineController_GetCurrentVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.GetPrevSprine
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AEndBattleAIFitSplineController::GetPrevSprine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "GetPrevSprine");

	Params::EndBattleAIFitSplineController_GetPrevSprine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.GetSplineLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIFitSplineController::GetSplineLocation(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "GetSplineLocation");

	Params::EndBattleAIFitSplineController_GetSplineLocation Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.GetSplineVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIFitSplineController::GetSplineVector(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "GetSplineVector");

	Params::EndBattleAIFitSplineController_GetSplineVector Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIFitSplineController.OnBeginSplineMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::OnBeginSplineMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "OnBeginSplineMove");

	Params::EndBattleAIFitSplineController_OnBeginSplineMove Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIFitSplineController.OnCompleteSplineMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::OnCompleteSplineMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "OnCompleteSplineMove");

	Params::EndBattleAIFitSplineController_OnCompleteSplineMove Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIFitSplineController.OnSuspendSplineMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::OnSuspendSplineMove(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "OnSuspendSplineMove");

	Params::EndBattleAIFitSplineController_OnSuspendSplineMove Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIFitSplineController.OnUpdateSplineMove
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::OnUpdateSplineMove(class FName InName, float InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "OnUpdateSplineMove");

	Params::EndBattleAIFitSplineController_OnUpdateSplineMove Parms{};

	Parms.InName = InName;
	Parms.InProgress = InProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIFitSplineController.RequestChangeMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::RequestChangeMotion(class FName InMotionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "RequestChangeMotion");

	Params::EndBattleAIFitSplineController_RequestChangeMotion Parms{};

	Parms.InMotionName = InMotionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.RequestConnectSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::RequestConnectSpline(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "RequestConnectSpline");

	Params::EndBattleAIFitSplineController_RequestConnectSpline Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.RequestOneShotMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::RequestOneShotMotion(class FName InMotionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "RequestOneShotMotion");

	Params::EndBattleAIFitSplineController_RequestOneShotMotion Parms{};

	Parms.InMotionName = InMotionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.RequestSplineMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InNextPointDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::RequestSplineMove(class FName InName, class FName InMotionName, float InNextPointDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "RequestSplineMove");

	Params::EndBattleAIFitSplineController_RequestSplineMove Parms{};

	Parms.InName = InName;
	Parms.InMotionName = InMotionName;
	Parms.InNextPointDistance = InNextPointDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.ReserveNextSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::ReserveNextSpline(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "ReserveNextSpline");

	Params::EndBattleAIFitSplineController_ReserveNextSpline Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.SetFitSplineAcceleration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAcceleration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDeceleration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::SetFitSplineAcceleration(float InAcceleration, float InDeceleration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "SetFitSplineAcceleration");

	Params::EndBattleAIFitSplineController_SetFitSplineAcceleration Parms{};

	Parms.InAcceleration = InAcceleration;
	Parms.InDeceleration = InDeceleration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.SetFitSplineRoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InThreashold                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::SetFitSplineRoll(float InThreashold, float InRate, float InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "SetFitSplineRoll");

	Params::EndBattleAIFitSplineController_SetFitSplineRoll Parms{};

	Parms.InThreashold = InThreashold;
	Parms.InRate = InRate;
	Parms.InSpeed = InSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.SetFitSplineVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIFitSplineController::SetFitSplineVelocity(float InMax, float InMin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "SetFitSplineVelocity");

	Params::EndBattleAIFitSplineController_SetFitSplineVelocity Parms{};

	Parms.InMax = InMax;
	Parms.InMin = InMin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIFitSplineController.SuspendSpline
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIFitSplineController::SuspendSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIFitSplineController", "SuspendSpline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0017Controller.CheckLinkMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDarknationLinkMode                     linkMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0017Controller::CheckLinkMode(EDarknationLinkMode linkMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0017Controller", "CheckLinkMode");

	Params::EndBattleAIEB0017Controller_CheckLinkMode Parms{};

	Parms.linkMode = linkMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0017Controller.SetLinkMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDarknationLinkMode                     linkMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0017Controller::SetLinkMode(EDarknationLinkMode linkMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0017Controller", "SetLinkMode");

	Params::EndBattleAIEB0017Controller_SetLinkMode Parms{};

	Parms.linkMode = linkMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.AddFadeFilter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     FromColor                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ToColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPauseable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::AddFadeFilter(class UObject* WorldContextObject, class FName Name_0, int32 ZOrder, const struct FLinearColor& FromColor, const struct FLinearColor& ToColor, float FadeTime, bool bAutoDestroy, bool bPauseable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "AddFadeFilter");

	Params::EndMenuAPI_AddFadeFilter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Name_0 = Name_0;
	Parms.ZOrder = ZOrder;
	Parms.FromColor = std::move(FromColor);
	Parms.ToColor = std::move(ToColor);
	Parms.FadeTime = FadeTime;
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.bPauseable = bPauseable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.AddMessageLog_AnyThread
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndMenuIconKind                        Icon                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuLogEffectKind                   Effect                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::AddMessageLog_AnyThread(EEndMenuIconKind Icon, const class FString& Message, EEndMenuLogEffectKind Effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "AddMessageLog_AnyThread");

	Params::EndMenuAPI_AddMessageLog_AnyThread Parms{};

	Parms.Icon = Icon;
	Parms.Message = std::move(Message);
	Parms.Effect = Effect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.AddTalkLogByTextId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaitSeconds                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::AddTalkLogByTextId(const class FString& TextID, float WaitSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "AddTalkLogByTextId");

	Params::EndMenuAPI_AddTalkLogByTextId Parms{};

	Parms.TextID = std::move(TextID);
	Parms.WaitSeconds = WaitSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.AreaNameExists
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::AreaNameExists(const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "AreaNameExists");

	Params::EndMenuAPI_AreaNameExists Parms{};

	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.BPHideBattleEscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    aInBattle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPHideBattleEscape(bool aInBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideBattleEscape");

	Params::EndMenuAPI_BPHideBattleEscape Parms{};

	Parms.aInBattle = aInBattle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideBattleTutorialWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             aKey                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPHideBattleTutorialWindow(class FName aKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideBattleTutorialWindow");

	Params::EndMenuAPI_BPHideBattleTutorialWindow Parms{};

	Parms.aKey = aKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideBossStatus
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideBossStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideBossStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideCaution
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    aInBattle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPHideCaution(bool aInBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideCaution");

	Params::EndMenuAPI_BPHideCaution Parms{};

	Parms.aInBattle = aInBattle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideCharacterJoin
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideCharacterJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideCharacterJoin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideCharacterReJoin
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideCharacterReJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideCharacterReJoin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideCountdown
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    aHideFailed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPHideCountdown(bool aHideFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideCountdown");

	Params::EndMenuAPI_BPHideCountdown Parms{};

	Parms.aHideFailed = aHideFailed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideDataAccessIcon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideDataAccessIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideDataAccessIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideEventProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    aAnimation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPHideEventProgress(bool aAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideEventProgress");

	Params::EndMenuAPI_BPHideEventProgress Parms{};

	Parms.aAnimation = aAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideFieldInputGuidelineWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideFieldInputGuidelineWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideFieldInputGuidelineWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideFieldStaminaIcon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideFieldStaminaIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideFieldStaminaIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideGameOver
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideGameOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideNavimap
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideNavimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideNavimap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideTalkSelect
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideTalkSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideTalkSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideUIFilterWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndMenuUIFilterType                    aFilterType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPHideUIFilterWindow(EEndMenuUIFilterType aFilterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideUIFilterWindow");

	Params::EndMenuAPI_BPHideUIFilterWindow Parms{};

	Parms.aFilterType = aFilterType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPHideVisionIcon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::BPHideVisionIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPHideVisionIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPSetBossDamageLidHP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   aHP                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPSetBossDamageLidHP(float aHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPSetBossDamageLidHP");

	Params::EndMenuAPI_BPSetBossDamageLidHP Parms{};

	Parms.aHP = aHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPSetBossHPGauge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   aHP                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPSetBossHPGauge(float aHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPSetBossHPGauge");

	Params::EndMenuAPI_BPSetBossHPGauge Parms{};

	Parms.aHP = aHP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPSetCautionQuantity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   aQT                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPSetCautionQuantity(float aQT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPSetCautionQuantity");

	Params::EndMenuAPI_BPSetCautionQuantity Parms{};

	Parms.aQT = aQT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPSetCountdownTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   SetTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPSetCountdownTime(float SetTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPSetCountdownTime");

	Params::EndMenuAPI_BPSetCountdownTime Parms{};

	Parms.SetTime = SetTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPSetFieldStaminaGauge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   aGaugeQt                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPSetFieldStaminaGauge(float aGaugeQt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPSetFieldStaminaGauge");

	Params::EndMenuAPI_BPSetFieldStaminaGauge Parms{};

	Parms.aGaugeQt = aGaugeQt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPSetFieldStaminaSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   aSpeedQt                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPSetFieldStaminaSpeed(float aSpeedQt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPSetFieldStaminaSpeed");

	Params::EndMenuAPI_BPSetFieldStaminaSpeed Parms{};

	Parms.aSpeedQt = aSpeedQt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowBattleEscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowBattleEscape(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowBattleEscape");

	Params::EndMenuAPI_BPShowBattleEscape Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowBattleLockonMarkerIcon
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuLockonMarkerType                aType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::BPShowBattleLockonMarkerIcon(class UObject* WorldContextObject, const struct FVector& WorldPosition, EEndMenuLockonMarkerType aType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowBattleLockonMarkerIcon");

	Params::EndMenuAPI_BPShowBattleLockonMarkerIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.aType = aType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.BPShowBattleTutorialWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             aKey                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowBattleTutorialWindow(class UObject* WorldContextObject, class FName aKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowBattleTutorialWindow");

	Params::EndMenuAPI_BPShowBattleTutorialWindow Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.aKey = aKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowBossStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowBossStatus(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowBossStatus");

	Params::EndMenuAPI_BPShowBossStatus Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowCaution
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowCaution(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowCaution");

	Params::EndMenuAPI_BPShowCaution Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowCharacterJoin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsIn                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowCharacterJoin(class UObject* WorldContextObject, EPlayerType PlayerType, bool bIsIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowCharacterJoin");

	Params::EndMenuAPI_BPShowCharacterJoin Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerType = PlayerType;
	Parms.bIsIn = bIsIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowCharacterReJoin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLeftOut                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowCharacterReJoin(class UObject* WorldContextObject, bool bIsLeftOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowCharacterReJoin");

	Params::EndMenuAPI_BPShowCharacterReJoin Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsLeftOut = bIsLeftOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowCountdown
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SetTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowCountdown(class UObject* WorldContextObject, float SetTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowCountdown");

	Params::EndMenuAPI_BPShowCountdown Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SetTime = SetTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowDataAccessIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowDataAccessIcon(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowDataAccessIcon");

	Params::EndMenuAPI_BPShowDataAccessIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowEventProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           aShowText                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowEventProgress(class UObject* WorldContextObject, const class FString& aShowText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowEventProgress");

	Params::EndMenuAPI_BPShowEventProgress Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.aShowText = std::move(aShowText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowFieldAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           aActionTextId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowFieldAction(const class FString& aActionTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowFieldAction");

	Params::EndMenuAPI_BPShowFieldAction Parms{};

	Parms.aActionTextId = std::move(aActionTextId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowFieldInputGuidelineWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuInputGuidelineType              aType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowFieldInputGuidelineWindow(class UObject* WorldContextObject, EEndMenuInputGuidelineType aType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowFieldInputGuidelineWindow");

	Params::EndMenuAPI_BPShowFieldInputGuidelineWindow Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.aType = aType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowFieldStaminaIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowFieldStaminaIcon(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowFieldStaminaIcon");

	Params::EndMenuAPI_BPShowFieldStaminaIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowGameOver
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowGameOver(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowGameOver");

	Params::EndMenuAPI_BPShowGameOver Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowNavimap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowNavimap(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowNavimap");

	Params::EndMenuAPI_BPShowNavimap Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowTalkSelect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuTalkSelectWindowType            aWindowType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowTalkSelect(class UObject* WorldContextObject, EEndMenuTalkSelectWindowType aWindowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowTalkSelect");

	Params::EndMenuAPI_BPShowTalkSelect Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.aWindowType = aWindowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowUIFilterWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuUIFilterType                    aFilterType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowUIFilterWindow(class UObject* WorldContextObject, EEndMenuUIFilterType aFilterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowUIFilterWindow");

	Params::EndMenuAPI_BPShowUIFilterWindow Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.aFilterType = aFilterType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.BPShowVisionIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::BPShowVisionIcon(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "BPShowVisionIcon");

	Params::EndMenuAPI_BPShowVisionIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ChangeBattleTargetIconState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuBattleTargetState               State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ChangeBattleTargetIconState(class UUserWidget* Icon, EEndMenuBattleTargetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ChangeBattleTargetIconState");

	Params::EndMenuAPI_ChangeBattleTargetIconState Parms{};

	Parms.Icon = Icon;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ChangeFadeFilter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ToColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPauseable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ChangeFadeFilter(class FName Name_0, const struct FLinearColor& ToColor, float FadeTime, bool bAutoDestroy, bool bPauseable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ChangeFadeFilter");

	Params::EndMenuAPI_ChangeFadeFilter Parms{};

	Parms.Name_0 = Name_0;
	Parms.ToColor = std::move(ToColor);
	Parms.FadeTime = FadeTime;
	Parms.bAutoDestroy = bAutoDestroy;
	Parms.bPauseable = bPauseable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ChangeFieldTargetIconButton
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuFieldTargetIconType             aButtonType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ChangeFieldTargetIconButton(class UUserWidget* Icon, EEndMenuFieldTargetIconType aButtonType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ChangeFieldTargetIconButton");

	Params::EndMenuAPI_ChangeFieldTargetIconButton Parms{};

	Parms.Icon = Icon;
	Parms.aButtonType = aButtonType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ChangeFieldTargetIconState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuFieldTargetState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ChangeFieldTargetIconState(class UUserWidget* Icon, EEndMenuFieldTargetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ChangeFieldTargetIconState");

	Params::EndMenuAPI_ChangeFieldTargetIconState Parms{};

	Parms.Icon = Icon;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ChapterNameExists
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::ChapterNameExists(const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ChapterNameExists");

	Params::EndMenuAPI_ChapterNameExists Parms{};

	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.ClearFadeFilters
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::ClearFadeFilters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ClearFadeFilters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ClearLocationTitles
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::ClearLocationTitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ClearLocationTitles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ClearMessageWindows
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::ClearMessageWindows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ClearMessageWindows");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ClearTalkLogs
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::ClearTalkLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ClearTalkLogs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.CreateWidgetFromPack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResourceName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::CreateWidgetFromPack(class UObject* WorldContextObject, class FName LevelName, class FName ResourceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "CreateWidgetFromPack");

	Params::EndMenuAPI_CreateWidgetFromPack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = LevelName;
	Parms.ResourceName = ResourceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetBattleTargetIconState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuBattleTargetState               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndMenuBattleTargetState UEndMenuAPI::GetBattleTargetIconState(class UUserWidget* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetBattleTargetIconState");

	Params::EndMenuAPI_GetBattleTargetIconState Parms{};

	Parms.Icon = Icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetFadeFilterCurrentColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UEndMenuAPI::GetFadeFilterCurrentColor(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetFadeFilterCurrentColor");

	Params::EndMenuAPI_GetFadeFilterCurrentColor Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetFadeFilterNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     outNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndMenuAPI::GetFadeFilterNames(TArray<class FName>* outNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetFadeFilterNames");

	Params::EndMenuAPI_GetFadeFilterNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNames != nullptr)
		*outNames = std::move(Parms.outNames);
}


// Function EndGame.EndMenuAPI.GetFadeFilterVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::GetFadeFilterVisibility(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetFadeFilterVisibility");

	Params::EndMenuAPI_GetFadeFilterVisibility Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetFieldTargetIconState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuFieldTargetState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndMenuFieldTargetState UEndMenuAPI::GetFieldTargetIconState(class UUserWidget* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetFieldTargetIconState");

	Params::EndMenuAPI_GetFieldTargetIconState Parms{};

	Parms.Icon = Icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetItemMessageLogIconKind
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuIconKind                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndMenuIconKind UEndMenuAPI::GetItemMessageLogIconKind(class FName ItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetItemMessageLogIconKind");

	Params::EndMenuAPI_GetItemMessageLogIconKind Parms{};

	Parms.ItemID = ItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetMessageWindowSelectedIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuAPI::GetMessageWindowSelectedIndex(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetMessageWindowSelectedIndex");

	Params::EndMenuAPI_GetMessageWindowSelectedIndex Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndMenuAPI::GetString(const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetString");

	Params::EndMenuAPI_GetString Parms{};

	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetWidgetAnimationByName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* UEndMenuAPI::GetWidgetAnimationByName(class UWidget* InWidget, class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetWidgetAnimationByName");

	Params::EndMenuAPI_GetWidgetAnimationByName Parms{};

	Parms.InWidget = InWidget;
	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.GetWidgetAnimations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     outNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndMenuAPI::GetWidgetAnimations(class UWidget* InWidget, TArray<class FName>* outNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "GetWidgetAnimations");

	Params::EndMenuAPI_GetWidgetAnimations Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNames != nullptr)
		*outNames = std::move(Parms.outNames);
}


// Function EndGame.EndMenuAPI.HasFadeFilters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::HasFadeFilters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HasFadeFilters");

	Params::EndMenuAPI_HasFadeFilters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.HasFadeFiltersDuringAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::HasFadeFiltersDuringAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HasFadeFiltersDuringAnimation");

	Params::EndMenuAPI_HasFadeFiltersDuringAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.HideBattleEnemyOutsideWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideBattleEnemyOutsideWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideBattleEnemyOutsideWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideBattleEnemyStatusWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideBattleEnemyStatusWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideBattleEnemyStatusWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideBattlePlayerStatusWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideBattlePlayerStatusWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideBattlePlayerStatusWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideBattleTargetIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::HideBattleTargetIcon(class UUserWidget* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideBattleTargetIcon");

	Params::EndMenuAPI_HideBattleTargetIcon Parms{};

	Parms.Icon = Icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideFieldAction
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideFieldAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideFieldAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideFieldMenu
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideFieldMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideFieldMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideFieldPane
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndMenuFieldPaneType                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::HideFieldPane(EEndMenuFieldPaneType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideFieldPane");

	Params::EndMenuAPI_HideFieldPane Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideFieldTargetIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::HideFieldTargetIcon(class UUserWidget* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideFieldTargetIcon");

	Params::EndMenuAPI_HideFieldTargetIcon Parms{};

	Parms.Icon = Icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideLoadingIcon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideLoadingIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideLoadingIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideMessageLogs
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideMessageLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideMessageLogs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideMessageWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::HideMessageWindow(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideMessageWindow");

	Params::EndMenuAPI_HideMessageWindow Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideMovie
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HidePauseMenu
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HidePauseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HidePauseMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideSkippingIcon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideSkippingIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideSkippingIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideSubtitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::HideSubtitle(const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideSubtitle");

	Params::EndMenuAPI_HideSubtitle Parms{};

	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.HideTalkLogs
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::HideTalkLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "HideTalkLogs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.IsFadeFilter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsFadeFilter(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsFadeFilter");

	Params::EndMenuAPI_IsFadeFilter Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsFadeFilterDuringAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsFadeFilterDuringAnimation(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsFadeFilterDuringAnimation");

	Params::EndMenuAPI_IsFadeFilterDuringAnimation Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsFieldMenuShortcutActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsFieldMenuShortcutActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsFieldMenuShortcutActive");

	Params::EndMenuAPI_IsFieldMenuShortcutActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsFieldMenuStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndMenuFieldMenuStatus                 Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsFieldMenuStatus(EEndMenuFieldMenuStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsFieldMenuStatus");

	Params::EndMenuAPI_IsFieldMenuStatus Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsJoinLeftUpdate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsJoinLeftUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsJoinLeftUpdate");

	Params::EndMenuAPI_IsJoinLeftUpdate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsMessageWindowClosed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsMessageWindowClosed(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsMessageWindowClosed");

	Params::EndMenuAPI_IsMessageWindowClosed Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsPauseMenuClosed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsPauseMenuClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsPauseMenuClosed");

	Params::EndMenuAPI_IsPauseMenuClosed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.IsSubtitleClosed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsSubtitleClosed(const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "IsSubtitleClosed");

	Params::EndMenuAPI_IsSubtitleClosed Parms{};

	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.Key_IsVirtualAccept
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::Key_IsVirtualAccept(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "Key_IsVirtualAccept");

	Params::EndMenuAPI_Key_IsVirtualAccept Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.Key_IsVirtualBack
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::Key_IsVirtualBack(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "Key_IsVirtualBack");

	Params::EndMenuAPI_Key_IsVirtualBack Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.LocationNameExists
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::LocationNameExists(const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "LocationNameExists");

	Params::EndMenuAPI_LocationNameExists Parms{};

	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.MakeSoftClassPtr
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftClassPtr<class UClass> UEndMenuAPI::MakeSoftClassPtr(const class FString& inString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "MakeSoftClassPtr");

	Params::EndMenuAPI_MakeSoftClassPtr Parms{};

	Parms.inString = std::move(inString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.Need4KFont
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::Need4KFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "Need4KFont");

	Params::EndMenuAPI_Need4KFont Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.RefreshStatusWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::RefreshStatusWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "RefreshStatusWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.RemoveFadeFilter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::RemoveFadeFilter(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "RemoveFadeFilter");

	Params::EndMenuAPI_RemoveFadeFilter Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetBattleEnemyStatusWindowPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetBattleEnemyStatusWindowPosition(class UUserWidget* Icon, const struct FVector& WorldPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetBattleEnemyStatusWindowPosition");

	Params::EndMenuAPI_SetBattleEnemyStatusWindowPosition Parms{};

	Parms.Icon = Icon;
	Parms.WorldPosition = std::move(WorldPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetBattleTargetIconActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetBattleTargetIconActor(class UUserWidget* Icon, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetBattleTargetIconActor");

	Params::EndMenuAPI_SetBattleTargetIconActor Parms{};

	Parms.Icon = Icon;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetBattleTargetIconPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::SetBattleTargetIconPosition(class UUserWidget* Icon, const struct FVector& WorldPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetBattleTargetIconPosition");

	Params::EndMenuAPI_SetBattleTargetIconPosition Parms{};

	Parms.Icon = Icon;
	Parms.WorldPosition = std::move(WorldPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.SetFadeFilterVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetFadeFilterVisibility(class FName Name_0, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetFadeFilterVisibility");

	Params::EndMenuAPI_SetFadeFilterVisibility Parms{};

	Parms.Name_0 = Name_0;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetFieldMenuInBattle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInInBattle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetFieldMenuInBattle(bool bInInBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetFieldMenuInBattle");

	Params::EndMenuAPI_SetFieldMenuInBattle Parms{};

	Parms.bInInBattle = bInInBattle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetFieldTargetIconHoldGauge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   aGauge                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetFieldTargetIconHoldGauge(class UUserWidget* Icon, float aGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetFieldTargetIconHoldGauge");

	Params::EndMenuAPI_SetFieldTargetIconHoldGauge Parms{};

	Parms.Icon = Icon;
	Parms.aGauge = aGauge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetFieldTargetIconPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Icon                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetFieldTargetIconPosition(class UUserWidget* Icon, const struct FVector& WorldPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetFieldTargetIconPosition");

	Params::EndMenuAPI_SetFieldTargetIconPosition Parms{};

	Parms.Icon = Icon;
	Parms.WorldPosition = std::move(WorldPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetFocusBrushBySlateColor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColor                                                (Parm, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetFocusBrushBySlateColor(const struct FSlateColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetFocusBrushBySlateColor");

	Params::EndMenuAPI_SetFocusBrushBySlateColor Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetFocusToWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetFocusToWidget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetFocusToWidget");

	Params::EndMenuAPI_SetFocusToWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetNavimapInBattle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInInBattle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetNavimapInBattle(bool bInInBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetNavimapInBattle");

	Params::EndMenuAPI_SetNavimapInBattle Parms{};

	Parms.bInInBattle = bInInBattle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.SetVirtualAcceptRight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bRight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::SetVirtualAcceptRight(bool bRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "SetVirtualAcceptRight");

	Params::EndMenuAPI_SetVirtualAcceptRight Parms{};

	Parms.bRight = bRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowAreaName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowAreaName(class UObject* WorldContextObject, const class FString& TextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowAreaName");

	Params::EndMenuAPI_ShowAreaName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TextID = std::move(TextID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowBattleEnemyOutsideWindow
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::ShowBattleEnemyOutsideWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowBattleEnemyOutsideWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowBattleEnemyStatusWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::ShowBattleEnemyStatusWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowBattleEnemyStatusWindow");

	Params::EndMenuAPI_ShowBattleEnemyStatusWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.ShowBattlePlayerStatusWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::ShowBattlePlayerStatusWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowBattlePlayerStatusWindow");

	Params::EndMenuAPI_ShowBattlePlayerStatusWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.ShowBattleTargetIcon
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuBattleTargetState               State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::ShowBattleTargetIcon(class UObject* WorldContextObject, const struct FVector& WorldPosition, EEndMenuBattleTargetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowBattleTargetIcon");

	Params::EndMenuAPI_ShowBattleTargetIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.ShowChapterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EnTextId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowChapterName(class UObject* WorldContextObject, const class FString& TextID, const class FString& EnTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowChapterName");

	Params::EndMenuAPI_ShowChapterName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TextID = std::move(TextID);
	Parms.EnTextId = std::move(EnTextId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowDamagePopupMessage
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuPopupMessageKind                Kind                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndMenuDamageInfo               Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowDamagePopupMessage(class UObject* WorldContextObject, class AActor* Actor, const struct FVector& WorldPosition, EEndMenuPopupMessageKind Kind, const struct FEndMenuDamageInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowDamagePopupMessage");

	Params::EndMenuAPI_ShowDamagePopupMessage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Actor = Actor;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.Kind = Kind;
	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowDebugListBox
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   InStringArray                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   InWidth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InSingleNodeAutoClick                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowDebugListBox(class UObject* WorldContextObject, const TArray<class FString>& InStringArray, float InWidth, float InHeight, bool InSingleNodeAutoClick, class FString* OutString, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowDebugListBox");

	Params::EndMenuAPI_ShowDebugListBox Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InStringArray = std::move(InStringArray);
	Parms.InWidth = InWidth;
	Parms.InHeight = InHeight;
	Parms.InSingleNodeAutoClick = InSingleNodeAutoClick;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutString != nullptr)
		*OutString = std::move(Parms.OutString);
}


// Function EndGame.EndMenuAPI.ShowFieldMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowFieldMenu(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowFieldMenu");

	Params::EndMenuAPI_ShowFieldMenu Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowFieldPane
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndMenuFieldPaneType                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowFieldPane(EEndMenuFieldPaneType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowFieldPane");

	Params::EndMenuAPI_ShowFieldPane Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowFieldTargetIcon
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuFieldTargetState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuFieldTargetIconType             aType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::ShowFieldTargetIcon(class UObject* WorldContextObject, const struct FVector& WorldPosition, EEndMenuFieldTargetState State, EEndMenuFieldTargetIconType aType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowFieldTargetIcon");

	Params::EndMenuAPI_ShowFieldTargetIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.State = State;
	Parms.aType = aType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.ShowFollowingPopupMessage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuPopupMessageKind                Kind                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Magnificate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuDamageResistance                Resistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuPopupMessageFlags               Flags_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowFollowingPopupMessage(class UObject* WorldContextObject, class AActor* Actor, const struct FVector& WorldPosition, EEndMenuPopupMessageKind Kind, int32 Value, int32 Magnificate, EEndMenuDamageResistance Resistance, EEndMenuPopupMessageFlags Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowFollowingPopupMessage");

	Params::EndMenuAPI_ShowFollowingPopupMessage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Actor = Actor;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.Kind = Kind;
	Parms.Value = Value;
	Parms.Magnificate = Magnificate;
	Parms.Resistance = Resistance;
	Parms.Flags_0 = Flags_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowLoadingIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowLoadingIcon(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowLoadingIcon");

	Params::EndMenuAPI_ShowLoadingIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LocationID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShowLocationTip                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowLoadingScreen(class UObject* WorldContextObject, class FName LocationID, bool ShowLocationTip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowLoadingScreen");

	Params::EndMenuAPI_ShowLoadingScreen Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LocationID = LocationID;
	Parms.ShowLocationTip = ShowLocationTip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowLoadingScreenForChocoboFastTravel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ChocoboText                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LocationID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowLoadingScreenForChocoboFastTravel(class UObject* WorldContextObject, const class FString& ChocoboText, class FName LocationID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowLoadingScreenForChocoboFastTravel");

	Params::EndMenuAPI_ShowLoadingScreenForChocoboFastTravel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ChocoboText = std::move(ChocoboText);
	Parms.LocationID = LocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowLocationName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EnTextId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowLocationName(class UObject* WorldContextObject, const class FString& TextID, const class FString& EnTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowLocationName");

	Params::EndMenuAPI_ShowLocationName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TextID = std::move(TextID);
	Parms.EnTextId = std::move(EnTextId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowMessageLogs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowMessageLogs(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowMessageLogs");

	Params::EndMenuAPI_ShowMessageLogs Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowMessageWindow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OptionTextIds                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EEndMenuMessageWindowFlags              Flags_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UEndMenuAPI::ShowMessageWindow(class UObject* WorldContextObject, const class FString& TextID, const TArray<class FString>& OptionTextIds, EEndMenuMessageWindowFlags Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowMessageWindow");

	Params::EndMenuAPI_ShowMessageWindow Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TextID = std::move(TextID);
	Parms.OptionTextIds = std::move(OptionTextIds);
	Parms.Flags_0 = Flags_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuAPI.ShowMovie
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowMovie(class UObject* WorldContextObject, class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowMovie");

	Params::EndMenuAPI_ShowMovie Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowPauseMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuPauseMode                       Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowPauseMenu(class UObject* WorldContextObject, EEndMenuPauseMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowPauseMenu");

	Params::EndMenuAPI_ShowPauseMenu Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowPopupMessage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuPopupMessageKind                Kind                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Magnificate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuDamageResistance                Resistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndMenuPopupMessageFlags               Flags_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowPopupMessage(class UObject* WorldContextObject, const struct FVector& WorldPosition, EEndMenuPopupMessageKind Kind, int32 Value, int32 Magnificate, EEndMenuDamageResistance Resistance, EEndMenuPopupMessageFlags Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowPopupMessage");

	Params::EndMenuAPI_ShowPopupMessage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldPosition = std::move(WorldPosition);
	Parms.Kind = Kind;
	Parms.Value = Value;
	Parms.Magnificate = Magnificate;
	Parms.Resistance = Resistance;
	Parms.Flags_0 = Flags_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowSkippingIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowSkippingIcon(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowSkippingIcon");

	Params::EndMenuAPI_ShowSkippingIcon Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowSubtitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TextID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWaitKey                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bArrowHidden                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowSubtitle(class UObject* WorldContextObject, const class FString& TextID, bool bWaitKey, bool bArrowHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowSubtitle");

	Params::EndMenuAPI_ShowSubtitle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TextID = std::move(TextID);
	Parms.bWaitKey = bWaitKey;
	Parms.bArrowHidden = bArrowHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.ShowTalkLogs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::ShowTalkLogs(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "ShowTalkLogs");

	Params::EndMenuAPI_ShowTalkLogs Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.UpdateMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuAPI::UpdateMenu(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "UpdateMenu");

	Params::EndMenuAPI_UpdateMenu Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.UpdateWidgetTest
// (Final, Native, Static, Public, BlueprintCallable)

void UEndMenuAPI::UpdateWidgetTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuAPI", "UpdateWidgetTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuAPI.IsBattleTargetIconActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMenuAPI::IsBattleTargetIconActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuAPI", "IsBattleTargetIconActor");

	Params::EndMenuAPI_IsBattleTargetIconActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLoadingScreen.OnTipListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndLoadingScreen::OnTipListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndLoadingScreen", "OnTipListSelectedIndexChanged");

	Params::EndLoadingScreen_OnTipListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLoadingScreen.OnTipListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndLoadingScreen::OnTipListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndLoadingScreen", "OnTipListSetupItem");

	Params::EndLoadingScreen_OnTipListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndShopItemInfoWindow.OnCoreListSetupItem
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndShopItemInfoWindow::OnCoreListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopItemInfoWindow", "OnCoreListSetupItem");

	Params::EndShopItemInfoWindow_OnCoreListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndShopItemInfoWindow.OnMateriaInfoListSetupItem
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndShopItemInfoWindow::OnMateriaInfoListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopItemInfoWindow", "OnMateriaInfoListSetupItem");

	Params::EndShopItemInfoWindow_OnMateriaInfoListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndShopItemInfoWindow.OnMeasureInfoListSize
// (Final, Native, Protected, HasDefaults)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndShopItemInfoWindow::OnMeasureInfoListSize(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopItemInfoWindow", "OnMeasureInfoListSize");

	Params::EndShopItemInfoWindow_OnMeasureInfoListSize Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIPcBaseController.RequestUseAbility
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIPcBaseController::RequestUseAbility(class FName AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIPcBaseController", "RequestUseAbility");

	Params::EndBattleAIPcBaseController_RequestUseAbility Parms{};

	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIPcBaseController.SetDefenceActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BestDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIPcBaseController::SetDefenceActor(class AActor* TargetActor, float MaxDistance, float BestDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIPcBaseController", "SetDefenceActor");

	Params::EndBattleAIPcBaseController_SetDefenceActor Parms{};

	Parms.TargetActor = TargetActor;
	Parms.MaxDistance = MaxDistance;
	Parms.BestDistance = BestDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIPcBaseController.SetDefenceLocaiton
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          TargetLoaction                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BestDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIPcBaseController::SetDefenceLocaiton(const struct FVector& TargetLoaction, float MaxDistance, float BestDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIPcBaseController", "SetDefenceLocaiton");

	Params::EndBattleAIPcBaseController_SetDefenceLocaiton Parms{};

	Parms.TargetLoaction = std::move(TargetLoaction);
	Parms.MaxDistance = MaxDistance;
	Parms.BestDistance = BestDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndJukeboxMenu.OnSoundListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndJukeboxMenu::OnSoundListPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndJukeboxMenu", "OnSoundListPressedItem");

	Params::EndJukeboxMenu_OnSoundListPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndJukeboxMenu.OnSoundListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndJukeboxMenu::OnSoundListSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndJukeboxMenu", "OnSoundListSelectedIndexChanged");

	Params::EndJukeboxMenu_OnSoundListSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndJukeboxMenu.OnSoundListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndJukeboxMenu::OnSoundListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndJukeboxMenu", "OnSoundListSetupItem");

	Params::EndJukeboxMenu_OnSoundListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAreaMapMenu.OnLeftMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndAreaMapMenu::OnLeftMenuSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAreaMapMenu", "OnLeftMenuSelectedIndexChanged");

	Params::EndAreaMapMenu_OnLeftMenuSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAreaMapMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndAreaMapMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAreaMapMenu", "OnLeftMenuSetupItem");

	Params::EndAreaMapMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndAreaMapMenu.OnStoryListBoxSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndAreaMapMenu::OnStoryListBoxSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndAreaMapMenu", "OnStoryListBoxSetupItem");

	Params::EndAreaMapMenu_OnStoryListBoxSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.RangeTest.IsRangeTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDist                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URangeTest*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URangeTest* URangeTest::IsRangeTest(float InMin, float InMax, float InDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RangeTest", "IsRangeTest");

	Params::RangeTest_IsRangeTest Parms{};

	Parms.InMin = InMin;
	Parms.InMax = InMax;
	Parms.InDist = InDist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0003Controller.CleanFlashDash
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0003Controller::CleanFlashDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "CleanFlashDash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003Controller.FinishRollingAtack
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0003Controller::FinishRollingAtack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "FinishRollingAtack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003Controller.IsPlayerInConfirmSpark
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0003Controller::IsPlayerInConfirmSpark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "IsPlayerInConfirmSpark");

	Params::EndBattleAIEB0003Controller_IsPlayerInConfirmSpark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0003Controller.OnReadySpark
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// int32                                   sparkID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          centerPos                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndBattleAIEB0003MineController*>mineAIList                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003Controller::OnReadySpark(int32 sparkID, const struct FVector& centerPos, const TArray<class AEndBattleAIEB0003MineController*>& mineAIList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "OnReadySpark");

	Params::EndBattleAIEB0003Controller_OnReadySpark Parms{};

	Parms.sparkID = sparkID;
	Parms.centerPos = std::move(centerPos);
	Parms.mineAIList = std::move(mineAIList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0003Controller.OnRequestFlashDash
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InFlashDashCount                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003Controller::OnRequestFlashDash(int32 InFlashDashCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "OnRequestFlashDash");

	Params::EndBattleAIEB0003Controller_OnRequestFlashDash Parms{};

	Parms.InFlashDashCount = InFlashDashCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0003Controller.OnSuspendFlushDash
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0003Controller::OnSuspendFlushDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "OnSuspendFlushDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0003Controller.PlayEffectOnce
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003Controller::PlayEffectOnce(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "PlayEffectOnce");

	Params::EndBattleAIEB0003Controller_PlayEffectOnce Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003Controller.SetNextFastPoint
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Point                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003Controller::SetNextFastPoint(const struct FVector& Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "SetNextFastPoint");

	Params::EndBattleAIEB0003Controller_SetNextFastPoint Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003Controller.SetNextFlashDashPoint
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Point                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003Controller::SetNextFlashDashPoint(const struct FVector& Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "SetNextFlashDashPoint");

	Params::EndBattleAIEB0003Controller_SetNextFlashDashPoint Parms{};

	Parms.Point = std::move(Point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003Controller.StopFlashDashEffect
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0003Controller::StopFlashDashEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003Controller", "StopFlashDashEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.RangeSwitch2.RangeSwitch2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ContainEqual                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FirstOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URangeSwitch2*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URangeSwitch2* URangeSwitch2::RangeSwitch2(float Value, float Min1, float Max1, float Min2, float Max2, bool ContainEqual, bool FirstOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RangeSwitch2", "RangeSwitch2");

	Params::RangeSwitch2_RangeSwitch2 Parms{};

	Parms.Value = Value;
	Parms.Min1 = Min1;
	Parms.Max1 = Max1;
	Parms.Min2 = Min2;
	Parms.Max2 = Max2;
	Parms.ContainEqual = ContainEqual;
	Parms.FirstOnly = FirstOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFieldCommandMenu.OnCommandCellSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldCommandMenu::OnCommandCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFieldCommandMenu", "OnCommandCellSetup");

	Params::EndFieldCommandMenu_OnCommandCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldCommandMenu.OnPressedItem
// (Final, Native, Public)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndFieldCommandMenu::OnPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFieldCommandMenu", "OnPressedItem");

	Params::EndFieldCommandMenu_OnPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.GetArmPhase
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// EArmPhase                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EArmPhase AEndBattleAIEB0002ArmController::GetArmPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "GetArmPhase");

	Params::EndBattleAIEB0002ArmController_GetArmPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0002ArmController.IsLeftArm
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0002ArmController::IsLeftArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "IsLeftArm");

	Params::EndBattleAIEB0002ArmController_IsLeftArm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnDetachArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    enableAI                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0002ArmController::OnDetachArm(bool enableAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnDetachArm");

	Params::EndBattleAIEB0002ArmController_OnDetachArm Parms{};

	Parms.enableAI = enableAI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnDockingFinished
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0002ArmController::OnDockingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnDockingFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnDockingStart
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   MoveSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   targetRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0002ArmController::OnDockingStart(float MoveSpeed, float LifeTime, float targetRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnDockingStart");

	Params::EndBattleAIEB0002ArmController_OnDockingStart Parms{};

	Parms.MoveSpeed = MoveSpeed;
	Parms.LifeTime = LifeTime;
	Parms.targetRadius = targetRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnDockingStartLinear
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   arrivalTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0002ArmController::OnDockingStartLinear(float arrivalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnDockingStartLinear");

	Params::EndBattleAIEB0002ArmController_OnDockingStartLinear Parms{};

	Parms.arrivalTime = arrivalTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnEjectFinished
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0002ArmController::OnEjectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnEjectFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnEjectStart
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   MoveSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   targetRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0002ArmController::OnEjectStart(float MoveSpeed, float LifeTime, float targetRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnEjectStart");

	Params::EndBattleAIEB0002ArmController_OnEjectStart Parms{};

	Parms.MoveSpeed = MoveSpeed;
	Parms.LifeTime = LifeTime;
	Parms.targetRadius = targetRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnLeftArmDockingCompleted
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0002ArmController::OnLeftArmDockingCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnLeftArmDockingCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0002ArmController.OnLeftArmEjectCompleted
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0002ArmController::OnLeftArmEjectCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnLeftArmEjectCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0002ArmController.OnLeftArmRocketPunchCompleted
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0002ArmController::OnLeftArmRocketPunchCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnLeftArmRocketPunchCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0002ArmController.OnRightArmDockingCompleted
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0002ArmController::OnRightArmDockingCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnRightArmDockingCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0002ArmController.OnRightArmEjectCompleted
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0002ArmController::OnRightArmEjectCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnRightArmEjectCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0002ArmController.OnRightArmRocketPunchCompleted
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0002ArmController::OnRightArmRocketPunchCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnRightArmRocketPunchCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0002ArmController.OnRocketPunchFinished
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0002ArmController::OnRocketPunchFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnRocketPunchFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.OnRocketPunchStart
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0002ArmController::OnRocketPunchStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "OnRocketPunchStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002ArmController.SetArmPhase
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EArmPhase                               InPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0002ArmController::SetArmPhase(EArmPhase InPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002ArmController", "SetArmPhase");

	Params::EndBattleAIEB0002ArmController_SetArmPhase Parms{};

	Parms.InPhase = InPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSaveLoadTopMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSaveLoadTopMenu::OnLeftMenuPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSaveLoadTopMenu", "OnLeftMenuPressedItem");

	Params::EndMainSaveLoadTopMenu_OnLeftMenuPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainSaveLoadTopMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainSaveLoadTopMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainSaveLoadTopMenu", "OnLeftMenuSetupItem");

	Params::EndMainSaveLoadTopMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0012Controller.OnEasySpawnEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0012Controller::OnEasySpawnEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "OnEasySpawnEvent");

	Params::EndBattleAIEB0012Controller_OnEasySpawnEvent Parms{};

	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0012Controller.RequestDestroyLeftArmActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0012Controller::RequestDestroyLeftArmActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "RequestDestroyLeftArmActor");

	Params::EndBattleAIEB0012Controller_RequestDestroyLeftArmActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0012Controller.RequestKillLeftArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    forceDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0012Controller::RequestKillLeftArm(bool forceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "RequestKillLeftArm");

	Params::EndBattleAIEB0012Controller_RequestKillLeftArm Parms{};

	Parms.forceDestroy = forceDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0012Controller.RequestRepairLeftArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             charaPartsSpecName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             meshLabelName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0012Controller::RequestRepairLeftArm(class FName charaPartsSpecName, class FName meshLabelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "RequestRepairLeftArm");

	Params::EndBattleAIEB0012Controller_RequestRepairLeftArm Parms{};

	Parms.charaPartsSpecName = charaPartsSpecName;
	Parms.meshLabelName = meshLabelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0012Controller.RequestReplaceLeftArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0012Controller::RequestReplaceLeftArm(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "RequestReplaceLeftArm");

	Params::EndBattleAIEB0012Controller_RequestReplaceLeftArm Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0012Controller.RequestSpawnLeftArm
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedDisableCollision                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deadEventDelayTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    recycle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0012Controller::RequestSpawnLeftArm(class FName CharaSpecName, bool spawnedInvisible, bool spawnedDisableCollision, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float deadEventDelayTime, const struct FVector& hidePosition, bool recycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "RequestSpawnLeftArm");

	Params::EndBattleAIEB0012Controller_RequestSpawnLeftArm Parms{};

	Parms.CharaSpecName = CharaSpecName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.spawnedDisableCollision = spawnedDisableCollision;
	Parms.enableRagdollType = enableRagdollType;
	Parms.deadEventDelayTime = deadEventDelayTime;
	Parms.hidePosition = std::move(hidePosition);
	Parms.recycle = recycle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0012Controller.UpdateBehaviorRateFunc
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   addRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0012Controller::UpdateBehaviorRateFunc(class FName Name_0, int32 addRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0012Controller", "UpdateBehaviorRateFunc");

	Params::EndBattleAIEB0012Controller_UpdateBehaviorRateFunc Parms{};

	Parms.Name_0 = Name_0;
	Parms.addRate = addRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0005Controller.BlowSunglass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    damageCauserChara                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0005Controller::BlowSunglass(class AEndCharacter* damageCauserChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0005Controller", "BlowSunglass");

	Params::EndBattleAIEB0005Controller_BlowSunglass Parms{};

	Parms.damageCauserChara = damageCauserChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0005Controller.ChangeRideMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ERideMode                               rideMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0005Controller::ChangeRideMode(ERideMode rideMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0005Controller", "ChangeRideMode");

	Params::EndBattleAIEB0005Controller_ChangeRideMode Parms{};

	Parms.rideMode = rideMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.RangeSwitch4.RangeSwitch4
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min4                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max4                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ContainEqual                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FirstOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URangeSwitch4*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URangeSwitch4* URangeSwitch4::RangeSwitch4(float Value, float Min1, float Max1, float Min2, float Max2, float Min3, float Max3, float Min4, float Max4, bool ContainEqual, bool FirstOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RangeSwitch4", "RangeSwitch4");

	Params::RangeSwitch4_RangeSwitch4 Parms{};

	Parms.Value = Value;
	Parms.Min1 = Min1;
	Parms.Max1 = Max1;
	Parms.Min2 = Min2;
	Parms.Max2 = Max2;
	Parms.Min3 = Min3;
	Parms.Max3 = Max3;
	Parms.Min4 = Min4;
	Parms.Max4 = Max4;
	Parms.ContainEqual = ContainEqual;
	Parms.FirstOnly = FirstOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0010Controller.OnEventEasySpawn
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0010Controller::OnEventEasySpawn(class FName keyword, class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0010Controller", "OnEventEasySpawn");

	Params::EndBattleAIEB0010Controller_OnEventEasySpawn Parms{};

	Parms.keyword = keyword;
	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0010Controller.ReleaseBattleFieldByDGBoss
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0010Controller::ReleaseBattleFieldByDGBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0010Controller", "ReleaseBattleFieldByDGBoss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0010Controller.RequestBreakTentacle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0010Controller::RequestBreakTentacle(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0010Controller", "RequestBreakTentacle");

	Params::EndBattleAIEB0010Controller_RequestBreakTentacle Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0010Controller.RequestSpawnTentacle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deadEventDelayTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0010Controller::RequestSpawnTentacle(class FName keyword, class FName CharaSpecName, class FName SocketName, bool spawnedInvisible, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float deadEventDelayTime, const struct FVector& hidePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0010Controller", "RequestSpawnTentacle");

	Params::EndBattleAIEB0010Controller_RequestSpawnTentacle Parms{};

	Parms.keyword = keyword;
	Parms.CharaSpecName = CharaSpecName;
	Parms.SocketName = SocketName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.enableRagdollType = enableRagdollType;
	Parms.deadEventDelayTime = deadEventDelayTime;
	Parms.hidePosition = std::move(hidePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0010Controller.RestrictBattleFieldByDGBoss
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ExclusionID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0010Controller::RestrictBattleFieldByDGBoss(class FName ExclusionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0010Controller", "RestrictBattleFieldByDGBoss");

	Params::EndBattleAIEB0010Controller_RestrictBattleFieldByDGBoss Parms{};

	Parms.ExclusionID = ExclusionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0026Controller.OnEasySpawnEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0026Controller::OnEasySpawnEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "OnEasySpawnEvent");

	Params::EndBattleAIEB0026Controller_OnEasySpawnEvent Parms{};

	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0026Controller.OnEventEasySpawn
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0026Controller::OnEventEasySpawn(class FName keyword, class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "OnEventEasySpawn");

	Params::EndBattleAIEB0026Controller_OnEventEasySpawn Parms{};

	Parms.keyword = keyword;
	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0026Controller.RequestBreakTentacle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0026Controller::RequestBreakTentacle(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "RequestBreakTentacle");

	Params::EndBattleAIEB0026Controller_RequestBreakTentacle Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0026Controller.RequestKillTip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    forceDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0026Controller::RequestKillTip(bool forceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "RequestKillTip");

	Params::EndBattleAIEB0026Controller_RequestKillTip Parms{};

	Parms.forceDestroy = forceDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0026Controller.RequestReplaceTip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0026Controller::RequestReplaceTip(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "RequestReplaceTip");

	Params::EndBattleAIEB0026Controller_RequestReplaceTip Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0026Controller.RequestSpawnTentacle
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deadEventDelayTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0026Controller::RequestSpawnTentacle(class FName keyword, class FName CharaSpecName, class FName SocketName, bool spawnedInvisible, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float deadEventDelayTime, const struct FVector& hidePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "RequestSpawnTentacle");

	Params::EndBattleAIEB0026Controller_RequestSpawnTentacle Parms{};

	Parms.keyword = keyword;
	Parms.CharaSpecName = CharaSpecName;
	Parms.SocketName = SocketName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.enableRagdollType = enableRagdollType;
	Parms.deadEventDelayTime = deadEventDelayTime;
	Parms.hidePosition = std::move(hidePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0026Controller.RequestSpawnTip
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedDisableCollision                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   destroyTimer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0026Controller::RequestSpawnTip(class FName CharaSpecName, bool spawnedInvisible, bool spawnedDisableCollision, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float destroyTimer, const struct FVector& hidePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0026Controller", "RequestSpawnTip");

	Params::EndBattleAIEB0026Controller_RequestSpawnTip Parms{};

	Parms.CharaSpecName = CharaSpecName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.spawnedDisableCollision = spawnedDisableCollision;
	Parms.enableRagdollType = enableRagdollType;
	Parms.destroyTimer = destroyTimer;
	Parms.hidePosition = std::move(hidePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainMateriaChangeSelectWindow.OnEndEquipChangeEquipCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaChangeSelectWindow::OnEndEquipChangeEquipCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaChangeSelectWindow", "OnEndEquipChangeEquipCellSetup");

	Params::EndMainMateriaChangeSelectWindow_OnEndEquipChangeEquipCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMateriaChangeSelectWindow.OnEndEquipChangeMateriaCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaChangeSelectWindow::OnEndEquipChangeMateriaCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaChangeSelectWindow", "OnEndEquipChangeMateriaCellSetup");

	Params::EndMainMateriaChangeSelectWindow_OnEndEquipChangeMateriaCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMateriaChangeSelectWindow.OnEndEquipChangeWeaponCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaChangeSelectWindow::OnEndEquipChangeWeaponCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaChangeSelectWindow", "OnEndEquipChangeWeaponCellSetup");

	Params::EndMainMateriaChangeSelectWindow_OnEndEquipChangeWeaponCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0014Controller.GetLayoutDistanceStatus
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIEB0014Controller::GetLayoutDistanceStatus(class FName InName, float InMax, float InMin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "GetLayoutDistanceStatus");

	Params::EndBattleAIEB0014Controller_GetLayoutDistanceStatus Parms{};

	Parms.InName = InName;
	Parms.InMax = InMax;
	Parms.InMin = InMin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0014Controller.OnCanUseParts
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0014Controller::OnCanUseParts(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "OnCanUseParts");

	Params::EndBattleAIEB0014Controller_OnCanUseParts Parms{};

	Parms.keyword = keyword;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0014Controller.OnDiedParts
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0014Controller::OnDiedParts(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "OnDiedParts");

	Params::EndBattleAIEB0014Controller_OnDiedParts Parms{};

	Parms.keyword = keyword;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0014Controller.OnEventEasySpawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0014Controller::OnEventEasySpawn(class FName keyword, class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "OnEventEasySpawn");

	Params::EndBattleAIEB0014Controller_OnEventEasySpawn Parms{};

	Parms.keyword = keyword;
	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0014Controller.OnRotateEnd
// (Event, Protected, BlueprintEvent)

void AEndBattleAIEB0014Controller::OnRotateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "OnRotateEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0014Controller.RequestBreakTentacle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0014Controller::RequestBreakTentacle(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "RequestBreakTentacle");

	Params::EndBattleAIEB0014Controller_RequestBreakTentacle Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0014Controller.RequestPartsKill
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0014Controller::RequestPartsKill(class FName keyword, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "RequestPartsKill");

	Params::EndBattleAIEB0014Controller_RequestPartsKill Parms{};

	Parms.keyword = keyword;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0014Controller.RequestPartsSpawn
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIEB0014Controller::RequestPartsSpawn(class FName keyword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "RequestPartsSpawn");

	Params::EndBattleAIEB0014Controller_RequestPartsSpawn Parms{};

	Parms.keyword = keyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0014Controller.RequestSpawnTentacle
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deadEventDelayTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0014Controller::RequestSpawnTentacle(class FName keyword, class FName CharaSpecName, class FName SocketName, bool spawnedInvisible, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float deadEventDelayTime, const struct FVector& hidePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "RequestSpawnTentacle");

	Params::EndBattleAIEB0014Controller_RequestSpawnTentacle Parms{};

	Parms.keyword = keyword;
	Parms.CharaSpecName = CharaSpecName;
	Parms.SocketName = SocketName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.enableRagdollType = enableRagdollType;
	Parms.deadEventDelayTime = deadEventDelayTime;
	Parms.hidePosition = std::move(hidePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0014Controller.RequestUniqueRotate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   dulation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0014Controller::RequestUniqueRotate(float Yaw, float dulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0014Controller", "RequestUniqueRotate");

	Params::EndBattleAIEB0014Controller_RequestUniqueRotate Parms{};

	Parms.Yaw = Yaw;
	Parms.dulation = dulation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0007Controller.GetSprinkleWaterInAnglePointNames
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     nodeNames                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   rangeAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   rangeDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     outNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             outNearName                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0007Controller::GetSprinkleWaterInAnglePointNames(const TArray<class FName>& nodeNames, float rangeAngle, float rangeDistance, TArray<class FName>* outNames, class FName* outNearName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "GetSprinkleWaterInAnglePointNames");

	Params::EndBattleAIEB0007Controller_GetSprinkleWaterInAnglePointNames Parms{};

	Parms.nodeNames = std::move(nodeNames);
	Parms.rangeAngle = rangeAngle;
	Parms.rangeDistance = rangeDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNames != nullptr)
		*outNames = std::move(Parms.outNames);

	if (outNearName != nullptr)
		*outNearName = Parms.outNearName;
}


// Function EndGame.EndBattleAIEB0007Controller.GetSprinkleWaterInRangePointNames
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     nodeNames                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   RangeRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   rangeDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     outNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             outNearName                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0007Controller::GetSprinkleWaterInRangePointNames(const TArray<class FName>& nodeNames, float RangeRadius, float rangeDistance, TArray<class FName>* outNames, class FName* outNearName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "GetSprinkleWaterInRangePointNames");

	Params::EndBattleAIEB0007Controller_GetSprinkleWaterInRangePointNames Parms{};

	Parms.nodeNames = std::move(nodeNames);
	Parms.RangeRadius = RangeRadius;
	Parms.rangeDistance = rangeDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNames != nullptr)
		*outNames = std::move(Parms.outNames);

	if (outNearName != nullptr)
		*outNearName = Parms.outNearName;
}


// Function EndGame.EndBattleAIEB0007Controller.GetSprinkleWaterInRangeTargetCharacter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             NodeName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EPlayerType>                     playerTypes                                            (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   RangeRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            outCharacters                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AEndBattleAIEB0007Controller::GetSprinkleWaterInRangeTargetCharacter(const class FName& NodeName, const TArray<EPlayerType>& playerTypes, float RangeRadius, TArray<class AEndCharacter*>* outCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "GetSprinkleWaterInRangeTargetCharacter");

	Params::EndBattleAIEB0007Controller_GetSprinkleWaterInRangeTargetCharacter Parms{};

	Parms.NodeName = NodeName;
	Parms.playerTypes = std::move(playerTypes);
	Parms.RangeRadius = RangeRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outCharacters != nullptr)
		*outCharacters = std::move(Parms.outCharacters);
}


// Function EndGame.EndBattleAIEB0007Controller.RequestResetBrokenTail
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0007Controller::RequestResetBrokenTail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "RequestResetBrokenTail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0007Controller.RequestRunBrokenTail
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0007Controller::RequestRunBrokenTail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "RequestRunBrokenTail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0007Controller.RequestSpawnBrokenTail
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0007Controller::RequestSpawnBrokenTail(class FName CharaSpecName, const struct FVector& hidePosition, bool spawnedInvisible, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "RequestSpawnBrokenTail");

	Params::EndBattleAIEB0007Controller_RequestSpawnBrokenTail Parms{};

	Parms.CharaSpecName = CharaSpecName;
	Parms.hidePosition = std::move(hidePosition);
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0007Controller.ToGraviticJump
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          landingLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PeakBias                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   turningDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          UpVector                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          forwardVector                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToTerrain                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0007Controller::ToGraviticJump(const struct FVector& landingLocation, float Height, float PeakBias, float turningDuration, const struct FVector& UpVector, const struct FVector& forwardVector, bool bToTerrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0007Controller", "ToGraviticJump");

	Params::EndBattleAIEB0007Controller_ToGraviticJump Parms{};

	Parms.landingLocation = std::move(landingLocation);
	Parms.Height = Height;
	Parms.PeakBias = PeakBias;
	Parms.turningDuration = turningDuration;
	Parms.UpVector = std::move(UpVector);
	Parms.forwardVector = std::move(forwardVector);
	Parms.bToTerrain = bToTerrain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAILineWarpController.OnEventLineWarp
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             Message                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAILineWarpController::OnEventLineWarp(class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAILineWarpController", "OnEventLineWarp");

	Params::EndBattleAILineWarpController_OnEventLineWarp Parms{};

	Parms.Message = Message;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAILineWarpController.RequestLineWarp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ELineWarpType                           InLineWarpType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDivisionNum                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InStartMotion                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLoopMotion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEndMotion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InWaitTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InEndLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InRandomOffsetRange                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InNearDistance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLeaveDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPointWaitTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTrailVelocityPower                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InHeightOffsetTable                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELineWarpCalcPattern                    InCalcPattern                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPatternParameter                                     (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAILineWarpController::RequestLineWarp(ELineWarpType InLineWarpType, int32 InDivisionNum, class FName InStartMotion, class FName InLoopMotion, class FName InEndMotion, float InWaitTime, const struct FVector& InEndLocation, const struct FVector& InRandomOffsetRange, float InNearDistance, float InLeaveDistance, float InPointWaitTime, float InTrailVelocityPower, const struct FVector& InHeightOffsetTable, ELineWarpCalcPattern InCalcPattern, const struct FVector& InPatternParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAILineWarpController", "RequestLineWarp");

	Params::EndBattleAILineWarpController_RequestLineWarp Parms{};

	Parms.InLineWarpType = InLineWarpType;
	Parms.InDivisionNum = InDivisionNum;
	Parms.InStartMotion = InStartMotion;
	Parms.InLoopMotion = InLoopMotion;
	Parms.InEndMotion = InEndMotion;
	Parms.InWaitTime = InWaitTime;
	Parms.InEndLocation = std::move(InEndLocation);
	Parms.InRandomOffsetRange = std::move(InRandomOffsetRange);
	Parms.InNearDistance = InNearDistance;
	Parms.InLeaveDistance = InLeaveDistance;
	Parms.InPointWaitTime = InPointWaitTime;
	Parms.InTrailVelocityPower = InTrailVelocityPower;
	Parms.InHeightOffsetTable = std::move(InHeightOffsetTable);
	Parms.InCalcPattern = InCalcPattern;
	Parms.InPatternParameter = std::move(InPatternParameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1005Controller.GetFastDashGotoPosition
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             InPlayerType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastDashGoToPositionType               InPositionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastDashGoToDistanceType               InDistanceType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDirYaw                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIEB1005Controller::GetFastDashGotoPosition(EPlayerType InPlayerType, EFastDashGoToPositionType InPositionType, EFastDashGoToDistanceType InDistanceType, float InDirYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "GetFastDashGotoPosition");

	Params::EndBattleAIEB1005Controller_GetFastDashGotoPosition Parms{};

	Parms.InPlayerType = InPlayerType;
	Parms.InPositionType = InPositionType;
	Parms.InDistanceType = InDistanceType;
	Parms.InDirYaw = InDirYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1005Controller.OnEventFastDash
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1005Controller::OnEventFastDash(class FName InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "OnEventFastDash");

	Params::EndBattleAIEB1005Controller_OnEventFastDash Parms{};

	Parms.InEventName = InEventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB1005Controller.OverwriteGoalPositionFastDash
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGoalPosition                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1005Controller::OverwriteGoalPositionFastDash(class FName InKeyword, const struct FVector& InGoalPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "OverwriteGoalPositionFastDash");

	Params::EndBattleAIEB1005Controller_OverwriteGoalPositionFastDash Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InGoalPosition = std::move(InGoalPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1005Controller.RegisterFastDash
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InStartAnimation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLoopAnimation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEndAnimation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InVailableDistance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameCompleted                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameSuspended                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameTimeOver                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameHitWall                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameMissing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameArrival                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameNear                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1005Controller::RegisterFastDash(class FName InKeyword, class FName InStartAnimation, class FName InLoopAnimation, class FName InEndAnimation, float InVailableDistance, class FName InEventNameCompleted, class FName InEventNameSuspended, class FName InEventNameTimeOver, class FName InEventNameHitWall, class FName InEventNameMissing, class FName InEventNameArrival, class FName InEventNameNear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "RegisterFastDash");

	Params::EndBattleAIEB1005Controller_RegisterFastDash Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InStartAnimation = InStartAnimation;
	Parms.InLoopAnimation = InLoopAnimation;
	Parms.InEndAnimation = InEndAnimation;
	Parms.InVailableDistance = InVailableDistance;
	Parms.InEventNameCompleted = InEventNameCompleted;
	Parms.InEventNameSuspended = InEventNameSuspended;
	Parms.InEventNameTimeOver = InEventNameTimeOver;
	Parms.InEventNameHitWall = InEventNameHitWall;
	Parms.InEventNameMissing = InEventNameMissing;
	Parms.InEventNameArrival = InEventNameArrival;
	Parms.InEventNameNear = InEventNameNear;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1005Controller.RegisterFastDashEffect
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InCharaSpecName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectFastDashMove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1005Controller::RegisterFastDashEffect(class FName InCharaSpecName, class FName InEffectFastDashMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "RegisterFastDashEffect");

	Params::EndBattleAIEB1005Controller_RegisterFastDashEffect Parms{};

	Parms.InCharaSpecName = InCharaSpecName;
	Parms.InEffectFastDashMove = InEffectFastDashMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1005Controller.RegisterFastDashGotoPosition
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InDistance                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1005Controller::RegisterFastDashGotoPosition(const struct FVector& InDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "RegisterFastDashGotoPosition");

	Params::EndBattleAIEB1005Controller_RegisterFastDashGotoPosition Parms{};

	Parms.InDistance = std::move(InDistance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1005Controller.RequestReserveActionFastDash
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGoalPosition                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFastMoveSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMissingDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMarginDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLimitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoveFriction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InUseStartFrontRotate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InUseDeceleration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InUpdateGoalPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDrawTargetPoint                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB1005Controller::RequestReserveActionFastDash(class FName InKeyword, const struct FVector& InGoalPosition, float InFastMoveSpeed, float InMissingDistance, float InMarginDistance, float InLimitTime, float InMoveFriction, bool InUseStartFrontRotate, bool InUseDeceleration, bool InUpdateGoalPosition, bool InDrawTargetPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1005Controller", "RequestReserveActionFastDash");

	Params::EndBattleAIEB1005Controller_RequestReserveActionFastDash Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InGoalPosition = std::move(InGoalPosition);
	Parms.InFastMoveSpeed = InFastMoveSpeed;
	Parms.InMissingDistance = InMissingDistance;
	Parms.InMarginDistance = InMarginDistance;
	Parms.InLimitTime = InLimitTime;
	Parms.InMoveFriction = InMoveFriction;
	Parms.InUseStartFrontRotate = InUseStartFrontRotate;
	Parms.InUseDeceleration = InUseDeceleration;
	Parms.InUpdateGoalPosition = InUpdateGoalPosition;
	Parms.InDrawTargetPoint = InDrawTargetPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleCameraLevelScriptActor.BattleCameraLevelConstructionScript
// (Event, Public, BlueprintEvent)

void AEndBattleCameraLevelScriptActor::BattleCameraLevelConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleCameraLevelScriptActor", "BattleCameraLevelConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB1004Controller.CompareAbyssOverAbilityCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   compareCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB1004Controller::CompareAbyssOverAbilityCount(int32 compareCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "CompareAbyssOverAbilityCount");

	Params::EndBattleAIEB1004Controller_CompareAbyssOverAbilityCount Parms{};

	Parms.compareCount = compareCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.GetAbyssAbilityCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIEB1004Controller::GetAbyssAbilityCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "GetAbyssAbilityCount");

	Params::EndBattleAIEB1004Controller_GetAbyssAbilityCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.GetAbyssElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAIEB1004Controller::GetAbyssElapsedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "GetAbyssElapsedTime");

	Params::EndBattleAIEB1004Controller_GetAbyssElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.GetFastDashGotoPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             InPlayerType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastDashGoToPositionType               InPositionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFastDashGoToDistanceType               InDistanceType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDirYaw                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIEB1004Controller::GetFastDashGotoPosition(EPlayerType InPlayerType, EFastDashGoToPositionType InPositionType, EFastDashGoToDistanceType InDistanceType, float InDirYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "GetFastDashGotoPosition");

	Params::EndBattleAIEB1004Controller_GetFastDashGotoPosition Parms{};

	Parms.InPlayerType = InPlayerType;
	Parms.InPositionType = InPositionType;
	Parms.InDistanceType = InDistanceType;
	Parms.InDirYaw = InDirYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.GetTotalDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIEB1004Controller::GetTotalDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "GetTotalDamage");

	Params::EndBattleAIEB1004Controller_GetTotalDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.GetTotalDamageThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIEB1004Controller::GetTotalDamageThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "GetTotalDamageThreshold");

	Params::EndBattleAIEB1004Controller_GetTotalDamageThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.IncrementAbyssAbilityCount
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB1004Controller::IncrementAbyssAbilityCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "IncrementAbyssAbilityCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.OnAbyssOverTimeEvent
// (Event, Public, BlueprintEvent)

void AEndBattleAIEB1004Controller::OnAbyssOverTimeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "OnAbyssOverTimeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB1004Controller.OnAbyssTimeInterruptedEvent
// (Event, Public, BlueprintEvent)

void AEndBattleAIEB1004Controller::OnAbyssTimeInterruptedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "OnAbyssTimeInterruptedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB1004Controller.OnEventFastDash
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::OnEventFastDash(class FName InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "OnEventFastDash");

	Params::EndBattleAIEB1004Controller_OnEventFastDash Parms{};

	Parms.InEventName = InEventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB1004Controller.OverwriteGoalPositionFastDash
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGoalPosition                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::OverwriteGoalPositionFastDash(class FName InKeyword, const struct FVector& InGoalPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "OverwriteGoalPositionFastDash");

	Params::EndBattleAIEB1004Controller_OverwriteGoalPositionFastDash Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InGoalPosition = std::move(InGoalPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.RegisterFastDash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InStartAnimation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InLoopAnimation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEndAnimation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InVailableDistance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameCompleted                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameSuspended                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameTimeOver                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameHitWall                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameMissing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameArrival                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventNameNear                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::RegisterFastDash(class FName InKeyword, class FName InStartAnimation, class FName InLoopAnimation, class FName InEndAnimation, float InVailableDistance, class FName InEventNameCompleted, class FName InEventNameSuspended, class FName InEventNameTimeOver, class FName InEventNameHitWall, class FName InEventNameMissing, class FName InEventNameArrival, class FName InEventNameNear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "RegisterFastDash");

	Params::EndBattleAIEB1004Controller_RegisterFastDash Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InStartAnimation = InStartAnimation;
	Parms.InLoopAnimation = InLoopAnimation;
	Parms.InEndAnimation = InEndAnimation;
	Parms.InVailableDistance = InVailableDistance;
	Parms.InEventNameCompleted = InEventNameCompleted;
	Parms.InEventNameSuspended = InEventNameSuspended;
	Parms.InEventNameTimeOver = InEventNameTimeOver;
	Parms.InEventNameHitWall = InEventNameHitWall;
	Parms.InEventNameMissing = InEventNameMissing;
	Parms.InEventNameArrival = InEventNameArrival;
	Parms.InEventNameNear = InEventNameNear;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.RegisterFastDashEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCharaSpecName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectFastDashMove                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::RegisterFastDashEffect(class FName InCharaSpecName, class FName InEffectFastDashMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "RegisterFastDashEffect");

	Params::EndBattleAIEB1004Controller_RegisterFastDashEffect Parms{};

	Parms.InCharaSpecName = InCharaSpecName;
	Parms.InEffectFastDashMove = InEffectFastDashMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.RegisterFastDashGotoPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InDistance                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::RegisterFastDashGotoPosition(const struct FVector& InDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "RegisterFastDashGotoPosition");

	Params::EndBattleAIEB1004Controller_RegisterFastDashGotoPosition Parms{};

	Parms.InDistance = std::move(InDistance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.RequestReserveActionFastDash
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InKeyword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InGoalPosition                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFastMoveSpeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMissingDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMarginDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLimitTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoveFriction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InUseStartFrontRotate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InUseDeceleration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InUpdateGoalPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDrawTargetPoint                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB1004Controller::RequestReserveActionFastDash(class FName InKeyword, const struct FVector& InGoalPosition, float InFastMoveSpeed, float InMissingDistance, float InMarginDistance, float InLimitTime, float InMoveFriction, bool InUseStartFrontRotate, bool InUseDeceleration, bool InUpdateGoalPosition, bool InDrawTargetPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "RequestReserveActionFastDash");

	Params::EndBattleAIEB1004Controller_RequestReserveActionFastDash Parms{};

	Parms.InKeyword = InKeyword;
	Parms.InGoalPosition = std::move(InGoalPosition);
	Parms.InFastMoveSpeed = InFastMoveSpeed;
	Parms.InMissingDistance = InMissingDistance;
	Parms.InMarginDistance = InMarginDistance;
	Parms.InLimitTime = InLimitTime;
	Parms.InMoveFriction = InMoveFriction;
	Parms.InUseStartFrontRotate = InUseStartFrontRotate;
	Parms.InUseDeceleration = InUseDeceleration;
	Parms.InUpdateGoalPosition = InUpdateGoalPosition;
	Parms.InDrawTargetPoint = InDrawTargetPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1004Controller.ResetAbyssAbilityCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    enableResetTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::ResetAbyssAbilityCount(bool enableResetTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "ResetAbyssAbilityCount");

	Params::EndBattleAIEB1004Controller_ResetAbyssAbilityCount Parms{};

	Parms.enableResetTime = enableResetTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.SetAbyssOverTimeEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOverTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InKeepTimer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::SetAbyssOverTimeEvent(float InOverTime, bool InKeepTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "SetAbyssOverTimeEvent");

	Params::EndBattleAIEB1004Controller_SetAbyssOverTimeEvent Parms{};

	Parms.InOverTime = InOverTime;
	Parms.InKeepTimer = InKeepTimer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.SetTotalDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::SetTotalDamage(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "SetTotalDamage");

	Params::EndBattleAIEB1004Controller_SetTotalDamage Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1004Controller.SetTotalDamageThreshold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1004Controller::SetTotalDamageThreshold(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1004Controller", "SetTotalDamageThreshold");

	Params::EndBattleAIEB1004Controller_SetTotalDamageThreshold Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndProgressBar.SetFillColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndProgressBar::SetFillColorAndOpacity(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndProgressBar", "SetFillColorAndOpacity");

	Params::EndProgressBar_SetFillColorAndOpacity Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndProgressBar.SetPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndProgressBar::SetPercent(float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndProgressBar", "SetPercent");

	Params::EndProgressBar_SetPercent Parms{};

	Parms.InPercent = InPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndProgressBar.SetPreviewColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndProgressBar::SetPreviewColorAndOpacity(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndProgressBar", "SetPreviewColorAndOpacity");

	Params::EndProgressBar_SetPreviewColorAndOpacity Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndProgressBar.SetPreviewPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndProgressBar::SetPreviewPercent(float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndProgressBar", "SetPreviewPercent");

	Params::EndProgressBar_SetPreviewPercent Parms{};

	Parms.InPercent = InPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN2101Controller.OnEasySpawnEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN2101Controller::OnEasySpawnEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "OnEasySpawnEvent");

	Params::EndBattleAIEN2101Controller_OnEasySpawnEvent Parms{};

	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEN2101Controller.RequestBreakRightArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             charaPartsSpecName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2101Controller::RequestBreakRightArm(class FName charaPartsSpecName, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "RequestBreakRightArm");

	Params::EndBattleAIEN2101Controller_RequestBreakRightArm Parms{};

	Parms.charaPartsSpecName = charaPartsSpecName;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2101Controller.RequestDestroyRightArmActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2101Controller::RequestDestroyRightArmActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "RequestDestroyRightArmActor");

	Params::EndBattleAIEN2101Controller_RequestDestroyRightArmActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2101Controller.RequestKillRightArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    forceDestroy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2101Controller::RequestKillRightArm(bool forceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "RequestKillRightArm");

	Params::EndBattleAIEN2101Controller_RequestKillRightArm Parms{};

	Parms.forceDestroy = forceDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2101Controller.RequestRepairRightArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             charaPartsSpecName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             meshLabelName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2101Controller::RequestRepairRightArm(class FName charaPartsSpecName, class FName meshLabelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "RequestRepairRightArm");

	Params::EndBattleAIEN2101Controller_RequestRepairRightArm Parms{};

	Parms.charaPartsSpecName = charaPartsSpecName;
	Parms.meshLabelName = meshLabelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2101Controller.RequestReplaceRightArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2101Controller::RequestReplaceRightArm(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "RequestReplaceRightArm");

	Params::EndBattleAIEN2101Controller_RequestReplaceRightArm Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2101Controller.RequestSpawnRightArm
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedDisableCollision                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleEasySpawnEnableRagdollType    enableRagdollType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   deadEventDelayTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          hidePosition                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    recycle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2101Controller::RequestSpawnRightArm(class FName CharaSpecName, bool spawnedInvisible, bool spawnedDisableCollision, EEndBattleEasySpawnEnableRagdollType enableRagdollType, float deadEventDelayTime, const struct FVector& hidePosition, bool recycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2101Controller", "RequestSpawnRightArm");

	Params::EndBattleAIEN2101Controller_RequestSpawnRightArm Parms{};

	Parms.CharaSpecName = CharaSpecName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.spawnedDisableCollision = spawnedDisableCollision;
	Parms.enableRagdollType = enableRagdollType;
	Parms.deadEventDelayTime = deadEventDelayTime;
	Parms.hidePosition = std::move(hidePosition);
	Parms.recycle = recycle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2000_01Controller.IsChasing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2000_01Controller::IsChasing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2000_01Controller", "IsChasing");

	Params::EndBattleAIEN2000_01Controller_IsChasing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEN2000_01Controller.StartChasing
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEN2000_01Controller::StartChasing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2000_01Controller", "StartChasing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN2000_01Controller.StopChasing
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEN2000_01Controller::StopChasing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2000_01Controller", "StopChasing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnAbilityListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnAbilityListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnAbilityListSetupItem");

	Params::EndEnemyReportMenu_OnAbilityListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnActionTypeListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnActionTypeListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnActionTypeListSetupItem");

	Params::EndEnemyReportMenu_OnActionTypeListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnAreaListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnAreaListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnAreaListSetupItem");

	Params::EndEnemyReportMenu_OnAreaListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnBattleLogListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnBattleLogListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnBattleLogListSetupItem");

	Params::EndEnemyReportMenu_OnBattleLogListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnBuffIconSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnBuffIconSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnBuffIconSetup");

	Params::EndEnemyReportMenu_OnBuffIconSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnDebuffIconSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnDebuffIconSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnDebuffIconSetup");

	Params::EndEnemyReportMenu_OnDebuffIconSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnDetailAreaListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnDetailAreaListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnDetailAreaListSetupItem");

	Params::EndEnemyReportMenu_OnDetailAreaListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnDetailBattleLogListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnDetailBattleLogListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnDetailBattleLogListSetupItem");

	Params::EndEnemyReportMenu_OnDetailBattleLogListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnDropItemListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnDropItemListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnDropItemListSetupItem");

	Params::EndEnemyReportMenu_OnDropItemListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnEnemyListMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndEnemyReportMenu::OnEnemyListMeasureItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnEnemyListMeasureItem");

	Params::EndEnemyReportMenu_OnEnemyListMeasureItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndEnemyReportMenu.OnEnemyListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnEnemyListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnEnemyListPressedItem");

	Params::EndEnemyReportMenu_OnEnemyListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnEnemyListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnEnemyListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnEnemyListSelectedIndexChanged");

	Params::EndEnemyReportMenu_OnEnemyListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnEnemyListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnEnemyListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnEnemyListSetupItem");

	Params::EndEnemyReportMenu_OnEnemyListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnRareDropItemListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnRareDropItemListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnRareDropItemListSetupItem");

	Params::EndEnemyReportMenu_OnRareDropItemListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnResistanceIconListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnResistanceIconListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnResistanceIconListSetupItem");

	Params::EndEnemyReportMenu_OnResistanceIconListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnResistanceListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnResistanceListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnResistanceListSetupItem");

	Params::EndEnemyReportMenu_OnResistanceListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnemyReportMenu.OnStealListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnemyReportMenu::OnStealListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnemyReportMenu", "OnStealListSetupItem");

	Params::EndEnemyReportMenu_OnStealListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.AddChildSyncAction
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             parentSyncActionID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childSyncActionID                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::AddChildSyncAction(class FName parentSyncActionID, class FName childSyncActionID, class AEndCharacter* ownerChara, class AEndCharacter* targetChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "AddChildSyncAction");

	Params::EndBattleAIEN9000Controller_AddChildSyncAction Parms{};

	Parms.parentSyncActionID = parentSyncActionID;
	Parms.childSyncActionID = childSyncActionID;
	Parms.ownerChara = ownerChara;
	Parms.targetChara = targetChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.CreateSyncActionPlayFromLoop
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             parentSyncActionID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childSyncActionID1                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childSyncActionID2                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childSyncActionID3                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childSyncActionID4                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childOwnerCharaName1                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childOwnerCharaName2                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childOwnerCharaName3                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             childOwnerCharaName4                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::CreateSyncActionPlayFromLoop(class FName parentSyncActionID, class FName childSyncActionID1, class FName childSyncActionID2, class FName childSyncActionID3, class FName childSyncActionID4, class FName childOwnerCharaName1, class FName childOwnerCharaName2, class FName childOwnerCharaName3, class FName childOwnerCharaName4, class FName TargetCharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "CreateSyncActionPlayFromLoop");

	Params::EndBattleAIEN9000Controller_CreateSyncActionPlayFromLoop Parms{};

	Parms.parentSyncActionID = parentSyncActionID;
	Parms.childSyncActionID1 = childSyncActionID1;
	Parms.childSyncActionID2 = childSyncActionID2;
	Parms.childSyncActionID3 = childSyncActionID3;
	Parms.childSyncActionID4 = childSyncActionID4;
	Parms.childOwnerCharaName1 = childOwnerCharaName1;
	Parms.childOwnerCharaName2 = childOwnerCharaName2;
	Parms.childOwnerCharaName3 = childOwnerCharaName3;
	Parms.childOwnerCharaName4 = childOwnerCharaName4;
	Parms.TargetCharaName = TargetCharaName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.DisappearChildSyncAction
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             parentSyncActionID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    parentOwnerChara                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::DisappearChildSyncAction(class FName parentSyncActionID, class AEndCharacter* parentOwnerChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "DisappearChildSyncAction");

	Params::EndBattleAIEN9000Controller_DisappearChildSyncAction Parms{};

	Parms.parentSyncActionID = parentSyncActionID;
	Parms.parentOwnerChara = parentOwnerChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.ResetEndCutSceneCorrectionHeight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             CharaName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::ResetEndCutSceneCorrectionHeight(class FName CharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "ResetEndCutSceneCorrectionHeight");

	Params::EndBattleAIEN9000Controller_ResetEndCutSceneCorrectionHeight Parms{};

	Parms.CharaName = CharaName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.ResetEndCutSceneTransformCorrection
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             CharaName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::ResetEndCutSceneTransformCorrection(class FName CharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "ResetEndCutSceneTransformCorrection");

	Params::EndBattleAIEN9000Controller_ResetEndCutSceneTransformCorrection Parms{};

	Parms.CharaName = CharaName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.SetDisableTarget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    disable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::SetDisableTarget(bool disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "SetDisableTarget");

	Params::EndBattleAIEN9000Controller_SetDisableTarget Parms{};

	Parms.disable = disable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.SetLineDefence
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::SetLineDefence(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "SetLineDefence");

	Params::EndBattleAIEN9000Controller_SetLineDefence Parms{};

	Parms.InVisible = InVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN9000Controller.SetLineDefencePoint
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          PointA                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          PointB                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN9000Controller::SetLineDefencePoint(const struct FVector& PointA, const struct FVector& PointB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN9000Controller", "SetLineDefencePoint");

	Params::EndBattleAIEN9000Controller_SetLineDefencePoint Parms{};

	Parms.PointA = std::move(PointA);
	Parms.PointB = std::move(PointB);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN2007_00Controller.OnRequestSmogDash
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN2007_00Controller::OnRequestSmogDash(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2007_00Controller", "OnRequestSmogDash");

	Params::EndBattleAIEN2007_00Controller_OnRequestSmogDash Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEN2007_00Controller.SetNextSmogDash
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN2007_00Controller::SetNextSmogDash(float InDistance, float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2007_00Controller", "SetNextSmogDash");

	Params::EndBattleAIEN2007_00Controller_SetNextSmogDash Parms{};

	Parms.InDistance = InDistance;
	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0002_02Controller.OnHitDamage
// (Event, Protected, BlueprintEvent)

void AEndBattleAISU0002_02Controller::OnHitDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002_02Controller", "OnHitDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAISU0002_02Controller.OnIfritRoar
// (Event, Protected, BlueprintEvent)

void AEndBattleAISU0002_02Controller::OnIfritRoar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002_02Controller", "OnIfritRoar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAISU0002_02Controller.OnSuspend
// (Event, Protected, BlueprintEvent)

void AEndBattleAISU0002_02Controller::OnSuspend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002_02Controller", "OnSuspend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAISU0002_02Controller.SetTargetDamageSource
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UEndBattleDamageSourceComponent*  InDamageSource                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0002_02Controller::SetTargetDamageSource(class UEndBattleDamageSourceComponent* InDamageSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002_02Controller", "SetTargetDamageSource");

	Params::EndBattleAISU0002_02Controller_SetTargetDamageSource Parms{};

	Parms.InDamageSource = InDamageSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnvironmentPhysicsStaticMeshActor.OnComponentHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEndEnvironmentPhysicsStaticMeshActor::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvironmentPhysicsStaticMeshActor", "OnComponentHit");

	Params::EndEnvironmentPhysicsStaticMeshActor_OnComponentHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnvironmentPhysicsStaticMeshActor.OnEndImpulseInterval
// (Final, Native, Private)

void AEndEnvironmentPhysicsStaticMeshActor::OnEndImpulseInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvironmentPhysicsStaticMeshActor", "OnEndImpulseInterval");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnvironmentPhysicsStaticMeshActor.PlayHitSe_TimerFunc
// (Final, Native, Private)

void AEndEnvironmentPhysicsStaticMeshActor::PlayHitSe_TimerFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvironmentPhysicsStaticMeshActor", "PlayHitSe_TimerFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISononController.RequestLinkAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndLinkAbilityType                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSupport                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAerial                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDoWithoutTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAISononController::RequestLinkAbility(class FName ID, EEndLinkAbilityType Type, bool bSupport, bool bAerial, bool bDoWithoutTarget, bool bInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISononController", "RequestLinkAbility");

	Params::EndBattleAISononController_RequestLinkAbility Parms{};

	Parms.ID = ID;
	Parms.Type = Type;
	Parms.bSupport = bSupport;
	Parms.bAerial = bAerial;
	Parms.bDoWithoutTarget = bDoWithoutTarget;
	Parms.bInstance = bInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISononController.StartSacrifice
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISononController::StartSacrifice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISononController", "StartSacrifice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISononController.TeleportToCachedLocation
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISononController::TeleportToCachedLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISononController", "TeleportToCachedLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0005Controller.OverrideTargetLocation
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    enableOverride                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          overrideLocation                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0005Controller::OverrideTargetLocation(bool enableOverride, const struct FVector& overrideLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0005Controller", "OverrideTargetLocation");

	Params::EndBattleAISU0005Controller_OverrideTargetLocation Parms{};

	Parms.enableOverride = enableOverride;
	Parms.overrideLocation = std::move(overrideLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0005Controller.ResetAIPCOverrideCautionDistance
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0005Controller::ResetAIPCOverrideCautionDistance(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0005Controller", "ResetAIPCOverrideCautionDistance");

	Params::EndBattleAISU0005Controller_ResetAIPCOverrideCautionDistance Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0005Controller.SetAIPCOverrideCautionDistance
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0005Controller::SetAIPCOverrideCautionDistance(EPlayerType PlayerType, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0005Controller", "SetAIPCOverrideCautionDistance");

	Params::EndBattleAISU0005Controller_SetAIPCOverrideCautionDistance Parms{};

	Parms.PlayerType = PlayerType;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0004Controller.RequestTornadoFollowLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTolerance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0004Controller::RequestTornadoFollowLocation(int32 InIndex, const struct FVector& InLocation, float InTolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004Controller", "RequestTornadoFollowLocation");

	Params::EndBattleAISU0004Controller_RequestTornadoFollowLocation Parms{};

	Parms.InIndex = InIndex;
	Parms.InLocation = std::move(InLocation);
	Parms.InTolerance = InTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0004Controller.UpdateAirTurn
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0004Controller::UpdateAirTurn(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004Controller", "UpdateAirTurn");

	Params::EndBattleAISU0004Controller_UpdateAirTurn Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISummonBaseController.OnAppearNotify
// (Native, Public, BlueprintCallable)

void AEndBattleAISummonBaseController::OnAppearNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISummonBaseController", "OnAppearNotify");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISummonBaseController.OnChangeBattleBehavior
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESummonBattleBehavior                   NewBattleBehavior                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISummonBaseController::OnChangeBattleBehavior(ESummonBattleBehavior NewBattleBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISummonBaseController", "OnChangeBattleBehavior");

	Params::EndBattleAISummonBaseController_OnChangeBattleBehavior Parms{};

	Parms.NewBattleBehavior = NewBattleBehavior;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAISummonBaseController.RequestShowCutSceneAbilityName
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISummonBaseController::RequestShowCutSceneAbilityName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISummonBaseController", "RequestShowCutSceneAbilityName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISummonBaseController.RequestWarpTo
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          WarpLocation                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAISummonBaseController::RequestWarpTo(const struct FVector& WarpLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISummonBaseController", "RequestWarpTo");

	Params::EndBattleAISummonBaseController_RequestWarpTo Parms{};

	Parms.WarpLocation = std::move(WarpLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISummonBaseController.SetDrawPause
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISummonBaseController::SetDrawPause(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISummonBaseController", "SetDrawPause");

	Params::EndBattleAISummonBaseController_SetDrawPause Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISummonBaseController.WarpToCachedLocation
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISummonBaseController::WarpToCachedLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISummonBaseController", "WarpToCachedLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0004_02Controller.IsFollowLocation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAISU0004_02Controller::IsFollowLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004_02Controller", "IsFollowLocation");

	Params::EndBattleAISU0004_02Controller_IsFollowLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISU0004_02Controller.OnArrivalFollowLocation
// (Event, Public, BlueprintEvent)

void AEndBattleAISU0004_02Controller::OnArrivalFollowLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004_02Controller", "OnArrivalFollowLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAISU0004_02Controller.RequestFollowLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTolerance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0004_02Controller::RequestFollowLocation(const struct FVector& InLocation, float InTolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004_02Controller", "RequestFollowLocation");

	Params::EndBattleAISU0004_02Controller_RequestFollowLocation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InTolerance = InTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0004_02Controller.RequestFollowLocationFromName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTolerance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0004_02Controller::RequestFollowLocationFromName(const class FName& InName, float InTolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004_02Controller", "RequestFollowLocationFromName");

	Params::EndBattleAISU0004_02Controller_RequestFollowLocationFromName Parms{};

	Parms.InName = InName;
	Parms.InTolerance = InTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSoundAPI.CallEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndSoundLayer                          TargetLayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSoundAPI::CallEvent(EEndSoundLayer TargetLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSoundAPI", "CallEvent");

	Params::EndSoundAPI_CallEvent Parms{};

	Parms.TargetLayer = TargetLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSoundAPI.SetExternalParameter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSoundAPI::SetExternalParameter(class FName ParameterName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSoundAPI", "SetExternalParameter");

	Params::EndSoundAPI_SetExternalParameter Parms{};

	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000BaseController.GetLightningStrikeTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAISU1000BaseController::GetLightningStrikeTargetLocation(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000BaseController", "GetLightningStrikeTargetLocation");

	Params::EndBattleAISU1000BaseController_GetLightningStrikeTargetLocation Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISU1000BaseController.SetHidePowerUpFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHide                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediately                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000BaseController::SetHidePowerUpFX(bool bHide, bool bImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000BaseController", "SetHidePowerUpFX");

	Params::EndBattleAISU1000BaseController_SetHidePowerUpFX Parms{};

	Parms.bHide = bHide;
	Parms.bImmediately = bImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0009BaseController.CreateFlareDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ToTargetDamageID                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ToOthersDamageID                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0009BaseController::CreateFlareDamage(const class FName ToTargetDamageID, const class FName ToOthersDamageID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0009BaseController", "CreateFlareDamage");

	Params::EndBattleAISU0009BaseController_CreateFlareDamage Parms{};

	Parms.ToTargetDamageID = ToTargetDamageID;
	Parms.ToOthersDamageID = ToOthersDamageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.CallTeleported
// (Final, Native, Static, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          NewLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InLeader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::CallTeleported(const struct FVector& NewLocation, class AActor* InLeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "CallTeleported");

	Params::EndPartyAPI_CallTeleported Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.InLeader = InLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.ChangeActorToad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::ChangeActorToad(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "ChangeActorToad");

	Params::EndPartyAPI_ChangeActorToad Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.CheckPlayerStream
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndPartyAPI::CheckPlayerStream(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "CheckPlayerStream");

	Params::EndPartyAPI_CheckPlayerStream Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.FinishPlayerStream
// (Final, Native, Static, Public, BlueprintCallable)

void UEndPartyAPI::FinishPlayerStream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "FinishPlayerStream");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.GetArrivalPartyMemberCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndPartyAPI::GetArrivalPartyMemberCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetArrivalPartyMemberCount");

	Params::EndPartyAPI_GetArrivalPartyMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyLeader
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndPartyAPI::GetPartyLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyLeader");

	Params::EndPartyAPI_GetPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyLeaderName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndPartyAPI::GetPartyLeaderName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyLeaderName");

	Params::EndPartyAPI_GetPartyLeaderName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyLeaderType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndPartyAPI::GetPartyLeaderType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyLeaderType");

	Params::EndPartyAPI_GetPartyLeaderType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyMember
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndPartyAPI::GetPartyMember(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyMember");

	Params::EndPartyAPI_GetPartyMember Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyMemberCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndPartyAPI::GetPartyMemberCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyMemberCount");

	Params::EndPartyAPI_GetPartyMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyMemberCountForPartyStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerStatus                           findPlayerStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndPartyAPI::GetPartyMemberCountForPartyStatus(EPlayerStatus findPlayerStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyMemberCountForPartyStatus");

	Params::EndPartyAPI_GetPartyMemberCountForPartyStatus Parms{};

	Parms.findPlayerStatus = findPlayerStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyMembers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndPartyAPI::GetPartyMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyMembers");

	Params::EndPartyAPI_GetPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPartyMemberType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndPartyAPI::GetPartyMemberType(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPartyMemberType");

	Params::EndPartyAPI_GetPartyMemberType Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndPartyAPI::GetPlayerActor(EEquipmentType equipment, EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerActor");

	Params::EndPartyAPI_GetPlayerActor Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerActorName
// (Final, Native, Static, Public)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndPartyAPI::GetPlayerActorName(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerActorName");

	Params::EndPartyAPI_GetPlayerActorName Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerActorRefreshState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerActorRefreshState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerActorRefreshState UEndPartyAPI::GetPlayerActorRefreshState(EEquipmentType equipment, EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerActorRefreshState");

	Params::EndPartyAPI_GetPlayerActorRefreshState Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndPartyAPI::GetPlayerName(EEquipmentType equipment, EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerName");

	Params::EndPartyAPI_GetPlayerName Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerReturnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndPartyAPI::GetPlayerReturnActor(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerReturnActor");

	Params::EndPartyAPI_GetPlayerReturnActor Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerStatus                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerStatus UEndPartyAPI::GetPlayerStatus(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerStatus");

	Params::EndPartyAPI_GetPlayerStatus Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.GetPlayerToadActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndPartyAPI::GetPlayerToadActor(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "GetPlayerToadActor");

	Params::EndPartyAPI_GetPlayerToadActor Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.InitPartyLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InPlayerTrigger                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::InitPartyLevel(const class UObject* WorldContextObject, class AActor* InPlayerTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "InitPartyLevel");

	Params::EndPartyAPI_InitPartyLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InPlayerTrigger = InPlayerTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.IsCurrentCharaSpecListPreloadFinished
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndPartyAPI::IsCurrentCharaSpecListPreloadFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "IsCurrentCharaSpecListPreloadFinished");

	Params::EndPartyAPI_IsCurrentCharaSpecListPreloadFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.IsFinishPlayerStream
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndPartyAPI::IsFinishPlayerStream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "IsFinishPlayerStream");

	Params::EndPartyAPI_IsFinishPlayerStream Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.IsPlayerActorRefreshState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndPartyAPI::IsPlayerActorRefreshState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "IsPlayerActorRefreshState");

	Params::EndPartyAPI_IsPlayerActorRefreshState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.LoadCache
// (Final, Native, Static, Public, BlueprintCallable)

void UEndPartyAPI::LoadCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "LoadCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.PreloadCurrentCharaSpecList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EPlayerType>                     players                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<EEquipmentType>                  equipments                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndPartyAPI::PreloadCurrentCharaSpecList(const TArray<EPlayerType>& players, const TArray<EEquipmentType>& equipments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "PreloadCurrentCharaSpecList");

	Params::EndPartyAPI_PreloadCurrentCharaSpecList Parms{};

	Parms.players = std::move(players);
	Parms.equipments = std::move(equipments);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.ResetPlayerPosition
// (Final, Native, Static, Public, BlueprintCallable)

void UEndPartyAPI::ResetPlayerPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "ResetPlayerPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.ReturnActorToad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::ReturnActorToad(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "ReturnActorToad");

	Params::EndPartyAPI_ReturnActorToad Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.SetPartyLeader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InLeader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInputTrigered                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::SetPartyLeader(class AActor* InLeader, bool bIsInputTrigered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "SetPartyLeader");

	Params::EndPartyAPI_SetPartyLeader Parms{};

	Parms.InLeader = InLeader;
	Parms.bIsInputTrigered = bIsInputTrigered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.SetPartyLeaderType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             InLeader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInputTrigered                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::SetPartyLeaderType(EPlayerType InLeader, bool bIsInputTrigered, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "SetPartyLeaderType");

	Params::EndPartyAPI_SetPartyLeaderType Parms{};

	Parms.InLeader = InLeader;
	Parms.bIsInputTrigered = bIsInputTrigered;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.SetPlayerActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::SetPlayerActor(EEquipmentType equipment, EPlayerType Type, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "SetPlayerActor");

	Params::EndPartyAPI_SetPlayerActor Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.SetPlayerName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::SetPlayerName(EEquipmentType equipment, EPlayerType Type, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "SetPlayerName");

	Params::EndPartyAPI_SetPlayerName Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;
	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.SetPlayerStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerStatus                           Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPartyAPI::SetPlayerStatus(EPlayerType Type, EPlayerStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "SetPlayerStatus");

	Params::EndPartyAPI_SetPlayerStatus Parms{};

	Parms.Type = Type;
	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.ShouldUsePreloadCharaSpecsForPartyDebug
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndPartyAPI::ShouldUsePreloadCharaSpecsForPartyDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "ShouldUsePreloadCharaSpecsForPartyDebug");

	Params::EndPartyAPI_ShouldUsePreloadCharaSpecsForPartyDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPartyAPI.StartPlayerStream
// (Final, Native, Static, Public, BlueprintCallable)

void UEndPartyAPI::StartPlayerStream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "StartPlayerStream");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.UpdatePreloadCurrentCharaSpecList
// (Final, Native, Static, Public, BlueprintCallable)

void UEndPartyAPI::UpdatePreloadCurrentCharaSpecList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "UpdatePreloadCurrentCharaSpecList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.WaitLoadCache
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndPartyAPI::WaitLoadCache(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "WaitLoadCache");

	Params::EndPartyAPI_WaitLoadCache Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPartyAPI.WaitPlayerStream
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndPartyAPI::WaitPlayerStream(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndPartyAPI", "WaitPlayerStream");

	Params::EndPartyAPI_WaitPlayerStream Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleCameraActor.BindTargetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           OwnerActor_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleCameraActor::BindTargetActor(class AActor* OwnerActor_0, class AActor* TargetActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleCameraActor", "BindTargetActor");

	Params::EndBattleCameraActor_BindTargetActor Parms{};

	Parms.OwnerActor_0 = OwnerActor_0;
	Parms.TargetActor_0 = TargetActor_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMiniGameTopWindow.OnMeasureStatusItemEnemy
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCondorFortMiniGameTopWindow::OnMeasureStatusItemEnemy(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameTopWindow", "OnMeasureStatusItemEnemy");

	Params::EndCondorFortMiniGameTopWindow_OnMeasureStatusItemEnemy Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCondorFortMiniGameTopWindow.OnMeasureStatusItemPlayer
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCondorFortMiniGameTopWindow::OnMeasureStatusItemPlayer(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameTopWindow", "OnMeasureStatusItemPlayer");

	Params::EndCondorFortMiniGameTopWindow_OnMeasureStatusItemPlayer Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.GetCurrentTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndCutAPI::GetCurrentTime(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "GetCurrentTime");

	Params::EndCutAPI_GetCurrentTime Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.GetTimeRange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndCutAPI::GetTimeRange(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "GetTimeRange");

	Params::EndCutAPI_GetTimeRange Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsActorCreated
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsActorCreated(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsActorCreated");

	Params::EndCutAPI_IsActorCreated Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsExistEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsExistEvent(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsExistEvent");

	Params::EndCutAPI_IsExistEvent Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsPlayFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsPlayFinished(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsPlayFinished");

	Params::EndCutAPI_IsPlayFinished Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsPlaying
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsPlaying");

	Params::EndCutAPI_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsPlaying_TypeSpecify
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    EV                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LV                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    MV                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    fv                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsPlaying_TypeSpecify(const bool EV, const bool LV, const bool MV, const bool fv)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsPlaying_TypeSpecify");

	Params::EndCutAPI_IsPlaying_TypeSpecify Parms{};

	Parms.EV = EV;
	Parms.LV = LV;
	Parms.MV = MV;
	Parms.fv = fv;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsPlayReady
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsPlayReady(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsPlayReady");

	Params::EndCutAPI_IsPlayReady Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsSkipCinema
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsSkipCinema()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsSkipCinema");

	Params::EndCutAPI_IsSkipCinema Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsSkipCinemaAtThisFrame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsSkipCinemaAtThisFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsSkipCinemaAtThisFrame");

	Params::EndCutAPI_IsSkipCinemaAtThisFrame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsStable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsStable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsStable");

	Params::EndCutAPI_IsStable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.IsValidSelectWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::IsValidSelectWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "IsValidSelectWidget");

	Params::EndCutAPI_IsValidSelectWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.LoadSequenceAssets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCutAPI::LoadSequenceAssets(class FName LevelName, int32 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "LoadSequenceAssets");

	Params::EndCutAPI_LoadSequenceAssets Parms{};

	Parms.LevelName = LevelName;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCutAPI.PlayCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OnPlayTriggerName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopSkip                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::PlayCutScene(class FName LevelName, class FName OnPlayTriggerName, bool bStopSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "PlayCutScene");

	Params::EndCutAPI_PlayCutScene Parms{};

	Parms.LevelName = LevelName;
	Parms.OnPlayTriggerName = OnPlayTriggerName;
	Parms.bStopSkip = bStopSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.ReadyCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCutAPI::ReadyCutScene(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "ReadyCutScene");

	Params::EndCutAPI_ReadyCutScene Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCutAPI.RequestPlayCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCutAPI::RequestPlayCutScene(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "RequestPlayCutScene");

	Params::EndCutAPI_RequestPlayCutScene Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCutAPI.SetCurrentTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCutAPI::SetCurrentTime(class FName LevelName, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "SetCurrentTime");

	Params::EndCutAPI_SetCurrentTime Parms{};

	Parms.LevelName = LevelName;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCutAPI.SkipCinema
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCutAPI::SkipCinema(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "SkipCinema");

	Params::EndCutAPI_SkipCinema Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCutAPI.UnloadSequenceAssets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCutAPI::UnloadSequenceAssets(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCutAPI", "UnloadSequenceAssets");

	Params::EndCutAPI_UnloadSequenceAssets Parms{};

	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.NumberBranch.NumberBranch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InNumA                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNumB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNumberBranch*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNumberBranch* UNumberBranch::NumberBranch(int32 InNumA, int32 InNumB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NumberBranch", "NumberBranch");

	Params::NumberBranch_NumberBranch Parms{};

	Parms.InNumA = InNumA;
	Parms.InNumB = InNumB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCameraComponent.SetFocalLength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCameraComponent::SetFocalLength(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCameraComponent", "SetFocalLength");

	Params::EndCameraComponent_SetFocalLength Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCameraComponent.SetFocusDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCameraComponent::SetFocusDistance(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCameraComponent", "SetFocusDistance");

	Params::EndCameraComponent_SetFocusDistance Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCameraComponent.SetHorizontalAperture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCameraComponent::SetHorizontalAperture(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCameraComponent", "SetHorizontalAperture");

	Params::EndCameraComponent_SetHorizontalAperture Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCameraComponent.SetRoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCameraComponent::SetRoll(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCameraComponent", "SetRoll");

	Params::EndCameraComponent_SetRoll Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.RangeSwitch3.RangeSwitch3
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ContainEqual                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FirstOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class URangeSwitch3*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URangeSwitch3* URangeSwitch3::RangeSwitch3(float Value, float Min1, float Max1, float Min2, float Max2, float Min3, float Max3, bool ContainEqual, bool FirstOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RangeSwitch3", "RangeSwitch3");

	Params::RangeSwitch3_RangeSwitch3 Parms{};

	Parms.Value = Value;
	Parms.Min1 = Min1;
	Parms.Max1 = Max1;
	Parms.Min2 = Min2;
	Parms.Max2 = Max2;
	Parms.Min3 = Min3;
	Parms.Max3 = Max3;
	Parms.ContainEqual = ContainEqual;
	Parms.FirstOnly = FirstOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0000Controller.IsGSFly
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0000Controller::IsGSFly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "IsGSFly");

	Params::EndBattleAIEB0000Controller_IsGSFly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0000Controller.IsOnFloor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0000Controller::IsOnFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "IsOnFloor");

	Params::EndBattleAIEB0000Controller_IsOnFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0000Controller.IsOnWall
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0000Controller::IsOnWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "IsOnWall");

	Params::EndBattleAIEB0000Controller_IsOnWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0000Controller.IsTurnJump
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0000Controller::IsTurnJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "IsTurnJump");

	Params::EndBattleAIEB0000Controller_IsTurnJump Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0000Controller.OnTurnJumpBegin
// (Event, Public, BlueprintEvent)

void AEndBattleAIEB0000Controller::OnTurnJumpBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "OnTurnJumpBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0000Controller.OnTurnJumpEnd
// (Event, Public, BlueprintEvent)

void AEndBattleAIEB0000Controller::OnTurnJumpEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "OnTurnJumpEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAIEB0000Controller.ReleaseWallJump
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0000Controller::ReleaseWallJump(int32 InID, float InTime, float InBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "ReleaseWallJump");

	Params::EndBattleAIEB0000Controller_ReleaseWallJump Parms{};

	Parms.InID = InID;
	Parms.InTime = InTime;
	Parms.InBias = InBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0000Controller.RequestWallJump
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0000Controller::RequestWallJump(int32 InID, float InTime, float InBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "RequestWallJump");

	Params::EndBattleAIEB0000Controller_RequestWallJump Parms{};

	Parms.InID = InID;
	Parms.InTime = InTime;
	Parms.InBias = InBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0000Controller.SetForceJumpEnd
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0000Controller::SetForceJumpEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0000Controller", "SetForceJumpEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002Controller.OnDetachArm
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EEndBattleCharaAttachCharacterType      armType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0002Controller::OnDetachArm(EEndBattleCharaAttachCharacterType armType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002Controller", "OnDetachArm");

	Params::EndBattleAIEB0002Controller_OnDetachArm Parms{};

	Parms.armType = armType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002Controller.OnDetachArms
// (Final, Native, Private, BlueprintCallable)

void AEndBattleAIEB0002Controller::OnDetachArms()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002Controller", "OnDetachArms");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0002Controller.OnRemoveStatusChangeStopToChildCharacter
// (Final, Native, Private, BlueprintCallable)

void AEndBattleAIEB0002Controller::OnRemoveStatusChangeStopToChildCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0002Controller", "OnRemoveStatusChangeStopToChildCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003MineController.IsPlayerInConfirmSpark
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0003MineController::IsPlayerInConfirmSpark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "IsPlayerInConfirmSpark");

	Params::EndBattleAIEB0003MineController_IsPlayerInConfirmSpark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0003MineController.IsRolling
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0003MineController::IsRolling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "IsRolling");

	Params::EndBattleAIEB0003MineController_IsRolling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0003MineController.OnCheckFollow
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    OutBattleArea                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NotOwnerTrace                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NotUcpcTrace                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003MineController::OnCheckFollow(bool OutBattleArea, bool NotOwnerTrace, bool NotUcpcTrace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "OnCheckFollow");

	Params::EndBattleAIEB0003MineController_OnCheckFollow Parms{};

	Parms.OutBattleArea = OutBattleArea;
	Parms.NotOwnerTrace = NotOwnerTrace;
	Parms.NotUcpcTrace = NotUcpcTrace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0003MineController.OnReadySpark
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   sparkID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003MineController::OnReadySpark(int32 sparkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "OnReadySpark");

	Params::EndBattleAIEB0003MineController_OnReadySpark Parms{};

	Parms.sparkID = sparkID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0003MineController.ReadySpark
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   sparkID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003MineController::ReadySpark(int32 sparkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "ReadySpark");

	Params::EndBattleAIEB0003MineController_ReadySpark Parms{};

	Parms.sparkID = sparkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003MineController.SetFollow
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    InFollow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003MineController::SetFollow(bool InFollow, const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "SetFollow");

	Params::EndBattleAIEB0003MineController_SetFollow Parms{};

	Parms.InFollow = InFollow;
	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0003MineController.SetOverrideFollowTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0003MineController::SetOverrideFollowTarget(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0003MineController", "SetOverrideFollowTarget");

	Params::EndBattleAIEB0003MineController_SetOverrideFollowTarget Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetAlignment
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InAlignment                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetAlignment(const struct FVector2D& InAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetAlignment");

	Params::EndCanvasPanelSlot_SetAlignment Parms{};

	Parms.InAlignment = std::move(InAlignment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetAnchors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAnchors                         InAnchors                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetAnchors(const struct FAnchors& InAnchors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetAnchors");

	Params::EndCanvasPanelSlot_SetAnchors Parms{};

	Parms.InAnchors = std::move(InAnchors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetAutoSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InbAutoSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetAutoSize(bool InbAutoSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetAutoSize");

	Params::EndCanvasPanelSlot_SetAutoSize Parms{};

	Parms.InbAutoSize = InbAutoSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetLayout
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAnchorData                      InLayoutData                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetLayout(const struct FAnchorData& InLayoutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetLayout");

	Params::EndCanvasPanelSlot_SetLayout Parms{};

	Parms.InLayoutData = std::move(InLayoutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetMaximum
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        InMaximumAnchors                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetMaximum(const struct FVector2D& InMaximumAnchors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetMaximum");

	Params::EndCanvasPanelSlot_SetMaximum Parms{};

	Parms.InMaximumAnchors = std::move(InMaximumAnchors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetMinimum
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        InMinimumAnchors                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetMinimum(const struct FVector2D& InMinimumAnchors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetMinimum");

	Params::EndCanvasPanelSlot_SetMinimum Parms{};

	Parms.InMinimumAnchors = std::move(InMinimumAnchors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetOffsets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InOffset                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetOffsets(const struct FMargin& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetOffsets");

	Params::EndCanvasPanelSlot_SetOffsets Parms{};

	Parms.InOffset = std::move(InOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InPosition                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetPosition(const struct FVector2D& InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetPosition");

	Params::EndCanvasPanelSlot_SetPosition Parms{};

	Parms.InPosition = std::move(InPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InSize                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetSize(const struct FVector2D& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetSize");

	Params::EndCanvasPanelSlot_SetSize Parms{};

	Parms.InSize = std::move(InSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetXAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InYAngle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetXAngle(float InYAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetXAngle");

	Params::EndCanvasPanelSlot_SetXAngle Parms{};

	Parms.InYAngle = InYAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetYAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InYAngle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetYAngle(float InYAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetYAngle");

	Params::EndCanvasPanelSlot_SetYAngle Parms{};

	Parms.InYAngle = InYAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.SetZOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InZOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanelSlot::SetZOrder(int32 InZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "SetZOrder");

	Params::EndCanvasPanelSlot_SetZOrder Parms{};

	Parms.InZOrder = InZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanelSlot.GetAlignment
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCanvasPanelSlot::GetAlignment() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetAlignment");

	Params::EndCanvasPanelSlot_GetAlignment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetAnchors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnchors                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAnchors UEndCanvasPanelSlot::GetAnchors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetAnchors");

	Params::EndCanvasPanelSlot_GetAnchors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetAutoSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndCanvasPanelSlot::GetAutoSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetAutoSize");

	Params::EndCanvasPanelSlot_GetAutoSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetLayout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAnchorData                      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAnchorData UEndCanvasPanelSlot::GetLayout() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetLayout");

	Params::EndCanvasPanelSlot_GetLayout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetOffsets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMargin                          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMargin UEndCanvasPanelSlot::GetOffsets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetOffsets");

	Params::EndCanvasPanelSlot_GetOffsets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCanvasPanelSlot::GetPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetPosition");

	Params::EndCanvasPanelSlot_GetPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCanvasPanelSlot::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetSize");

	Params::EndCanvasPanelSlot_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetXAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndCanvasPanelSlot::GetXAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetXAngle");

	Params::EndCanvasPanelSlot_GetXAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetYAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndCanvasPanelSlot::GetYAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetYAngle");

	Params::EndCanvasPanelSlot_GetYAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanelSlot.GetZOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndCanvasPanelSlot::GetZOrder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanelSlot", "GetZOrder");

	Params::EndCanvasPanelSlot_GetZOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0006Controller.IsHHFly
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0006Controller::IsHHFly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "IsHHFly");

	Params::EndBattleAIEB0006Controller_IsHHFly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0006Controller.IsOnFloor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0006Controller::IsOnFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "IsOnFloor");

	Params::EndBattleAIEB0006Controller_IsOnFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0006Controller.IsOnWall
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0006Controller::IsOnWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "IsOnWall");

	Params::EndBattleAIEB0006Controller_IsOnWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0006Controller.ReleaseWallJump
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0006Controller::ReleaseWallJump(int32 InID, float InTime, float InBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "ReleaseWallJump");

	Params::EndBattleAIEB0006Controller_ReleaseWallJump Parms{};

	Parms.InID = InID;
	Parms.InTime = InTime;
	Parms.InBias = InBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0006Controller.RequestTurnJump
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Target                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0006Controller::RequestTurnJump(const struct FVector& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "RequestTurnJump");

	Params::EndBattleAIEB0006Controller_RequestTurnJump Parms{};

	Parms.Target = std::move(Target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0006Controller.RequestWallJump
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0006Controller::RequestWallJump(int32 InID, float InTime, float InBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "RequestWallJump");

	Params::EndBattleAIEB0006Controller_RequestWallJump Parms{};

	Parms.InID = InID;
	Parms.InTime = InTime;
	Parms.InBias = InBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0006Controller.SetForceJumpEnd
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAIEB0006Controller::SetForceJumpEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0006Controller", "SetForceJumpEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0009Controller.AddDisableRangePartsBarrier
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   baseAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   rangeAngle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0009Controller::AddDisableRangePartsBarrier(float baseAngle, float rangeAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0009Controller", "AddDisableRangePartsBarrier");

	Params::EndBattleAIEB0009Controller_AddDisableRangePartsBarrier Parms{};

	Parms.baseAngle = baseAngle;
	Parms.rangeAngle = rangeAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0011Controller.RequestReserveActionRush
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0011Controller::RequestReserveActionRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0011Controller", "RequestReserveActionRush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0011Controller.SuspendReserveActionRush
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0011Controller::SuspendReserveActionRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0011Controller", "SuspendReserveActionRush");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.ChangeGunMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERufusGunMode                           gunMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::ChangeGunMode(ERufusGunMode gunMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "ChangeGunMode");

	Params::EndBattleAIEB0016Controller_ChangeGunMode Parms{};

	Parms.gunMode = gunMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.CheckGunMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERufusGunMode                           gunMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0016Controller::CheckGunMode(ERufusGunMode gunMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "CheckGunMode");

	Params::EndBattleAIEB0016Controller_CheckGunMode Parms{};

	Parms.gunMode = gunMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0016Controller.CheckLinkMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERufusLinkMode                          linkMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0016Controller::CheckLinkMode(ERufusLinkMode linkMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "CheckLinkMode");

	Params::EndBattleAIEB0016Controller_CheckLinkMode Parms{};

	Parms.linkMode = linkMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0016Controller.GetBulletCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AEndBattleAIEB0016Controller::GetBulletCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "GetBulletCount");

	Params::EndBattleAIEB0016Controller_GetBulletCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0016Controller.GetGotoPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERufusGoToPositionType                  positionType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERufusGoToDistanceType                  DistanceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   dirYaw                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIEB0016Controller::GetGotoPosition(EPlayerType PlayerType, ERufusGoToPositionType positionType, ERufusGoToDistanceType DistanceType, float dirYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "GetGotoPosition");

	Params::EndBattleAIEB0016Controller_GetGotoPosition Parms{};

	Parms.PlayerType = PlayerType;
	Parms.positionType = positionType;
	Parms.DistanceType = DistanceType;
	Parms.dirYaw = dirYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0016Controller.OnEventFastDash
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::OnEventFastDash(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "OnEventFastDash");

	Params::EndBattleAIEB0016Controller_OnEventFastDash Parms{};

	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0016Controller.RegisterFastDash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             startAnimation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LoopAnimation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             endAnimation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   vailableDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameCompleted                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameSuspended                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameTimeOver                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameHitWall                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameMissing                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameArrival                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameNear                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::RegisterFastDash(class FName keyword, class FName startAnimation, class FName LoopAnimation, class FName endAnimation, float vailableDistance, class FName eventNameCompleted, class FName eventNameSuspended, class FName eventNameTimeOver, class FName eventNameHitWall, class FName eventNameMissing, class FName eventNameArrival, class FName eventNameNear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "RegisterFastDash");

	Params::EndBattleAIEB0016Controller_RegisterFastDash Parms{};

	Parms.keyword = keyword;
	Parms.startAnimation = startAnimation;
	Parms.LoopAnimation = LoopAnimation;
	Parms.endAnimation = endAnimation;
	Parms.vailableDistance = vailableDistance;
	Parms.eventNameCompleted = eventNameCompleted;
	Parms.eventNameSuspended = eventNameSuspended;
	Parms.eventNameTimeOver = eventNameTimeOver;
	Parms.eventNameHitWall = eventNameHitWall;
	Parms.eventNameMissing = eventNameMissing;
	Parms.eventNameArrival = eventNameArrival;
	Parms.eventNameNear = eventNameNear;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.RegisterFastDashEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             effectFastDashMove                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::RegisterFastDashEffect(class FName CharaSpecName, class FName effectFastDashMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "RegisterFastDashEffect");

	Params::EndBattleAIEB0016Controller_RegisterFastDashEffect Parms{};

	Parms.CharaSpecName = CharaSpecName;
	Parms.effectFastDashMove = effectFastDashMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.RegisterGotoPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Distance                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::RegisterGotoPosition(const struct FVector& Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "RegisterGotoPosition");

	Params::EndBattleAIEB0016Controller_RegisterGotoPosition Parms{};

	Parms.Distance = std::move(Distance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.ReloadBullet
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0016Controller::ReloadBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "ReloadBullet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.RequestReserveActionFastDash
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          goalPosition                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FastMoveSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   missingDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   marginDistance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   limitTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   moveFriction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    useStartFrontRotate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    useDeceleration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    updateGoalPosition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    drawTargetPoint                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0016Controller::RequestReserveActionFastDash(class FName keyword, const struct FVector& goalPosition, float FastMoveSpeed, float missingDistance, float marginDistance, float limitTime, float moveFriction, bool useStartFrontRotate, bool useDeceleration, bool updateGoalPosition, bool drawTargetPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "RequestReserveActionFastDash");

	Params::EndBattleAIEB0016Controller_RequestReserveActionFastDash Parms{};

	Parms.keyword = keyword;
	Parms.goalPosition = std::move(goalPosition);
	Parms.FastMoveSpeed = FastMoveSpeed;
	Parms.missingDistance = missingDistance;
	Parms.marginDistance = marginDistance;
	Parms.limitTime = limitTime;
	Parms.moveFriction = moveFriction;
	Parms.useStartFrontRotate = useStartFrontRotate;
	Parms.useDeceleration = useDeceleration;
	Parms.updateGoalPosition = updateGoalPosition;
	Parms.drawTargetPoint = drawTargetPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0016Controller.SetLinkMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERufusLinkMode                          linkMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::SetLinkMode(ERufusLinkMode linkMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "SetLinkMode");

	Params::EndBattleAIEB0016Controller_SetLinkMode Parms{};

	Parms.linkMode = linkMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.SetupBullet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0016Controller::SetupBullet(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "SetupBullet");

	Params::EndBattleAIEB0016Controller_SetupBullet Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0016Controller.UsedBullet
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEB0016Controller::UsedBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0016Controller", "UsedBullet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0020Controller.OnEasySpawnEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             keywordName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0020Controller::OnEasySpawnEvent(class FName keywordName, class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0020Controller", "OnEasySpawnEvent");

	Params::EndBattleAIEB0020Controller_OnEasySpawnEvent Parms{};

	Parms.keywordName = keywordName;
	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0020Controller.RequestBreakParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             brokenAnimationName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    syncPlayMotion                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0020Controller::RequestBreakParts(class FName keyword, class FName brokenAnimationName, bool syncPlayMotion, float BlendInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0020Controller", "RequestBreakParts");

	Params::EndBattleAIEB0020Controller_RequestBreakParts Parms{};

	Parms.keyword = keyword;
	Parms.brokenAnimationName = brokenAnimationName;
	Parms.syncPlayMotion = syncPlayMotion;
	Parms.BlendInTime = BlendInTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0020Controller.RequestPraecoTurn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0020Controller::RequestPraecoTurn(float InYaw, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0020Controller", "RequestPraecoTurn");

	Params::EndBattleAIEB0020Controller_RequestPraecoTurn Parms{};

	Parms.InYaw = InYaw;
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0020Controller.RequestPraecoTurnToPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0020Controller::RequestPraecoTurnToPoint(const struct FVector& InLocation, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0020Controller", "RequestPraecoTurnToPoint");

	Params::EndBattleAIEB0020Controller_RequestPraecoTurnToPoint Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0020Controller.RequestSpawnParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    spawnedInvisible                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    updateSpawn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   respawnTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0020Controller::RequestSpawnParts(class FName keyword, class FName CharaSpecName, bool spawnedInvisible, bool updateSpawn, float respawnTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0020Controller", "RequestSpawnParts");

	Params::EndBattleAIEB0020Controller_RequestSpawnParts Parms{};

	Parms.keyword = keyword;
	Parms.CharaSpecName = CharaSpecName;
	Parms.spawnedInvisible = spawnedInvisible;
	Parms.updateSpawn = updateSpawn;
	Parms.respawnTime = respawnTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0029Controller.GetGotoPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPraecoMiniGoToPositionType             positionType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPraecoMiniGoToDistanceType             DistanceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   dirYaw                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPraecoMiniGoToMode                     gotoMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AEndBattleAIEB0029Controller::GetGotoPosition(EPlayerType PlayerType, EPraecoMiniGoToPositionType positionType, EPraecoMiniGoToDistanceType DistanceType, float dirYaw, EPraecoMiniGoToMode gotoMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "GetGotoPosition");

	Params::EndBattleAIEB0029Controller_GetGotoPosition Parms{};

	Parms.PlayerType = PlayerType;
	Parms.positionType = positionType;
	Parms.DistanceType = DistanceType;
	Parms.dirYaw = dirYaw;
	Parms.gotoMode = gotoMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0029Controller.OnCompleteTransAttach
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0029Controller::OnCompleteTransAttach(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "OnCompleteTransAttach");

	Params::EndBattleAIEB0029Controller_OnCompleteTransAttach Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0029Controller.OnEventFastDash
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0029Controller::OnEventFastDash(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "OnEventFastDash");

	Params::EndBattleAIEB0029Controller_OnEventFastDash Parms{};

	Parms.EventName = EventName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAIEB0029Controller.RegisterFastDash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             startAnimation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LoopAnimation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             endAnimation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   vailableDistance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameCompleted                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameSuspended                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameTimeOver                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameHitWall                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameMissing                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameArrival                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             eventNameNear                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0029Controller::RegisterFastDash(class FName keyword, class FName startAnimation, class FName LoopAnimation, class FName endAnimation, float vailableDistance, class FName eventNameCompleted, class FName eventNameSuspended, class FName eventNameTimeOver, class FName eventNameHitWall, class FName eventNameMissing, class FName eventNameArrival, class FName eventNameNear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "RegisterFastDash");

	Params::EndBattleAIEB0029Controller_RegisterFastDash Parms{};

	Parms.keyword = keyword;
	Parms.startAnimation = startAnimation;
	Parms.LoopAnimation = LoopAnimation;
	Parms.endAnimation = endAnimation;
	Parms.vailableDistance = vailableDistance;
	Parms.eventNameCompleted = eventNameCompleted;
	Parms.eventNameSuspended = eventNameSuspended;
	Parms.eventNameTimeOver = eventNameTimeOver;
	Parms.eventNameHitWall = eventNameHitWall;
	Parms.eventNameMissing = eventNameMissing;
	Parms.eventNameArrival = eventNameArrival;
	Parms.eventNameNear = eventNameNear;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0029Controller.RegisterFastDashEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CharaSpecName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             effectFastDashMove                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0029Controller::RegisterFastDashEffect(class FName CharaSpecName, class FName effectFastDashMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "RegisterFastDashEffect");

	Params::EndBattleAIEB0029Controller_RegisterFastDashEffect Parms{};

	Parms.CharaSpecName = CharaSpecName;
	Parms.effectFastDashMove = effectFastDashMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0029Controller.RegisterGotoPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Distance                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB0029Controller::RegisterGotoPosition(const struct FVector& Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "RegisterGotoPosition");

	Params::EndBattleAIEB0029Controller_RegisterGotoPosition Parms{};

	Parms.Distance = std::move(Distance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB0029Controller.RequestReserveActionFastDash
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             keyword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          goalPosition                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FastMoveSpeed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   missingDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   marginDistance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   limitTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   moveFriction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    useStartFrontRotate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    useDeceleration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    updateGoalPosition                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    drawTargetPoint                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0029Controller::RequestReserveActionFastDash(class FName keyword, const struct FVector& goalPosition, float FastMoveSpeed, float missingDistance, float marginDistance, float limitTime, float moveFriction, bool useStartFrontRotate, bool useDeceleration, bool updateGoalPosition, bool drawTargetPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "RequestReserveActionFastDash");

	Params::EndBattleAIEB0029Controller_RequestReserveActionFastDash Parms{};

	Parms.keyword = keyword;
	Parms.goalPosition = std::move(goalPosition);
	Parms.FastMoveSpeed = FastMoveSpeed;
	Parms.missingDistance = missingDistance;
	Parms.marginDistance = marginDistance;
	Parms.limitTime = limitTime;
	Parms.moveFriction = moveFriction;
	Parms.useStartFrontRotate = useStartFrontRotate;
	Parms.useDeceleration = useDeceleration;
	Parms.updateGoalPosition = updateGoalPosition;
	Parms.drawTargetPoint = drawTargetPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB0029Controller.RequestReserveActionTransAttach
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InTargetTransform                                      (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEB0029Controller::RequestReserveActionTransAttach(class FName InSocket, const struct FTransform& InTargetTransform, float InDuration, class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB0029Controller", "RequestReserveActionTransAttach");

	Params::EndBattleAIEB0029Controller_RequestReserveActionTransAttach Parms{};

	Parms.InSocket = InSocket;
	Parms.InTargetTransform = std::move(InTargetTransform);
	Parms.InDuration = InDuration;
	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIEB1000Controller.ActivateCameraFlavorCustomizableFieldAction
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FName                             DatatableName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEB1000Controller::ActivateCameraFlavorCustomizableFieldAction(class FName DatatableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1000Controller", "ActivateCameraFlavorCustomizableFieldAction");

	Params::EndBattleAIEB1000Controller_ActivateCameraFlavorCustomizableFieldAction Parms{};

	Parms.DatatableName = DatatableName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEB1000Controller.DeactivateCameraFlavorCustomizableFieldAction
// (Final, Native, Private, BlueprintCallable)

void AEndBattleAIEB1000Controller::DeactivateCameraFlavorCustomizableFieldAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEB1000Controller", "DeactivateCameraFlavorCustomizableFieldAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN0007Controller.ReleaseBattleFieldByEN0007
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAIEN0007Controller::ReleaseBattleFieldByEN0007()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN0007Controller", "ReleaseBattleFieldByEN0007");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN0007Controller.RestrictBattleFieldByEN0007
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ExclusionID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAIEN0007Controller::RestrictBattleFieldByEN0007(class FName ExclusionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN0007Controller", "RestrictBattleFieldByEN0007");

	Params::EndBattleAIEN0007Controller_RestrictBattleFieldByEN0007 Parms{};

	Parms.ExclusionID = ExclusionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIEN2002_02Controller.GetJumpNavVolume
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FVector>                  InPoints                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           InBattleScene                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAIEN2002_02Controller::GetJumpNavVolume(const TArray<struct FVector>& InPoints, const class FString& InBattleScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIEN2002_02Controller", "GetJumpNavVolume");

	Params::EndBattleAIEN2002_02Controller_GetJumpNavVolume Parms{};

	Parms.InPoints = std::move(InPoints);
	Parms.InBattleScene = std::move(InBattleScene);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAIOverlapComponent.AddVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndNavModifierVolume*            InVolume                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAIOverlapComponent::AddVolume(class AEndNavModifierVolume* InVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIOverlapComponent", "AddVolume");

	Params::EndBattleAIOverlapComponent_AddVolume Parms{};

	Parms.InVolume = InVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIOverlapComponent.ResetVolume
// (Final, Native, Public, BlueprintCallable)

void UEndBattleAIOverlapComponent::ResetVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIOverlapComponent", "ResetVolume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAIOverlapComponent.SubVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndNavModifierVolume*            InVolume                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAIOverlapComponent::SubVolume(class AEndNavModifierVolume* InVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAIOverlapComponent", "SubVolume");

	Params::EndBattleAIOverlapComponent_SubVolume Parms{};

	Parms.InVolume = InVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.ChangeAerithState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGuestAerithState                       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISlu5bAerithController::ChangeAerithState(EGuestAerithState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "ChangeAerithState");

	Params::EndBattleAISlu5bAerithController_ChangeAerithState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.CheckBattleField
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISlu5bAerithController::CheckBattleField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "CheckBattleField");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.CheckEncouragment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Probability                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISlu5bAerithController::CheckEncouragment(float Probability, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "CheckEncouragment");

	Params::EndBattleAISlu5bAerithController_CheckEncouragment Parms{};

	Parms.Probability = Probability;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.CheckGarden
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISlu5bAerithController::CheckGarden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "CheckGarden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.CheckSelf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SafeDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISlu5bAerithController::CheckSelf(float SafeDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "CheckSelf");

	Params::EndBattleAISlu5bAerithController_CheckSelf Parms{};

	Parms.SafeDistance = SafeDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.DrawDebugCurrnetState
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISlu5bAerithController::DrawDebugCurrnetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "DrawDebugCurrnetState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.GetCurrnetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGuestAerithState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGuestAerithState AEndBattleAISlu5bAerithController::GetCurrnetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "GetCurrnetState");

	Params::EndBattleAISlu5bAerithController_GetCurrnetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISlu5bAerithController.LookAtOff
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISlu5bAerithController::LookAtOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "LookAtOff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.LookAtOn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    LookTarget                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISlu5bAerithController::LookAtOn(class AEndCharacter* LookTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "LookAtOn");

	Params::EndBattleAISlu5bAerithController_LookAtOn Parms{};

	Parms.LookTarget = LookTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISlu5bAerithController.OnUpdateGuestAerith
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISlu5bAerithController::OnUpdateGuestAerith(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISlu5bAerithController", "OnUpdateGuestAerith");

	Params::EndBattleAISlu5bAerithController_OnUpdateGuestAerith Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0000BaseController.RequestShoutAttack
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISU0000BaseController::RequestShoutAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0000BaseController", "RequestShoutAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0001BaseController.SetMoogleBombHidden
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0001BaseController::SetMoogleBombHidden(bool IsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0001BaseController", "SetMoogleBombHidden");

	Params::EndBattleAISU0001BaseController_SetMoogleBombHidden Parms{};

	Parms.IsHidden = IsHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0001BaseController.SetTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0001BaseController::SetTarget(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0001BaseController", "SetTarget");

	Params::EndBattleAISU0001BaseController_SetTarget Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuViewport.SetViewLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuViewport::SetViewLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuViewport", "SetViewLocation");

	Params::EndMenuViewport_SetViewLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuViewport.SetViewRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndMenuViewport::SetViewRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuViewport", "SetViewRotation");

	Params::EndMenuViewport_SetViewRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuViewport.Spawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndMenuViewport::Spawn(TSubclassOf<class AActor> ActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuViewport", "Spawn");

	Params::EndMenuViewport_Spawn Parms{};

	Parms.ActorClass = ActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuViewport.GetViewLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndMenuViewport::GetViewLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuViewport", "GetViewLocation");

	Params::EndMenuViewport_GetViewLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuViewport.GetViewportWorld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UEndMenuViewport::GetViewportWorld() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuViewport", "GetViewportWorld");

	Params::EndMenuViewport_GetViewportWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuViewport.GetViewRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UEndMenuViewport::GetViewRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuViewport", "GetViewRotation");

	Params::EndMenuViewport_GetViewRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISU0002Controller.DisableEndShivaMove
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAISU0002Controller::DisableEndShivaMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "DisableEndShivaMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0002Controller.OnEndShivaMoveStart
// (Event, Protected, BlueprintEvent)

void AEndBattleAISU0002Controller::OnEndShivaMoveStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "OnEndShivaMoveStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EndGame.EndBattleAISU0002Controller.OnIfritRoar
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             IDamageSourceID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0002Controller::OnIfritRoar(class FName IDamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "OnIfritRoar");

	Params::EndBattleAISU0002Controller_OnIfritRoar Parms{};

	Parms.IDamageSourceID = IDamageSourceID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAISU0002Controller.OnRequestShivaMove
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InMoveCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContactWall                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0002Controller::OnRequestShivaMove(int32 InMoveCount, bool InContactWall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "OnRequestShivaMove");

	Params::EndBattleAISU0002Controller_OnRequestShivaMove Parms{};

	Parms.InMoveCount = InMoveCount;
	Parms.InContactWall = InContactWall;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAISU0002Controller.SetNextShivaMove
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAISU0002Controller::SetNextShivaMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "SetNextShivaMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0002Controller.SetNextShivaMoveLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU0002Controller::SetNextShivaMoveLocation(const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "SetNextShivaMoveLocation");

	Params::EndBattleAISU0002Controller_SetNextShivaMoveLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0002Controller.StartIfritRoar
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAISU0002Controller::StartIfritRoar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0002Controller", "StartIfritRoar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0004BaseController.IsInFlyModeBattleScene
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAISU0004BaseController::IsInFlyModeBattleScene() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0004BaseController", "IsInFlyModeBattleScene");

	Params::EndBattleAISU0004BaseController_IsInFlyModeBattleScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.CallBackOnLoadLocationData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataTableAPI::CallBackOnLoadLocationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "CallBackOnLoadLocationData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataTableAPI.CallBackOnLoadResidentData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataTableAPI::CallBackOnLoadResidentData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "CallBackOnLoadResidentData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataTableAPI.ClearDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDataTableDebugFlag                  Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataTableAPI::ClearDebugFlag(EEndDataTableDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "ClearDebugFlag");

	Params::EndDataTableAPI_ClearDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataTableAPI.DebugReimportDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           residentOrLocation                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataTableAPI::DebugReimportDataTable(const class FString& residentOrLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "DebugReimportDataTable");

	Params::EndDataTableAPI_DebugReimportDataTable Parms{};

	Parms.residentOrLocation = std::move(residentOrLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataTableAPI.GetActorNameMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<EPlayerType, class FName>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TMap<EPlayerType, class FName> UEndDataTableAPI::GetActorNameMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetActorNameMap");

	Params::EndDataTableAPI_GetActorNameMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetEquipmentTypeList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EEquipmentType>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EEquipmentType> UEndDataTableAPI::GetEquipmentTypeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetEquipmentTypeList");

	Params::EndDataTableAPI_GetEquipmentTypeList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetFieldTestLocationNameDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetFieldTestLocationNameDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetFieldTestLocationNameDetails");

	Params::EndDataTableAPI_GetFieldTestLocationNameDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetLocationDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetLocationDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetLocationDetails");

	Params::EndDataTableAPI_GetLocationDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetLocationNameDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetLocationNameDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetLocationNameDetails");

	Params::EndDataTableAPI_GetLocationNameDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetLocationNames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetLocationNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetLocationNames");

	Params::EndDataTableAPI_GetLocationNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetLocationPresetList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndDataTableAPI::GetLocationPresetList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetLocationPresetList");

	Params::EndDataTableAPI_GetLocationPresetList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetLocationSlotList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetLocationSlotList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetLocationSlotList");

	Params::EndDataTableAPI_GetLocationSlotList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetResidentParameterFloatBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndDataTableAPI::GetResidentParameterFloatBP(const class FName ID, float DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetResidentParameterFloatBP");

	Params::EndDataTableAPI_GetResidentParameterFloatBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetResidentParameterIntegerBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataTableAPI::GetResidentParameterIntegerBP(const class FName ID, int32 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetResidentParameterIntegerBP");

	Params::EndDataTableAPI_GetResidentParameterIntegerBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetResidentParameterNameBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataTableAPI::GetResidentParameterNameBP(const class FName ID, class FName DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetResidentParameterNameBP");

	Params::EndDataTableAPI_GetResidentParameterNameBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetResidentParameterStringBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultValue                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndDataTableAPI::GetResidentParameterStringBP(const class FName ID, const class FString& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetResidentParameterStringBP");

	Params::EndDataTableAPI_GetResidentParameterStringBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = std::move(DefaultValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetTestCutSceneEnviSetNameList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   CutSceneNames                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetTestCutSceneEnviSetNameList(const TArray<class FString>& CutSceneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetTestCutSceneEnviSetNameList");

	Params::EndDataTableAPI_GetTestCutSceneEnviSetNameList Parms{};

	Parms.CutSceneNames = std::move(CutSceneNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetTestCutSceneNameList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataTableAPI::GetTestCutSceneNameList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetTestCutSceneNameList");

	Params::EndDataTableAPI_GetTestCutSceneNameList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetTestPlayModeSettingDataName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TableID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataTableAPI::GetTestPlayModeSettingDataName(const class FName& TableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetTestPlayModeSettingDataName");

	Params::EndDataTableAPI_GetTestPlayModeSettingDataName Parms{};

	Parms.TableID = TableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetTestPlayModeSettingDataTableIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndDataTableAPI::GetTestPlayModeSettingDataTableIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetTestPlayModeSettingDataTableIds");

	Params::EndDataTableAPI_GetTestPlayModeSettingDataTableIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetTestPlayModeTitleLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TableID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataTableAPI::GetTestPlayModeTitleLocation(const class FName& TableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetTestPlayModeTitleLocation");

	Params::EndDataTableAPI_GetTestPlayModeTitleLocation Parms{};

	Parms.TableID = TableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.GetWeaponNameMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<EPlayerType, class FName>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TMap<EPlayerType, class FName> UEndDataTableAPI::GetWeaponNameMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "GetWeaponNameMap");

	Params::EndDataTableAPI_GetWeaponNameMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.InitDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDataTableType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndAssetActor*                   Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataTableAPI::InitDataTable(EDataTableType Type, class AEndAssetActor* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "InitDataTable");

	Params::EndDataTableAPI_InitDataTable Parms{};

	Parms.Type = Type;
	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataTableAPI.IsDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDataTableDebugFlag                  Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataTableAPI::IsDebugFlag(EEndDataTableDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "IsDebugFlag");

	Params::EndDataTableAPI_IsDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.IsExistDataTableBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataTableAPI::IsExistDataTableBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "IsExistDataTableBP");

	Params::EndDataTableAPI_IsExistDataTableBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.IsExistDataTableFromTypeBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDataTableType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataTableAPI::IsExistDataTableFromTypeBP(EDataTableType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "IsExistDataTableFromTypeBP");

	Params::EndDataTableAPI_IsExistDataTableFromTypeBP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataTableAPI.SetDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDataTableDebugFlag                  Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataTableAPI::SetDebugFlag(EEndDataTableDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "SetDebugFlag");

	Params::EndDataTableAPI_SetDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataTableAPI.UnInitDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDataTableType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndAssetActor*                   Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataTableAPI::UnInitDataTable(EDataTableType Type, class AEndAssetActor* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataTableAPI", "UnInitDataTable");

	Params::EndDataTableAPI_UnInitDataTable Parms{};

	Parms.Type = Type;
	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU0005BaseController.OnTurnRed
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAISU0005BaseController::OnTurnRed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU0005BaseController", "OnTurnRed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000_02Controller.OnCheckFollow
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    OutBattleArea                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NotOwnerTrace                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NotUcpcTrace                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000_02Controller::OnCheckFollow(bool OutBattleArea, bool NotOwnerTrace, bool NotUcpcTrace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000_02Controller", "OnCheckFollow");

	Params::EndBattleAISU1000_02Controller_OnCheckFollow Parms{};

	Parms.OutBattleArea = OutBattleArea;
	Parms.NotOwnerTrace = NotOwnerTrace;
	Parms.NotUcpcTrace = NotUcpcTrace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleAISU1000_02Controller.ResetConditionAfterThrown
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAISU1000_02Controller::ResetConditionAfterThrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000_02Controller", "ResetConditionAfterThrown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000_02Controller.SetFollow
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    InFollow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000_02Controller::SetFollow(bool InFollow, const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000_02Controller", "SetFollow");

	Params::EndBattleAISU1000_02Controller_SetFollow Parms{};

	Parms.InFollow = InFollow;
	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000_02Controller.SetOverrideFollowTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000_02Controller::SetOverrideFollowTarget(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000_02Controller", "SetOverrideFollowTarget");

	Params::EndBattleAISU1000_02Controller_SetOverrideFollowTarget Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000Controller.AddPowerUpMagnitude
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   Magnitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000Controller::AddPowerUpMagnitude(float Magnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "AddPowerUpMagnitude");

	Params::EndBattleAISU1000Controller_AddPowerUpMagnitude Parms{};

	Parms.Magnitude = Magnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000Controller.ClearPowerUp
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAISU1000Controller::ClearPowerUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "ClearPowerUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000Controller.PowerLose
// (Final, Native, Protected, BlueprintCallable)

void AEndBattleAISU1000Controller::PowerLose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "PowerLose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000Controller.SetHidePowerUpFX
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bHide                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediately                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000Controller::SetHidePowerUpFX(bool bHide, bool bImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "SetHidePowerUpFX");

	Params::EndBattleAISU1000Controller_SetHidePowerUpFX Parms{};

	Parms.bHide = bHide;
	Parms.bImmediately = bImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000Controller.SetPowerUpSpeed
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAISU1000Controller::SetPowerUpSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "SetPowerUpSpeed");

	Params::EndBattleAISU1000Controller_SetPowerUpSpeed Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAISU1000Controller.GetPowerUpMagnitude
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAISU1000Controller::GetPowerUpMagnitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "GetPowerUpMagnitude");

	Params::EndBattleAISU1000Controller_GetPowerUpMagnitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISU1000Controller.GetPowerUpSpeed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndBattleAISU1000Controller::GetPowerUpSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "GetPowerUpSpeed");

	Params::EndBattleAISU1000Controller_GetPowerUpSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAISU1000Controller.IsPowerUpMax
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAISU1000Controller::IsPowerUpMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAISU1000Controller", "IsPowerUpMax");

	Params::EndBattleAISU1000Controller_IsPowerUpMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAITown7WedgeController.BeginRootMovement
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAITown7WedgeController::BeginRootMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "BeginRootMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAITown7WedgeController.EndRootMovement
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAITown7WedgeController::EndRootMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "EndRootMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAITown7WedgeController.IsConfronting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAITown7WedgeController::IsConfronting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "IsConfronting");

	Params::EndBattleAITown7WedgeController_IsConfronting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAITown7WedgeController.IsFleeing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleAITown7WedgeController::IsFleeing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "IsFleeing");

	Params::EndBattleAITown7WedgeController_IsFleeing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAITown7WedgeController.StartConfront
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleAITown7WedgeController::StartConfront(float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "StartConfront");

	Params::EndBattleAITown7WedgeController_StartConfront Parms{};

	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAITown7WedgeController.StartFlee
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AEndCharacter*>            Targets                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AEndBattleAITown7WedgeController::StartFlee(const TArray<class AEndCharacter*>& Targets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "StartFlee");

	Params::EndBattleAITown7WedgeController_StartFlee Parms{};

	Parms.Targets = std::move(Targets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAITown7WedgeController.StopConfront
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAITown7WedgeController::StopConfront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "StopConfront");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAITown7WedgeController.StopFlee
// (Final, Native, Public, BlueprintCallable)

void AEndBattleAITown7WedgeController::StopFlee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleAITown7WedgeController", "StopFlee");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.AddAttachEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndCharacterAttachEffectArgumentsargs                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::AddAttachEffect(class AEndCharacter* chara, const struct FEndCharacterAttachEffectArguments& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "AddAttachEffect");

	Params::EndBattleAPI_AddAttachEffect Parms{};

	Parms.chara = chara;
	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.AddBattleSceneCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::AddBattleSceneCount(class FName InName, int32 InAddCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "AddBattleSceneCount");

	Params::EndBattleAPI_AddBattleSceneCount Parms{};

	Parms.InName = InName;
	Parms.InAddCount = InAddCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.AddCollisionIgnoreActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             IgnoreActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::AddCollisionIgnoreActor(class AEndCharacter* ownerChara, class FName IgnoreActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "AddCollisionIgnoreActor");

	Params::EndBattleAPI_AddCollisionIgnoreActor Parms{};

	Parms.ownerChara = ownerChara;
	Parms.IgnoreActorName = IgnoreActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.AddDodgeCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UEndBattleDamageSourceComponent*  InDamageSourceComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InDodgeChara                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::AddDodgeCharacter(class UEndBattleDamageSourceComponent* InDamageSourceComponent, class AEndCharacter* InDodgeChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "AddDodgeCharacter");

	Params::EndBattleAPI_AddDodgeCharacter Parms{};

	Parms.InDamageSourceComponent = InDamageSourceComponent;
	Parms.InDodgeChara = InDodgeChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.BeginAIPCConfrontIdle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::BeginAIPCConfrontIdle(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "BeginAIPCConfrontIdle");

	Params::EndBattleAPI_BeginAIPCConfrontIdle Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.BeginAIPCMeleeAttackMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::BeginAIPCMeleeAttackMode(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "BeginAIPCMeleeAttackMode");

	Params::EndBattleAPI_BeginAIPCMeleeAttackMode Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.CalcPartyCenterLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          outCenterLocation                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::CalcPartyCenterLocation(struct FVector* outCenterLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CalcPartyCenterLocation");

	Params::EndBattleAPI_CalcPartyCenterLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outCenterLocation != nullptr)
		*outCenterLocation = std::move(Parms.outCenterLocation);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.CancelAIPCAbilityGuard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::CancelAIPCAbilityGuard(const EPlayerType PlayerCharacter, class AEndCharacter* TargetCharacter, const class FName AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CancelAIPCAbilityGuard");

	Params::EndBattleAPI_CancelAIPCAbilityGuard Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.CanSyncAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::CanSyncAction(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CanSyncAction");

	Params::EndBattleAPI_CanSyncAction Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.ClearAIPCDefenceParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ClearAIPCDefenceParam(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ClearAIPCDefenceParam");

	Params::EndBattleAPI_ClearAIPCDefenceParam Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ClearDangerWarning
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ClearDangerWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ClearDangerWarning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ClearEffectsByCategoryBattle
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ClearEffectsByCategoryBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ClearEffectsByCategoryBattle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.CreateDamageSource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideDamage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverrideDamage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::CreateDamageSource(class FName DamageSourceID, class AEndCharacter* ownerChara, class AEndCharacter* targetChara, class FName AbilityID, bool bOverrideDamage, int32 OverrideDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CreateDamageSource");

	Params::EndBattleAPI_CreateDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;
	Parms.ownerChara = ownerChara;
	Parms.targetChara = targetChara;
	Parms.AbilityID = AbilityID;
	Parms.bOverrideDamage = bOverrideDamage;
	Parms.OverrideDamage = OverrideDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.CreateSyncAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             syncActionID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::CreateSyncAction(class FName syncActionID, class AEndCharacter* ownerChara, class AEndCharacter* targetChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CreateSyncAction");

	Params::EndBattleAPI_CreateSyncAction Parms{};

	Parms.syncActionID = syncActionID;
	Parms.ownerChara = ownerChara;
	Parms.targetChara = targetChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.CreateSyncActionOwners
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             syncActionID0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             syncActionID1                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara1                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             syncActionID2                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara2                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::CreateSyncActionOwners(class FName syncActionID0, class AEndCharacter* ownerChara0, class FName syncActionID1, class AEndCharacter* ownerChara1, class FName syncActionID2, class AEndCharacter* ownerChara2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CreateSyncActionOwners");

	Params::EndBattleAPI_CreateSyncActionOwners Parms{};

	Parms.syncActionID0 = syncActionID0;
	Parms.ownerChara0 = ownerChara0;
	Parms.syncActionID1 = syncActionID1;
	Parms.ownerChara1 = ownerChara1;
	Parms.syncActionID2 = syncActionID2;
	Parms.ownerChara2 = ownerChara2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.CreateSyncActionOwnersByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             syncActionID0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ownerCharaName0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             syncActionID1                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ownerCharaName1                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             syncActionID2                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ownerCharaName2                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::CreateSyncActionOwnersByName(class FName syncActionID0, class FName ownerCharaName0, class FName syncActionID1, class FName ownerCharaName1, class FName syncActionID2, class FName ownerCharaName2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "CreateSyncActionOwnersByName");

	Params::EndBattleAPI_CreateSyncActionOwnersByName Parms{};

	Parms.syncActionID0 = syncActionID0;
	Parms.ownerCharaName0 = ownerCharaName0;
	Parms.syncActionID1 = syncActionID1;
	Parms.ownerCharaName1 = ownerCharaName1;
	Parms.syncActionID2 = syncActionID2;
	Parms.ownerCharaName2 = ownerCharaName2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.DebugSetHP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::DebugSetHP(class AEndCharacter* chara, int32 HP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DebugSetHP");

	Params::EndBattleAPI_DebugSetHP Parms{};

	Parms.chara = chara;
	Parms.HP = HP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.DecBattleSceneCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::DecBattleSceneCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DecBattleSceneCount");

	Params::EndBattleAPI_DecBattleSceneCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.DestroyDamageSource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             DamageSourceID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    OwnerCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::DestroyDamageSource(class FName DamageSourceID, class AEndCharacter* OwnerCharacter, bool bDestroyEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DestroyDamageSource");

	Params::EndBattleAPI_DestroyDamageSource Parms{};

	Parms.DamageSourceID = DamageSourceID;
	Parms.OwnerCharacter = OwnerCharacter;
	Parms.bDestroyEffect = bDestroyEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.DestroyDamageSourceAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bDestroyEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::DestroyDamageSourceAll(bool bDestroyEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DestroyDamageSourceAll");

	Params::EndBattleAPI_DestroyDamageSourceAll Parms{};

	Parms.bDestroyEffect = bDestroyEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.DestroyDamageSourceAllCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::DestroyDamageSourceAllCharacter(class AEndCharacter* Character, bool bDestroyEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DestroyDamageSourceAllCharacter");

	Params::EndBattleAPI_DestroyDamageSourceAllCharacter Parms{};

	Parms.Character = Character;
	Parms.bDestroyEffect = bDestroyEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.DisableFogControllerAPI
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InFogName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::DisableFogControllerAPI(const class FName& InFogName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DisableFogControllerAPI");

	Params::EndBattleAPI_DisableFogControllerAPI Parms{};

	Parms.InFogName = InFogName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.DisableSelfRevive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::DisableSelfRevive(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DisableSelfRevive");

	Params::EndBattleAPI_DisableSelfRevive Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.DivEqualFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::DivEqualFloat(float& ValueA, float ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DivEqualFloat");

	Params::EndBattleAPI_DivEqualFloat Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.DivEqualInterger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::DivEqualInterger(int32& ValueA, int32 ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DivEqualInterger");

	Params::EndBattleAPI_DivEqualInterger Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.DodgeDirection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Group                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::DodgeDirection(int32 Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "DodgeDirection");

	Params::EndBattleAPI_DodgeDirection Parms{};

	Parms.Group = Group;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.EnableFogControllerAPI
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InFogName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::EnableFogControllerAPI(const class FName& InFogName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "EnableFogControllerAPI");

	Params::EndBattleAPI_EnableFogControllerAPI Parms{};

	Parms.InFogName = InFogName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.EnableSelfRevive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeForRevive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HpRecoverRate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::EnableSelfRevive(EPlayerType PlayerType, float TimeForRevive, float HpRecoverRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "EnableSelfRevive");

	Params::EndBattleAPI_EnableSelfRevive Parms{};

	Parms.PlayerType = PlayerType;
	Parms.TimeForRevive = TimeForRevive;
	Parms.HpRecoverRate = HpRecoverRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.EndAIPCConfrontIdle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::EndAIPCConfrontIdle(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "EndAIPCConfrontIdle");

	Params::EndBattleAPI_EndAIPCConfrontIdle Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.EndAIPCMeleeAttackMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::EndAIPCMeleeAttackMode(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "EndAIPCMeleeAttackMode");

	Params::EndBattleAPI_EndAIPCMeleeAttackMode Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ExistDamageSourceRevive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::ExistDamageSourceRevive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ExistDamageSourceRevive");

	Params::EndBattleAPI_ExistDamageSourceRevive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.FindNavVolumesInRange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Groups                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   angleRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCompareDistanceType           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    behind                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndNavModifierVolume*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndNavModifierVolume*> UEndBattleAPI::FindNavVolumesInRange(class AEndCharacter* Character, const TArray<int32>& Groups, float angleRange, EEndBattleCompareDistanceType Type, bool behind, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "FindNavVolumesInRange");

	Params::EndBattleAPI_FindNavVolumesInRange Parms{};

	Parms.Character = Character;
	Parms.Groups = std::move(Groups);
	Parms.angleRange = angleRange;
	Parms.Type = Type;
	Parms.behind = behind;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.FindNavVolumesOutRange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Groups                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   angleRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCompareDistanceType           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    behind                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndNavModifierVolume*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndNavModifierVolume*> UEndBattleAPI::FindNavVolumesOutRange(class AEndCharacter* Character, const TArray<int32>& Groups, float angleRange, EEndBattleCompareDistanceType Type, bool behind, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "FindNavVolumesOutRange");

	Params::EndBattleAPI_FindNavVolumesOutRange Parms{};

	Parms.Character = Character;
	Parms.Groups = std::move(Groups);
	Parms.angleRange = angleRange;
	Parms.Type = Type;
	Parms.behind = behind;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.FinishSummonOmenEffect
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::FinishSummonOmenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "FinishSummonOmenEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.GameOverForce
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::GameOverForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GameOverForce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.GetAbilityElement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetAbilityElement(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAbilityElement");

	Params::EndBattleAPI_GetAbilityElement Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetActorDirection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndBattleAPI::GetActorDirection(class AActor* From, class AActor* To)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetActorDirection");

	Params::EndBattleAPI_GetActorDirection Parms{};

	Parms.From = From;
	Parms.To = To;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetActorDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           From                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           To                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetActorDistance(class AActor* From, class AActor* To)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetActorDistance");

	Params::EndBattleAPI_GetActorDistance Parms{};

	Parms.From = From;
	Parms.To = To;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetActorName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetActorName(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetActorName");

	Params::EndBattleAPI_GetActorName Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetAIActionAbilityTableFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAIActionAbility               InElem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetAIActionAbilityTableFloat(class FName InName, EEndBattleAIActionAbility InElem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAIActionAbilityTableFloat");

	Params::EndBattleAPI_GetAIActionAbilityTableFloat Parms{};

	Parms.InName = InName;
	Parms.InElem = InElem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetAIActionAbilityTableInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAIActionAbility               InElem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetAIActionAbilityTableInt(class FName InName, EEndBattleAIActionAbility InElem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAIActionAbilityTableInt");

	Params::EndBattleAPI_GetAIActionAbilityTableInt Parms{};

	Parms.InName = InName;
	Parms.InElem = InElem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetAIActionAbilityTableString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAIActionAbility               InElem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndBattleAPI::GetAIActionAbilityTableString(class FName InName, EEndBattleAIActionAbility InElem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAIActionAbilityTableString");

	Params::EndBattleAPI_GetAIActionAbilityTableString Parms{};

	Parms.InName = InName;
	Parms.InElem = InElem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetAimedCountFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetAimedCountFromID(class AEndCharacter* InCharacter, class FName Upper, class FName Lower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAimedCountFromID");

	Params::EndBattleAPI_GetAimedCountFromID Parms{};

	Parms.InCharacter = InCharacter;
	Parms.Upper = Upper;
	Parms.Lower = Lower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetAllDamageSourceLocations
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InFindDamageSourceID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UEndBattleAPI::GetAllDamageSourceLocations(class FName InFindDamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAllDamageSourceLocations");

	Params::EndBattleAPI_GetAllDamageSourceLocations Parms{};

	Parms.InFindDamageSourceID = InFindDamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetAttackableCharacters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            OutList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            InList                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetAttackableCharacters(TArray<class AEndCharacter*>* OutList, const TArray<class AEndCharacter*>& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetAttackableCharacters");

	Params::EndBattleAPI_GetAttackableCharacters Parms{};

	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutList != nullptr)
		*OutList = std::move(Parms.OutList);
}


// Function EndGame.EndBattleAPI.GetBattleAI
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndBattleAIController*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndBattleAIController* UEndBattleAPI::GetBattleAI(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleAI");

	Params::EndBattleAPI_GetBattleAI Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleAIControllerFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndBattleAIController*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndBattleAIController* UEndBattleAPI::GetBattleAIControllerFromID(class AEndCharacter* InChara, int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleAIControllerFromID");

	Params::EndBattleAPI_GetBattleAIControllerFromID Parms{};

	Parms.InChara = InChara;
	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleAreaDistanceFromAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InTargetCharacter                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetBattleAreaDistanceFromAngle(class AEndCharacter* InCharacter, class AEndCharacter* InTargetCharacter, float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleAreaDistanceFromAngle");

	Params::EndBattleAPI_GetBattleAreaDistanceFromAngle Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InTargetCharacter = InTargetCharacter;
	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCharaSpec_DataTableID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetBattleCharaSpec_DataTableID(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCharaSpec_DataTableID");

	Params::EndBattleAPI_GetBattleCharaSpec_DataTableID Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCharaSpec_WeakCondition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetBattleCharaSpec_WeakCondition(class AEndCharacter* InChara, int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCharaSpec_WeakCondition");

	Params::EndBattleAPI_GetBattleCharaSpec_WeakCondition Parms{};

	Parms.InChara = InChara;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCountLogBoolByBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ownerCharaName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             battleScenId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::GetBattleCountLogBoolByBP(class FName ownerCharaName, EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, const class FName& battleScenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCountLogBoolByBP");

	Params::EndBattleAPI_GetBattleCountLogBoolByBP Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.battleScenId = battleScenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCountLogBoolForUCPCByBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             battleScenId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::GetBattleCountLogBoolForUCPCByBP(EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, const class FName& battleScenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCountLogBoolForUCPCByBP");

	Params::EndBattleAPI_GetBattleCountLogBoolForUCPCByBP Parms{};

	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.battleScenId = battleScenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCountLogFloatByBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ownerCharaName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             battleScenId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetBattleCountLogFloatByBP(class FName ownerCharaName, EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, const class FName& battleScenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCountLogFloatByBP");

	Params::EndBattleAPI_GetBattleCountLogFloatByBP Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.battleScenId = battleScenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCountLogFloatForUCPCByBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             battleScenId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetBattleCountLogFloatForUCPCByBP(EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, const class FName& battleScenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCountLogFloatForUCPCByBP");

	Params::EndBattleAPI_GetBattleCountLogFloatForUCPCByBP Parms{};

	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.battleScenId = battleScenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCountLogIntByBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ownerCharaName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             battleScenId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetBattleCountLogIntByBP(class FName ownerCharaName, EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, const class FName& battleScenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCountLogIntByBP");

	Params::EndBattleAPI_GetBattleCountLogIntByBP Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.battleScenId = battleScenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleCountLogIntForUCPCByBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             battleScenId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetBattleCountLogIntForUCPCByBP(EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, const class FName& battleScenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleCountLogIntForUCPCByBP");

	Params::EndBattleAPI_GetBattleCountLogIntForUCPCByBP Parms{};

	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.battleScenId = battleScenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleMemberConditionList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    dead                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    sleep                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Stop                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    petrify                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    toad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            memberList                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetBattleMemberConditionList(bool dead, bool sleep, bool Stop, bool petrify, bool toad, TArray<class AEndCharacter*>* memberList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleMemberConditionList");

	Params::EndBattleAPI_GetBattleMemberConditionList Parms{};

	Parms.dead = dead;
	Parms.sleep = sleep;
	Parms.Stop = Stop;
	Parms.petrify = petrify;
	Parms.toad = toad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (memberList != nullptr)
		*memberList = std::move(Parms.memberList);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleSceneCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetBattleSceneCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleSceneCount");

	Params::EndBattleAPI_GetBattleSceneCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleSceneID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetBattleSceneID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleSceneID");

	Params::EndBattleAPI_GetBattleSceneID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleSceneIDFromChara
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetBattleSceneIDFromChara(class AEndCharacter* InChara, bool InParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleSceneIDFromChara");

	Params::EndBattleAPI_GetBattleSceneIDFromChara Parms{};

	Parms.InChara = InChara;
	Parms.InParent = InParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleSceneSituationID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             BattleSceneID                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetBattleSceneSituationID(const class FName& BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleSceneSituationID");

	Params::EndBattleAPI_GetBattleSceneSituationID Parms{};

	Parms.BattleSceneID = BattleSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetBattleSceneSituationType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             BattleSceneID                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSceneSituationType            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndBattleSceneSituationType UEndBattleAPI::GetBattleSceneSituationType(const class FName& BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetBattleSceneSituationType");

	Params::EndBattleAPI_GetBattleSceneSituationType Parms{};

	Parms.BattleSceneID = BattleSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCharactersFromID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            OutList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            InList                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetCharactersFromID(class FName Upper, class FName Lower, TArray<class AEndCharacter*>* OutList, const TArray<class AEndCharacter*>& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharactersFromID");

	Params::EndBattleAPI_GetCharactersFromID Parms{};

	Parms.Upper = Upper;
	Parms.Lower = Lower;
	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutList != nullptr)
		*OutList = std::move(Parms.OutList);
}


// Function EndGame.EndBattleAPI.GetCharaFromActorName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InActorName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetCharaFromActorName(class FName InActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharaFromActorName");

	Params::EndBattleAPI_GetCharaFromActorName Parms{};

	Parms.InActorName = InActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCharaFromRaceID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InRaceName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetCharaFromRaceID(class FName InRaceName, int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharaFromRaceID");

	Params::EndBattleAPI_GetCharaFromRaceID Parms{};

	Parms.InRaceName = InRaceName;
	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCharaHP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetCharaHP(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharaHP");

	Params::EndBattleAPI_GetCharaHP Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCharaHPMax
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetCharaHPMax(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharaHPMax");

	Params::EndBattleAPI_GetCharaHPMax Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCharaHPP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetCharaHPP(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharaHPP");

	Params::EndBattleAPI_GetCharaHPP Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCharaID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetCharaID(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCharaID");

	Params::EndBattleAPI_GetCharaID Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCommandLinkageMagnificate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetCommandLinkageMagnificate(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCommandLinkageMagnificate");

	Params::EndBattleAPI_GetCommandLinkageMagnificate Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCurrentAbilityID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetCurrentAbilityID(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCurrentAbilityID");

	Params::EndBattleAPI_GetCurrentAbilityID Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetCurrentLocomotionState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndLocomotionState                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndLocomotionState UEndBattleAPI::GetCurrentLocomotionState(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetCurrentLocomotionState");

	Params::EndBattleAPI_GetCurrentLocomotionState Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetDamageSourceCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InDamageSourceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetDamageSourceCount(class FName InDamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetDamageSourceCount");

	Params::EndBattleAPI_GetDamageSourceCount Parms{};

	Parms.InDamageSourceID = InDamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetDamageSourceInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTarget                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTargetParty                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutCut                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutProperty                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutCollision                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutDisableFinish                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCreateDelay                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetDamageSourceInfo(class FName InAbilityName, int32* OutTarget, int32* OutTargetParty, int32* OutCut, int32* OutProperty, int32* OutCollision, bool* OutDisableFinish, float* OutCreateDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetDamageSourceInfo");

	Params::EndBattleAPI_GetDamageSourceInfo Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTarget != nullptr)
		*OutTarget = Parms.OutTarget;

	if (OutTargetParty != nullptr)
		*OutTargetParty = Parms.OutTargetParty;

	if (OutCut != nullptr)
		*OutCut = Parms.OutCut;

	if (OutProperty != nullptr)
		*OutProperty = Parms.OutProperty;

	if (OutCollision != nullptr)
		*OutCollision = Parms.OutCollision;

	if (OutDisableFinish != nullptr)
		*OutDisableFinish = Parms.OutDisableFinish;

	if (OutCreateDelay != nullptr)
		*OutCreateDelay = Parms.OutCreateDelay;
}


// Function EndGame.EndBattleAPI.GetDamageSourceInfoFromDamage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InDamageSourceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTarget                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTargetParty                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutCut                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutProperty                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutCollision                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutDisableFinish                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCreateDelay                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetDamageSourceInfoFromDamage(class FName InDamageSourceID, int32* OutTarget, int32* OutTargetParty, int32* OutCut, int32* OutProperty, int32* OutCollision, bool* OutDisableFinish, float* OutCreateDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetDamageSourceInfoFromDamage");

	Params::EndBattleAPI_GetDamageSourceInfoFromDamage Parms{};

	Parms.InDamageSourceID = InDamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTarget != nullptr)
		*OutTarget = Parms.OutTarget;

	if (OutTargetParty != nullptr)
		*OutTargetParty = Parms.OutTargetParty;

	if (OutCut != nullptr)
		*OutCut = Parms.OutCut;

	if (OutProperty != nullptr)
		*OutProperty = Parms.OutProperty;

	if (OutCollision != nullptr)
		*OutCollision = Parms.OutCollision;

	if (OutDisableFinish != nullptr)
		*OutDisableFinish = Parms.OutDisableFinish;

	if (OutCreateDelay != nullptr)
		*OutCreateDelay = Parms.OutCreateDelay;
}


// Function EndGame.EndBattleAPI.GetDummyEnemies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleAPI::GetDummyEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetDummyEnemies");

	Params::EndBattleAPI_GetDummyEnemies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetDummyNPCsFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleAPI::GetDummyNPCsFromID(class FName Upper, class FName Lower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetDummyNPCsFromID");

	Params::EndBattleAPI_GetDummyNPCsFromID Parms{};

	Parms.Upper = Upper;
	Parms.Lower = Lower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetDummyPartyMembers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleAPI::GetDummyPartyMembers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetDummyPartyMembers");

	Params::EndBattleAPI_GetDummyPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEncountBattleSceneIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<class FName>               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<class FName> UEndBattleAPI::GetEncountBattleSceneIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEncountBattleSceneIDs");

	Params::EndBattleAPI_GetEncountBattleSceneIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEnemyMemberCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ContainRaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetEnemyMemberCount(class FName ContainRaceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEnemyMemberCount");

	Params::EndBattleAPI_GetEnemyMemberCount Parms{};

	Parms.ContainRaceID = ContainRaceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEnemyMemberCountFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flip                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveDummy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetEnemyMemberCountFromID(class FName Upper, class FName Lower, bool Flip, bool bRemoveDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEnemyMemberCountFromID");

	Params::EndBattleAPI_GetEnemyMemberCountFromID Parms{};

	Parms.Upper = Upper;
	Parms.Lower = Lower;
	Parms.Flip = Flip;
	Parms.bRemoveDummy = bRemoveDummy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEnemyMemberFromIDWithIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetEnemyMemberFromIDWithIndex(class FName Upper, class FName Lower, int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEnemyMemberFromIDWithIndex");

	Params::EndBattleAPI_GetEnemyMemberFromIDWithIndex Parms{};

	Parms.Upper = Upper;
	Parms.Lower = Lower;
	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEnemyMembers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ContainRaceID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flip                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleAPI::GetEnemyMembers(class FName ContainRaceID, bool Flip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEnemyMembers");

	Params::EndBattleAPI_GetEnemyMembers Parms{};

	Parms.ContainRaceID = ContainRaceID;
	Parms.Flip = Flip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEnemyMembersFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flip                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleAPI::GetEnemyMembersFromID(class FName Upper, class FName Lower, bool Flip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEnemyMembersFromID");

	Params::EndBattleAPI_GetEnemyMembersFromID Parms{};

	Parms.Upper = Upper;
	Parms.Lower = Lower;
	Parms.Flip = Flip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetEnemyMembersRef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            Out                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetEnemyMembersRef(TArray<class AEndCharacter*>* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetEnemyMembersRef");

	Params::EndBattleAPI_GetEnemyMembersRef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function EndGame.EndBattleAPI.GetExpectationCountInCapsuleArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiBattleTargetType                  targetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleLength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FowardVectorRotateAngle                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetExpectationCountInCapsuleArea(class AEndCharacter* InCharacter, EEndAiBattleTargetType targetType, float CapsuleRadius, float CapsuleLength, float FowardVectorRotateAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetExpectationCountInCapsuleArea");

	Params::EndBattleAPI_GetExpectationCountInCapsuleArea Parms{};

	Parms.InCharacter = InCharacter;
	Parms.targetType = targetType;
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.CapsuleLength = CapsuleLength;
	Parms.FowardVectorRotateAngle = FowardVectorRotateAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetExpectationCountInCapsuleAreaByLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiBattleTargetType                  targetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapsuleLength                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FowardVectorRotateAngle                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetExpectationCountInCapsuleAreaByLocation(class AEndCharacter* InCharacter, EEndAiBattleTargetType targetType, float CapsuleRadius, float CapsuleLength, const struct FVector& TargetLocation, float FowardVectorRotateAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetExpectationCountInCapsuleAreaByLocation");

	Params::EndBattleAPI_GetExpectationCountInCapsuleAreaByLocation Parms{};

	Parms.InCharacter = InCharacter;
	Parms.targetType = targetType;
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.CapsuleLength = CapsuleLength;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.FowardVectorRotateAngle = FowardVectorRotateAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetExpectationCountInConeArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiBattleTargetType                  targetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ConeRadius                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ConeAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FowardVectorRotateAngle                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetExpectationCountInConeArea(class AEndCharacter* InCharacter, EEndAiBattleTargetType targetType, float ConeRadius, float ConeAngle, float FowardVectorRotateAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetExpectationCountInConeArea");

	Params::EndBattleAPI_GetExpectationCountInConeArea Parms{};

	Parms.InCharacter = InCharacter;
	Parms.targetType = targetType;
	Parms.ConeRadius = ConeRadius;
	Parms.ConeAngle = ConeAngle;
	Parms.FowardVectorRotateAngle = FowardVectorRotateAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetExpectationCountInConeAreaByLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiBattleTargetType                  targetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ConeRadius                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ConeAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FowardVectorRotateAngle                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetExpectationCountInConeAreaByLocation(class AEndCharacter* InCharacter, EEndAiBattleTargetType targetType, float ConeRadius, float ConeAngle, const struct FVector& TargetLocation, float FowardVectorRotateAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetExpectationCountInConeAreaByLocation");

	Params::EndBattleAPI_GetExpectationCountInConeAreaByLocation Parms{};

	Parms.InCharacter = InCharacter;
	Parms.targetType = targetType;
	Parms.ConeRadius = ConeRadius;
	Parms.ConeAngle = ConeAngle;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.FowardVectorRotateAngle = FowardVectorRotateAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetFarestActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           outActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           baseActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   compareActorList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ignoreActorList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetFarestActor(class AActor** outActor, class AActor* baseActor, const TArray<class AActor*>& compareActorList, const TArray<class AActor*>& ignoreActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetFarestActor");

	Params::EndBattleAPI_GetFarestActor Parms{};

	Parms.baseActor = baseActor;
	Parms.compareActorList = std::move(compareActorList);
	Parms.ignoreActorList = std::move(ignoreActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outActor != nullptr)
		*outActor = Parms.outActor;
}


// Function EndGame.EndBattleAPI.GetFarestCharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            InList                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetFarestCharacter(const struct FVector& InLocation, const TArray<class AEndCharacter*>& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetFarestCharacter");

	Params::EndBattleAPI_GetFarestCharacter Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetGuardTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetGuardTime(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetGuardTime");

	Params::EndBattleAPI_GetGuardTime Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetHiddenBreakable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             BreakableID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::GetHiddenBreakable(class FName BreakableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetHiddenBreakable");

	Params::EndBattleAPI_GetHiddenBreakable Parms{};

	Parms.BreakableID = BreakableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetHighestPriorityBattleCharaCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             BattleSceneID                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCharaCategoryType             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndBattleCharaCategoryType UEndBattleAPI::GetHighestPriorityBattleCharaCategory(const class FName& BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetHighestPriorityBattleCharaCategory");

	Params::EndBattleAPI_GetHighestPriorityBattleCharaCategory Parms{};

	Parms.BattleSceneID = BattleSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetKeep
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetKeep(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetKeep");

	Params::EndBattleAPI_GetKeep Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetLayoutTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             NodeName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndBattleAPI::GetLayoutTransform(class FName NodeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetLayoutTransform");

	Params::EndBattleAPI_GetLayoutTransform Parms{};

	Parms.NodeName = NodeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetMagicDefense
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetMagicDefense(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetMagicDefense");

	Params::EndBattleAPI_GetMagicDefense Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetMateriaParam
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWeapon                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndBattleAIMateriaParam         Param                                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::GetMateriaParam(class AEndCharacter* InChara, bool bWeapon, int32 Slot, struct FEndBattleAIMateriaParam* Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetMateriaParam");

	Params::EndBattleAPI_GetMateriaParam Parms{};

	Parms.InChara = InChara;
	Parms.bWeapon = bWeapon;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Param != nullptr)
		*Param = std::move(Parms.Param);

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetMotionList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndBattleAPI::GetMotionList(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetMotionList");

	Params::EndBattleAPI_GetMotionList Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNavVolumeFromAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngleRange                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCompareDistanceType           InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InBehind                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndNavModifierVolume*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndNavModifierVolume* UEndBattleAPI::GetNavVolumeFromAngle(class AEndCharacter* InChara, float InAngleRange, EEndBattleCompareDistanceType InType, int32 InGroup, bool InBehind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNavVolumeFromAngle");

	Params::EndBattleAPI_GetNavVolumeFromAngle Parms{};

	Parms.InChara = InChara;
	Parms.InAngleRange = InAngleRange;
	Parms.InType = InType;
	Parms.InGroup = InGroup;
	Parms.InBehind = InBehind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNavVolumeFromType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InBattleSceneID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModifierVolumeType                     InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndNavModifierVolume*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndNavModifierVolume*> UEndBattleAPI::GetNavVolumeFromType(class FName InBattleSceneID, EModifierVolumeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNavVolumeFromType");

	Params::EndBattleAPI_GetNavVolumeFromType Parms{};

	Parms.InBattleSceneID = InBattleSceneID;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           outActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           baseActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   compareActorList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ignoreActorList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetNearestActor(class AActor** outActor, class AActor* baseActor, const TArray<class AActor*>& compareActorList, const TArray<class AActor*>& ignoreActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestActor");

	Params::EndBattleAPI_GetNearestActor Parms{};

	Parms.baseActor = baseActor;
	Parms.compareActorList = std::move(compareActorList);
	Parms.ignoreActorList = std::move(ignoreActorList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outActor != nullptr)
		*outActor = Parms.outActor;
}


// Function EndGame.EndBattleAPI.GetNearestCharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            InList                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetNearestCharacter(const struct FVector& InLocation, const TArray<class AEndCharacter*>& InList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestCharacter");

	Params::EndBattleAPI_GetNearestCharacter Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InList = std::move(InList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestOwnVolume
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndBattleAPI::GetNearestOwnVolume(class AEndCharacter* InChara, const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestOwnVolume");

	Params::EndBattleAPI_GetNearestOwnVolume Parms{};

	Parms.InChara = InChara;
	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestOwnVolumeWithExtent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InExtent                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndBattleAPI::GetNearestOwnVolumeWithExtent(class AEndCharacter* InChara, const struct FVector& InLocation, const struct FVector& InExtent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestOwnVolumeWithExtent");

	Params::EndBattleAPI_GetNearestOwnVolumeWithExtent Parms{};

	Parms.InChara = InChara;
	Parms.InLocation = std::move(InLocation);
	Parms.InExtent = std::move(InExtent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestPhisics
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndBattleAPI::GetNearestPhisics(class AEndCharacter* InChara, class FName InName, bool InContain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestPhisics");

	Params::EndBattleAPI_GetNearestPhisics Parms{};

	Parms.InChara = InChara;
	Parms.InName = InName;
	Parms.InContain = InContain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestPhisicsFromActorName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndBattleAPI::GetNearestPhisicsFromActorName(class AEndCharacter* InChara, class FName InName, bool InContain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestPhisicsFromActorName");

	Params::EndBattleAPI_GetNearestPhisicsFromActorName Parms{};

	Parms.InChara = InChara;
	Parms.InName = InName;
	Parms.InContain = InContain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestPhisicsInVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVolumeName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPossetion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndBattleAPI::GetNearestPhisicsInVolume(class AEndCharacter* InChara, class FName InVolumeName, class FName InName, bool InContain, bool InPossetion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestPhisicsInVolume");

	Params::EndBattleAPI_GetNearestPhisicsInVolume Parms{};

	Parms.InChara = InChara;
	Parms.InVolumeName = InVolumeName;
	Parms.InName = InName;
	Parms.InContain = InContain;
	Parms.InPossetion = InPossetion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestPhysicsInVolumeFromLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InVolumeName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LocationName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPossetion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCanPosettion                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndBattleAPI::GetNearestPhysicsInVolumeFromLocation(class AEndCharacter* InChara, class FName InVolumeName, class FName LocationName, class FName InName, bool InContain, bool InPossetion, bool InCanPosettion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestPhysicsInVolumeFromLocation");

	Params::EndBattleAPI_GetNearestPhysicsInVolumeFromLocation Parms{};

	Parms.InChara = InChara;
	Parms.InVolumeName = InVolumeName;
	Parms.LocationName = LocationName;
	Parms.InName = InName;
	Parms.InContain = InContain;
	Parms.InPossetion = InPossetion;
	Parms.InCanPosettion = InCanPosettion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetNearestRangePartyCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ZVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetNearestRangePartyCharacter(class AEndCharacter* InChara, float Range, bool ZVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetNearestRangePartyCharacter");

	Params::EndBattleAPI_GetNearestRangePartyCharacter Parms{};

	Parms.InChara = InChara;
	Parms.Range = Range;
	Parms.ZVisible = ZVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetObstractDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetObstractDistance(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetObstractDistance");

	Params::EndBattleAPI_GetObstractDistance Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetObstractDistanceAvarage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetObstractDistanceAvarage(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetObstractDistanceAvarage");

	Params::EndBattleAPI_GetObstractDistanceAvarage Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetObstractDistanceFromAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetObstractDistanceFromAngle(class AEndCharacter* chara, float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetObstractDistanceFromAngle");

	Params::EndBattleAPI_GetObstractDistanceFromAngle Parms{};

	Parms.chara = chara;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetOffsetTransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          Offset                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGetOffsetTransform                     RotationType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndBattleAPI::GetOffsetTransform(const struct FTransform& Transform, const struct FVector& Offset, EGetOffsetTransform RotationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetOffsetTransform");

	Params::EndBattleAPI_GetOffsetTransform Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Offset = std::move(Offset);
	Parms.RotationType = RotationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetOverlapVolumes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndNavModifierVolume*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndNavModifierVolume*> UEndBattleAPI::GetOverlapVolumes(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetOverlapVolumes");

	Params::EndBattleAPI_GetOverlapVolumes Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPartyMembersIgnoreDead
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AEndCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndCharacter*> UEndBattleAPI::GetPartyMembersIgnoreDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPartyMembersIgnoreDead");

	Params::EndBattleAPI_GetPartyMembersIgnoreDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPhisics
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UEndBattleAPI::GetPhisics(class FName InName, bool InContain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPhisics");

	Params::EndBattleAPI_GetPhisics Parms{};

	Parms.InName = InName;
	Parms.InContain = InContain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPhisicsFromActorName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UEndBattleAPI::GetPhisicsFromActorName(class FName InName, bool InContain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPhisicsFromActorName");

	Params::EndBattleAPI_GetPhisicsFromActorName Parms{};

	Parms.InName = InName;
	Parms.InContain = InContain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPhisicsInVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InVolumeName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPossetion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UEndBattleAPI::GetPhisicsInVolume(class FName InVolumeName, class FName InName, bool InContain, bool InPossetion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPhisicsInVolume");

	Params::EndBattleAPI_GetPhisicsInVolume Parms{};

	Parms.InVolumeName = InVolumeName;
	Parms.InName = InName;
	Parms.InContain = InContain;
	Parms.InPossetion = InPossetion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPhysicsDefense
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetPhysicsDefense(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPhysicsDefense");

	Params::EndBattleAPI_GetPhysicsDefense Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPhysicsFromLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             LocationName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndEnvironmentPhysicsStaticMeshActor*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AEndEnvironmentPhysicsStaticMeshActor*> UEndBattleAPI::GetPhysicsFromLocation(class FName LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPhysicsFromLocation");

	Params::EndBattleAPI_GetPhysicsFromLocation Parms{};

	Parms.LocationName = LocationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPhysicsInVolumeFromLocation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InVolumeName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LocationName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InContain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InPossetion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCanPosettion                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UEndBattleAPI::GetPhysicsInVolumeFromLocation(class FName InVolumeName, class FName LocationName, class FName InName, bool InContain, bool InPossetion, bool InCanPosettion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPhysicsInVolumeFromLocation");

	Params::EndBattleAPI_GetPhysicsInVolumeFromLocation Parms{};

	Parms.InVolumeName = InVolumeName;
	Parms.LocationName = LocationName;
	Parms.InName = InName;
	Parms.InContain = InContain;
	Parms.InPossetion = InPossetion;
	Parms.InCanPosettion = InCanPosettion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetPlayerCharacter(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPlayerCharacter");

	Params::EndBattleAPI_GetPlayerCharacter Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPlayerType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndBattleAPI::GetPlayerType(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPlayerType");

	Params::EndBattleAPI_GetPlayerType Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetPlayingExtraActionSequenceNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     outNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::GetPlayingExtraActionSequenceNames(TArray<class FName>* outNames, class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetPlayingExtraActionSequenceNames");

	Params::EndBattleAPI_GetPlayingExtraActionSequenceNames Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNames != nullptr)
		*outNames = std::move(Parms.outNames);
}


// Function EndGame.EndBattleAPI.GetRaceID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetRaceID(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetRaceID");

	Params::EndBattleAPI_GetRaceID Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetRaceName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetRaceName(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetRaceName");

	Params::EndBattleAPI_GetRaceName Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetReplaceDamageSourceID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetReplaceDamageSourceID(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetReplaceDamageSourceID");

	Params::EndBattleAPI_GetReplaceDamageSourceID Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetResistanceElement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetResistanceElement(class AEndCharacter* InChara, int32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetResistanceElement");

	Params::EndBattleAPI_GetResistanceElement Parms{};

	Parms.InChara = InChara;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetSocketTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndBattleAPI::GetSocketTransform(class AEndCharacter* InChara, class FName InSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetSocketTransform");

	Params::EndBattleAPI_GetSocketTransform Parms{};

	Parms.InChara = InChara;
	Parms.InSocketName = InSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetSpendATBBarTotal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    EndCharacter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetSpendATBBarTotal(class AEndCharacter* EndCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetSpendATBBarTotal");

	Params::EndBattleAPI_GetSpendATBBarTotal Parms{};

	Parms.EndCharacter = EndCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetStoryFlagConditionNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     storyFlagNames                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   initializeNum                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetStoryFlagConditionNum(const TArray<class FName>& storyFlagNames, bool Condition, int32 initializeNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetStoryFlagConditionNum");

	Params::EndBattleAPI_GetStoryFlagConditionNum Parms{};

	Parms.storyFlagNames = std::move(storyFlagNames);
	Parms.Condition = Condition;
	Parms.initializeNum = initializeNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetSummom
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndBattleSummonType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetSummom(EEndBattleSummonType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetSummom");

	Params::EndBattleAPI_GetSummom Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetSummonAvilableTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetSummonAvilableTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetSummonAvilableTime");

	Params::EndBattleAPI_GetSummonAvilableTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetSummonMaster
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndBattleAPI::GetSummonMaster(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetSummonMaster");

	Params::EndBattleAPI_GetSummonMaster Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetSyncActionID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::GetSyncActionID(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetSyncActionID");

	Params::EndBattleAPI_GetSyncActionID Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetTakeActionCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetTakeActionCount(class AEndCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetTakeActionCount");

	Params::EndBattleAPI_GetTakeActionCount Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetTakeRequestActionCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIgnoreBind                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetTakeRequestActionCount(class AEndCharacter* InCharacter, class FName InName, bool InIgnoreBind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetTakeRequestActionCount");

	Params::EndBattleAPI_GetTakeRequestActionCount Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InName = InName;
	Parms.InIgnoreBind = InIgnoreBind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetTakeRequestActionCountContainedName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIgnoreBind                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetTakeRequestActionCountContainedName(class AEndCharacter* InCharacter, class FName InName, bool InIgnoreBind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetTakeRequestActionCountContainedName");

	Params::EndBattleAPI_GetTakeRequestActionCountContainedName Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InName = InName;
	Parms.InIgnoreBind = InIgnoreBind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetTakeRequestActionCountContainedNameFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Upper                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIgnoreBind                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetTakeRequestActionCountContainedNameFromID(class AEndCharacter* InCharacter, class FName InName, class FName Upper, class FName Lower, bool InIgnoreBind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetTakeRequestActionCountContainedNameFromID");

	Params::EndBattleAPI_GetTakeRequestActionCountContainedNameFromID Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InName = InName;
	Parms.Upper = Upper;
	Parms.Lower = Lower;
	Parms.InIgnoreBind = InIgnoreBind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetTotalWaveCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetTotalWaveCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetTotalWaveCount");

	Params::EndBattleAPI_GetTotalWaveCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetVectorRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IgnoreX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IgnoreY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IgnoreZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndBattleAPI::GetVectorRange(float X, float Y, float Z, float IgnoreX, float IgnoreY, float IgnoreZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetVectorRange");

	Params::EndBattleAPI_GetVectorRange Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.IgnoreX = IgnoreX;
	Parms.IgnoreY = IgnoreY;
	Parms.IgnoreZ = IgnoreZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetWaveCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::GetWaveCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetWaveCount");

	Params::EndBattleAPI_GetWaveCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.GetWorldLocationAngle
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          BaseLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::GetWorldLocationAngle(const struct FVector& BaseLocation, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "GetWorldLocationAngle");

	Params::EndBattleAPI_GetWorldLocationAngle Parms{};

	Parms.BaseLocation = std::move(BaseLocation);
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.HasAbilityElement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAttributeType                 InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::HasAbilityElement(class FName InAbilityName, EEndBattleAttributeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "HasAbilityElement");

	Params::EndBattleAPI_HasAbilityElement Parms{};

	Parms.InAbilityName = InAbilityName;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.HasDamageSource
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDamageSourceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::HasDamageSource(class AEndCharacter* InChara, class FName InDamageSourceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "HasDamageSource");

	Params::EndBattleAPI_HasDamageSource Parms{};

	Parms.InChara = InChara;
	Parms.InDamageSourceID = InDamageSourceID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.HasSpecialStatusChangeType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSpecialStatusChangeType       InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::HasSpecialStatusChangeType(class AEndCharacter* InChara, EEndBattleSpecialStatusChangeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "HasSpecialStatusChangeType");

	Params::EndBattleAPI_HasSpecialStatusChangeType Parms{};

	Parms.InChara = InChara;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.HasStatusChange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleStatusChangeType              statusTypeype                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::HasStatusChange(EPlayerType PlayerType, EEndBattleStatusChangeType statusTypeype)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "HasStatusChange");

	Params::EndBattleAPI_HasStatusChange Parms{};

	Parms.PlayerType = PlayerType;
	Parms.statusTypeype = statusTypeype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.HasStatusChangeFromChara
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleStatusChangeType              statusTypeype                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::HasStatusChangeFromChara(class AEndCharacter* InChara, EEndBattleStatusChangeType statusTypeype)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "HasStatusChangeFromChara");

	Params::EndBattleAPI_HasStatusChangeFromChara Parms{};

	Parms.InChara = InChara;
	Parms.statusTypeype = statusTypeype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.HidePhysics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::HidePhysics(class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "HidePhysics");

	Params::EndBattleAPI_HidePhysics Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.IncBattleSceneCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::IncBattleSceneCount(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IncBattleSceneCount");

	Params::EndBattleAPI_IncBattleSceneCount Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.InitializeBreakable
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::InitializeBreakable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "InitializeBreakable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.InvalidNearFadeEnvPhysicsActor
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::InvalidNearFadeEnvPhysicsActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "InvalidNearFadeEnvPhysicsActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.IsAbility
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsAbility(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsAbility");

	Params::EndBattleAPI_IsAbility Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsAdditiveDamagePlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsAdditiveDamagePlaying(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsAdditiveDamagePlaying");

	Params::EndBattleAPI_IsAdditiveDamagePlaying Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsAerialNormalAttack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsAerialNormalAttack(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsAerialNormalAttack");

	Params::EndBattleAPI_IsAerialNormalAttack Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsAIPC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsAIPC(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsAIPC");

	Params::EndBattleAPI_IsAIPC Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsAIPCRangedWeaponEquipped
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsAIPCRangedWeaponEquipped(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsAIPCRangedWeaponEquipped");

	Params::EndBattleAPI_IsAIPCRangedWeaponEquipped Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsBurst
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsBurst(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsBurst");

	Params::EndBattleAPI_IsBurst Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsCharacterValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsCharacterValid(class AEndCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsCharacterValid");

	Params::EndBattleAPI_IsCharacterValid Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsCharacterValidBranch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranchBit                         OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::IsCharacterValidBranch(class AEndCharacter* InCharacter, EEndAIBranchBit* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsCharacterValidBranch");

	Params::EndBattleAPI_IsCharacterValidBranch Parms{};

	Parms.InCharacter = InCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.IsCharaHPP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAiMathCmp                           cmp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsCharaHPP(class AEndCharacter* InChara, int32 Percent, EEndAiMathCmp cmp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsCharaHPP");

	Params::EndBattleAPI_IsCharaHPP Parms{};

	Parms.InChara = InChara;
	Parms.Percent = Percent;
	Parms.cmp = cmp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsCharaID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Upper                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Lower                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsCharaID(class AEndCharacter* InChara, const class FName Upper, const class FName Lower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsCharaID");

	Params::EndBattleAPI_IsCharaID Parms{};

	Parms.InChara = InChara;
	Parms.Upper = Upper;
	Parms.Lower = Lower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsCheckBattleSceneFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEndAiBattleSceneFlag                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsCheckBattleSceneFlag(EEndAiBattleSceneFlag InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsCheckBattleSceneFlag");

	Params::EndBattleAPI_IsCheckBattleSceneFlag Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsCloudOffensiveMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsCloudOffensiveMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsCloudOffensiveMode");

	Params::EndBattleAPI_IsCloudOffensiveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsContainedMotionList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsContainedMotionList(class AEndCharacter* InChara, class FName InMot1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsContainedMotionList");

	Params::EndBattleAPI_IsContainedMotionList Parms{};

	Parms.InChara = InChara;
	Parms.InMot1 = InMot1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsContainedMotionList2
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsContainedMotionList2(class AEndCharacter* InChara, class FName InMot1, class FName InMot2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsContainedMotionList2");

	Params::EndBattleAPI_IsContainedMotionList2 Parms{};

	Parms.InChara = InChara;
	Parms.InMot1 = InMot1;
	Parms.InMot2 = InMot2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsContainedMotionList3
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsContainedMotionList3(class AEndCharacter* InChara, class FName InMot1, class FName InMot2, class FName InMot3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsContainedMotionList3");

	Params::EndBattleAPI_IsContainedMotionList3 Parms{};

	Parms.InChara = InChara;
	Parms.InMot1 = InMot1;
	Parms.InMot2 = InMot2;
	Parms.InMot3 = InMot3;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsContainedMotionList4
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot4                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsContainedMotionList4(class AEndCharacter* InChara, class FName InMot1, class FName InMot2, class FName InMot3, class FName InMot4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsContainedMotionList4");

	Params::EndBattleAPI_IsContainedMotionList4 Parms{};

	Parms.InChara = InChara;
	Parms.InMot1 = InMot1;
	Parms.InMot2 = InMot2;
	Parms.InMot3 = InMot3;
	Parms.InMot4 = InMot4;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsContainedMotionList5
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot3                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot4                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMot5                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsContainedMotionList5(class AEndCharacter* InChara, class FName InMot1, class FName InMot2, class FName InMot3, class FName InMot4, class FName InMot5)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsContainedMotionList5");

	Params::EndBattleAPI_IsContainedMotionList5 Parms{};

	Parms.InChara = InChara;
	Parms.InMot1 = InMot1;
	Parms.InMot2 = InMot2;
	Parms.InMot3 = InMot3;
	Parms.InMot4 = InMot4;
	Parms.InMot5 = InMot5;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsContainedMotionListArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     InMot                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsContainedMotionListArray(class AEndCharacter* InChara, const TArray<class FName>& InMot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsContainedMotionListArray");

	Params::EndBattleAPI_IsContainedMotionListArray Parms{};

	Parms.InChara = InChara;
	Parms.InMot = std::move(InMot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDamage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDamage(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDamage");

	Params::EndBattleAPI_IsDamage Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDamageSourceFlagDisableFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDamageSourceFlagDisableFinish(int32 Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDamageSourceFlagDisableFinish");

	Params::EndBattleAPI_IsDamageSourceFlagDisableFinish Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDisableTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDisableTarget(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDisableTarget");

	Params::EndBattleAPI_IsDisableTarget Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDodge
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDodge(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDodge");

	Params::EndBattleAPI_IsDodge Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDodgeInvincible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDodgeInvincible(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDodgeInvincible");

	Params::EndBattleAPI_IsDodgeInvincible Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDodgeResetUniqueAbility
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDodgeResetUniqueAbility(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDodgeResetUniqueAbility");

	Params::EndBattleAPI_IsDodgeResetUniqueAbility Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsDummyPartyMember
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsDummyPartyMember(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsDummyPartyMember");

	Params::EndBattleAPI_IsDummyPartyMember Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsEntryNavVolumeArea
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EModifierVolumeType                     InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsEntryNavVolumeArea(class AEndCharacter* InChara, EModifierVolumeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsEntryNavVolumeArea");

	Params::EndBattleAPI_IsEntryNavVolumeArea Parms{};

	Parms.InChara = InChara;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsExistCurrentAerialVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsExistCurrentAerialVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsExistCurrentAerialVolume");

	Params::EndBattleAPI_IsExistCurrentAerialVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsFillLimitPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             PlayerCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsFillLimitPlayer(class FName PlayerCharaName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsFillLimitPlayer");

	Params::EndBattleAPI_IsFillLimitPlayer Parms{};

	Parms.PlayerCharaName = PlayerCharaName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsGuard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsGuard(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsGuard");

	Params::EndBattleAPI_IsGuard Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsInAIPCDangerWarning
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsInAIPCDangerWarning(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsInAIPCDangerWarning");

	Params::EndBattleAPI_IsInAIPCDangerWarning Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsInFanRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    OwnerCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   baseYaw                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   angleRange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RadiusMin                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RadiusMax                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          targetPosition                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsInFanRange(class AEndCharacter* OwnerCharacter, float baseYaw, float angleRange, float RadiusMin, float RadiusMax, const struct FVector& targetPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsInFanRange");

	Params::EndBattleAPI_IsInFanRange Parms{};

	Parms.OwnerCharacter = OwnerCharacter;
	Parms.baseYaw = baseYaw;
	Parms.angleRange = angleRange;
	Parms.RadiusMin = RadiusMin;
	Parms.RadiusMax = RadiusMax;
	Parms.targetPosition = std::move(targetPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsInScreen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsInScreen(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsInScreen");

	Params::EndBattleAPI_IsInScreen Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsInSummonCutScene
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsInSummonCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsInSummonCutScene");

	Params::EndBattleAPI_IsInSummonCutScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsInSyncAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsInSyncAction(class AEndCharacter* chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsInSyncAction");

	Params::EndBattleAPI_IsInSyncAction Parms{};

	Parms.chara = chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsItem(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsItem");

	Params::EndBattleAPI_IsItem Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsLaunchActionPlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsLaunchActionPlaying(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsLaunchActionPlaying");

	Params::EndBattleAPI_IsLaunchActionPlaying Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsLimit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsLimit(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsLimit");

	Params::EndBattleAPI_IsLimit Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsMagic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsMagic(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsMagic");

	Params::EndBattleAPI_IsMagic Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsNormal
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InAbilityName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsNormal(class FName InAbilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsNormal");

	Params::EndBattleAPI_IsNormal Parms{};

	Parms.InAbilityName = InAbilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsOverlapCharaFromName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InVolumeName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsOverlapCharaFromName(class FName InVolumeName, class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsOverlapCharaFromName");

	Params::EndBattleAPI_IsOverlapCharaFromName Parms{};

	Parms.InVolumeName = InVolumeName;
	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsOverlapPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndNavModifierVolume*            InVolume                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPoint                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsOverlapPoint(class AEndNavModifierVolume* InVolume, const struct FVector& InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsOverlapPoint");

	Params::EndBattleAPI_IsOverlapPoint Parms{};

	Parms.InVolume = InVolume;
	Parms.InPoint = std::move(InPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsPartyPinch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsPartyPinch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsPartyPinch");

	Params::EndBattleAPI_IsPartyPinch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsPlayer(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsPlayer");

	Params::EndBattleAPI_IsPlayer Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsPlayerCharacterValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsPlayerCharacterValid(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsPlayerCharacterValid");

	Params::EndBattleAPI_IsPlayerCharacterValid Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsPlayerPinch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsPlayerPinch(const EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsPlayerPinch");

	Params::EndBattleAPI_IsPlayerPinch Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsRaceID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsRaceID(class AEndCharacter* InChara, int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsRaceID");

	Params::EndBattleAPI_IsRaceID Parms{};

	Parms.InChara = InChara;
	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsRequestWaveData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             BattleSceneID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsRequestWaveData(class FName BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsRequestWaveData");

	Params::EndBattleAPI_IsRequestWaveData Parms{};

	Parms.BattleSceneID = BattleSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsRewardEnable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleRewardType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsRewardEnable(class AEndCharacter* InChara, EEndBattleRewardType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsRewardEnable");

	Params::EndBattleAPI_IsRewardEnable Parms{};

	Parms.InChara = InChara;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsSummon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsSummon(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsSummon");

	Params::EndBattleAPI_IsSummon Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsSummonGaugeZero
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsSummonGaugeZero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsSummonGaugeZero");

	Params::EndBattleAPI_IsSummonGaugeZero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsUniqueAbility
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsUniqueAbility(class FName AbilityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsUniqueAbility");

	Params::EndBattleAPI_IsUniqueAbility Parms{};

	Parms.AbilityID = AbilityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.IsWithinCharaEQS
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPoint                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::IsWithinCharaEQS(class AEndCharacter* InChara, const struct FVector& InPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "IsWithinCharaEQS");

	Params::EndBattleAPI_IsWithinCharaEQS Parms{};

	Parms.InChara = InChara;
	Parms.InPoint = std::move(InPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.MinusEqualFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::MinusEqualFloat(float& ValueA, float ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "MinusEqualFloat");

	Params::EndBattleAPI_MinusEqualFloat Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.MinusEqualInterger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::MinusEqualInterger(int32& ValueA, int32 ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "MinusEqualInterger");

	Params::EndBattleAPI_MinusEqualInterger Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.MulEqualFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::MulEqualFloat(float& ValueA, float ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "MulEqualFloat");

	Params::EndBattleAPI_MulEqualFloat Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.MulEqualInterger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::MulEqualInterger(int32& ValueA, int32 ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "MulEqualInterger");

	Params::EndBattleAPI_MulEqualInterger Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.NotifyHGFireWallToAIPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    onoff                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::NotifyHGFireWallToAIPC(bool onoff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "NotifyHGFireWallToAIPC");

	Params::EndBattleAPI_NotifyHGFireWallToAIPC Parms{};

	Parms.onoff = onoff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OnSeparateBodyAndRootForAIPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    onoff                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::OnSeparateBodyAndRootForAIPC(class AEndCharacter* Character, bool onoff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OnSeparateBodyAndRootForAIPC");

	Params::EndBattleAPI_OnSeparateBodyAndRootForAIPC Parms{};

	Parms.Character = Character;
	Parms.onoff = onoff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OnSummonActivateTriggerAction
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::OnSummonActivateTriggerAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OnSummonActivateTriggerAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OnSummonFinishActivatePhase
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::OnSummonFinishActivatePhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OnSummonFinishActivatePhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OverrideAIPCLeader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             NewLeader                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::OverrideAIPCLeader(const EPlayerType PlayerCharacter, const EPlayerType NewLeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OverrideAIPCLeader");

	Params::EndBattleAPI_OverrideAIPCLeader Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.NewLeader = NewLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OverrideSummonCaptureTimeLimit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::OverrideSummonCaptureTimeLimit(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OverrideSummonCaptureTimeLimit");

	Params::EndBattleAPI_OverrideSummonCaptureTimeLimit Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OverrideSummonCutSceneReturnLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::OverrideSummonCutSceneReturnLocation(class AEndCharacter* Character, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OverrideSummonCutSceneReturnLocation");

	Params::EndBattleAPI_OverrideSummonCutSceneReturnLocation Parms{};

	Parms.Character = Character;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.OverrideSummonPointToIncreaseOneSecond
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Point                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::OverrideSummonPointToIncreaseOneSecond(float Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "OverrideSummonPointToIncreaseOneSecond");

	Params::EndBattleAPI_OverrideSummonPointToIncreaseOneSecond Parms{};

	Parms.Point = Point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.PlayBattleCameraSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraSequenceID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    HasResourceChara                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::PlayBattleCameraSequence(class FName CameraSequenceID, class AEndCharacter* ownerChara, class AEndCharacter* HasResourceChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "PlayBattleCameraSequence");

	Params::EndBattleAPI_PlayBattleCameraSequence Parms{};

	Parms.CameraSequenceID = CameraSequenceID;
	Parms.ownerChara = ownerChara;
	Parms.HasResourceChara = HasResourceChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.PlayBreakableDestructionAnim
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             BreakableID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::PlayBreakableDestructionAnim(class FName BreakableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "PlayBreakableDestructionAnim");

	Params::EndBattleAPI_PlayBreakableDestructionAnim Parms{};

	Parms.BreakableID = BreakableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.PlayEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   CategoryType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResourceName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           AttachActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachSocketName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::PlayEffect(int32 CategoryType, class FName ResourceName, class AActor* AttachActor, class FName AttachSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "PlayEffect");

	Params::EndBattleAPI_PlayEffect Parms{};

	Parms.CategoryType = CategoryType;
	Parms.ResourceName = ResourceName;
	Parms.AttachActor = AttachActor;
	Parms.AttachSocketName = AttachSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.PlusEqualFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::PlusEqualFloat(float& ValueA, float ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "PlusEqualFloat");

	Params::EndBattleAPI_PlusEqualFloat Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.PlusEqualInterger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ValueA                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ValueB                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleAPI::PlusEqualInterger(int32& ValueA, int32 ValueB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "PlusEqualInterger");

	Params::EndBattleAPI_PlusEqualInterger Parms{};

	Parms.ValueA = ValueA;
	Parms.ValueB = ValueB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ValueA = Parms.ValueA;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.RangeSwitch2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bContainEqual                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch2Other                      OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RangeSwitch2(float Value, float Min1, float Max1, float Min2, float Max2, bool bContainEqual, EEndAIBranch2Other* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RangeSwitch2");

	Params::EndBattleAPI_RangeSwitch2 Parms{};

	Parms.Value = Value;
	Parms.Min1 = Min1;
	Parms.Max1 = Max1;
	Parms.Min2 = Min2;
	Parms.Max2 = Max2;
	Parms.bContainEqual = bContainEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RangeSwitch3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bContainEqual                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch3Other                      OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RangeSwitch3(float Value, float Min1, float Max1, float Min2, float Max2, float Min3, float Max3, bool bContainEqual, EEndAIBranch3Other* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RangeSwitch3");

	Params::EndBattleAPI_RangeSwitch3 Parms{};

	Parms.Value = Value;
	Parms.Min1 = Min1;
	Parms.Max1 = Max1;
	Parms.Min2 = Min2;
	Parms.Max2 = Max2;
	Parms.Min3 = Min3;
	Parms.Max3 = Max3;
	Parms.bContainEqual = bContainEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RangeSwitch4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max3                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Min4                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max4                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bContainEqual                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch4Other                      OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RangeSwitch4(float Value, float Min1, float Max1, float Min2, float Max2, float Min3, float Max3, float Min4, float Max4, bool bContainEqual, EEndAIBranch4Other* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RangeSwitch4");

	Params::EndBattleAPI_RangeSwitch4 Parms{};

	Parms.Value = Value;
	Parms.Min1 = Min1;
	Parms.Max1 = Max1;
	Parms.Min2 = Min2;
	Parms.Max2 = Max2;
	Parms.Min3 = Min3;
	Parms.Max3 = Max3;
	Parms.Min4 = Min4;
	Parms.Max4 = Max4;
	Parms.bContainEqual = bContainEqual;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch2
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch2                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch2(int32 Case1, int32 Case2, EEndAIBranch2* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch2");

	Params::EndBattleAPI_RatioBranch2 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch3
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch3                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch3(int32 Case1, int32 Case2, int32 Case3, EEndAIBranch3* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch3");

	Params::EndBattleAPI_RatioBranch3 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;
	Parms.Case3 = Case3;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch4
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case4                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch4                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch4(int32 Case1, int32 Case2, int32 Case3, int32 Case4, EEndAIBranch4* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch4");

	Params::EndBattleAPI_RatioBranch4 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;
	Parms.Case3 = Case3;
	Parms.Case4 = Case4;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch5
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case4                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case5                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch5                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch5(int32 Case1, int32 Case2, int32 Case3, int32 Case4, int32 Case5, EEndAIBranch5* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch5");

	Params::EndBattleAPI_RatioBranch5 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;
	Parms.Case3 = Case3;
	Parms.Case4 = Case4;
	Parms.Case5 = Case5;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch6
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case4                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case5                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case6                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch6                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch6(int32 Case1, int32 Case2, int32 Case3, int32 Case4, int32 Case5, int32 Case6, EEndAIBranch6* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch6");

	Params::EndBattleAPI_RatioBranch6 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;
	Parms.Case3 = Case3;
	Parms.Case4 = Case4;
	Parms.Case5 = Case5;
	Parms.Case6 = Case6;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch7
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case4                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case5                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case6                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case7                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch7                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch7(int32 Case1, int32 Case2, int32 Case3, int32 Case4, int32 Case5, int32 Case6, int32 Case7, EEndAIBranch7* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch7");

	Params::EndBattleAPI_RatioBranch7 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;
	Parms.Case3 = Case3;
	Parms.Case4 = Case4;
	Parms.Case5 = Case5;
	Parms.Case6 = Case6;
	Parms.Case7 = Case7;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RatioBranch8
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Case1                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case2                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case3                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case4                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case5                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case6                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case7                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Case8                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndAIBranch8                           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RatioBranch8(int32 Case1, int32 Case2, int32 Case3, int32 Case4, int32 Case5, int32 Case6, int32 Case7, int32 Case8, EEndAIBranch8* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RatioBranch8");

	Params::EndBattleAPI_RatioBranch8 Parms{};

	Parms.Case1 = Case1;
	Parms.Case2 = Case2;
	Parms.Case3 = Case3;
	Parms.Case4 = Case4;
	Parms.Case5 = Case5;
	Parms.Case6 = Case6;
	Parms.Case7 = Case7;
	Parms.Case8 = Case8;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleAPI.RaycastSphereWallFromChara
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCastRange                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutHit                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       OutParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UEndBattleAPI::RaycastSphereWallFromChara(class AEndCharacter* InCharacter, float InOffsetYaw, float InCastRange, float InRadius, bool* OutHit, float* OutDistance, struct FHitResult* OutParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RaycastSphereWallFromChara");

	Params::EndBattleAPI_RaycastSphereWallFromChara Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.InCastRange = InCastRange;
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHit != nullptr)
		*OutHit = Parms.OutHit;

	if (OutDistance != nullptr)
		*OutDistance = Parms.OutDistance;

	if (OutParam != nullptr)
		*OutParam = std::move(Parms.OutParam);
}


// Function EndGame.EndBattleAPI.RaycastWallFromChara
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetYaw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCastRange                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutHit                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       OutParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UEndBattleAPI::RaycastWallFromChara(class AEndCharacter* InCharacter, float InOffsetYaw, float InCastRange, bool* OutHit, float* OutDistance, struct FHitResult* OutParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RaycastWallFromChara");

	Params::EndBattleAPI_RaycastWallFromChara Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InOffsetYaw = InOffsetYaw;
	Parms.InCastRange = InCastRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHit != nullptr)
		*OutHit = Parms.OutHit;

	if (OutDistance != nullptr)
		*OutDistance = Parms.OutDistance;

	if (OutParam != nullptr)
		*OutParam = std::move(Parms.OutParam);
}


// Function EndGame.EndBattleAPI.RefreshRole
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::RefreshRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RefreshRole");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ReleaseBattleFieldBySummonBoss
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ReleaseBattleFieldBySummonBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ReleaseBattleFieldBySummonBoss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RemoveAttachEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachSocketName                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResourceName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RemoveAttachEffect(class AEndCharacter* chara, const class FName AttachSocketName, const class FName ResourceName, bool bDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RemoveAttachEffect");

	Params::EndBattleAPI_RemoveAttachEffect Parms{};

	Parms.chara = chara;
	Parms.AttachSocketName = AttachSocketName;
	Parms.ResourceName = ResourceName;
	Parms.bDestroy = bDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RemoveCollisionIgnoreActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             IgnoreActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RemoveCollisionIgnoreActor(class AEndCharacter* ownerChara, class FName IgnoreActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RemoveCollisionIgnoreActor");

	Params::EndBattleAPI_RemoveCollisionIgnoreActor Parms{};

	Parms.ownerChara = ownerChara;
	Parms.IgnoreActorName = IgnoreActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RemoveFreeAct
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RemoveFreeAct(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RemoveFreeAct");

	Params::EndBattleAPI_RemoveFreeAct Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RemoveSpecialStatusChangeType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSpecialStatusChangeType       InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RemoveSpecialStatusChangeType(class AEndCharacter* InChara, EEndBattleSpecialStatusChangeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RemoveSpecialStatusChangeType");

	Params::EndBattleAPI_RemoveSpecialStatusChangeType Parms{};

	Parms.InChara = InChara;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RemoveStatusChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleStatusChangeType              statusTypeype                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RemoveStatusChange(EPlayerType PlayerType, EEndBattleStatusChangeType statusTypeype)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RemoveStatusChange");

	Params::EndBattleAPI_RemoveStatusChange Parms{};

	Parms.PlayerType = PlayerType;
	Parms.statusTypeype = statusTypeype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestAIPCAbility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::RequestAIPCAbility(EPlayerType PlayerType, class FName AbilityID, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestAIPCAbility");

	Params::EndBattleAPI_RequestAIPCAbility Parms{};

	Parms.PlayerType = PlayerType;
	Parms.AbilityID = AbilityID;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.RequestAIPCExecuteAbility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestAIPCExecuteAbility(class AEndCharacter* TargetCharacter, const class FName AbilityID, const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestAIPCExecuteAbility");

	Params::EndBattleAPI_RequestAIPCExecuteAbility Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.AbilityID = AbilityID;
	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestFreeActMotion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMotionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLoop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestFreeActMotion(class FName InName, class AEndCharacter* InChara, class FName InMotionName, bool InLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestFreeActMotion");

	Params::EndBattleAPI_RequestFreeActMotion Parms{};

	Parms.InName = InName;
	Parms.InChara = InChara;
	Parms.InMotionName = InMotionName;
	Parms.InLoop = InLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestFreeActMotionEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEndName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestFreeActMotionEnd(class FName InName, class AEndCharacter* InChara, class FName InEndName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestFreeActMotionEnd");

	Params::EndBattleAPI_RequestFreeActMotionEnd Parms{};

	Parms.InName = InName;
	Parms.InChara = InChara;
	Parms.InEndName = InEndName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestFreeActMove
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ToleranceWalkRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ToleranceGoalRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDash                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestFreeActMove(class FName InName, class AEndCharacter* InChara, const struct FVector& InLocation, float ToleranceWalkRadius, float ToleranceGoalRadius, bool InDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestFreeActMove");

	Params::EndBattleAPI_RequestFreeActMove Parms{};

	Parms.InName = InName;
	Parms.InChara = InChara;
	Parms.InLocation = std::move(InLocation);
	Parms.ToleranceWalkRadius = ToleranceWalkRadius;
	Parms.ToleranceGoalRadius = ToleranceGoalRadius;
	Parms.InDash = InDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestFreeActMoves
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  InLocations                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ToleranceWalkRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ToleranceGoalRadius                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDash                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestFreeActMoves(class FName InName, class AEndCharacter* InChara, const TArray<struct FVector>& InLocations, float ToleranceWalkRadius, float ToleranceGoalRadius, bool InDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestFreeActMoves");

	Params::EndBattleAPI_RequestFreeActMoves Parms{};

	Parms.InName = InName;
	Parms.InChara = InChara;
	Parms.InLocations = std::move(InLocations);
	Parms.ToleranceWalkRadius = ToleranceWalkRadius;
	Parms.ToleranceGoalRadius = ToleranceGoalRadius;
	Parms.InDash = InDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestFreeActTurn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ToleranceYaw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestFreeActTurn(class FName InName, class AEndCharacter* InChara, float InYaw, float ToleranceYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestFreeActTurn");

	Params::EndBattleAPI_RequestFreeActTurn Parms{};

	Parms.InName = InName;
	Parms.InChara = InChara;
	Parms.InYaw = InYaw;
	Parms.ToleranceYaw = ToleranceYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestFreeActWarp
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestFreeActWarp(class FName InName, class AEndCharacter* InChara, const struct FVector& InLocation, float InYaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestFreeActWarp");

	Params::EndBattleAPI_RequestFreeActWarp Parms{};

	Parms.InName = InName;
	Parms.InChara = InChara;
	Parms.InLocation = std::move(InLocation);
	Parms.InYaw = InYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestSyncActionEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    chara                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSyncActionEndType             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::RequestSyncActionEnd(class AEndCharacter* chara, EEndBattleSyncActionEndType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestSyncActionEnd");

	Params::EndBattleAPI_RequestSyncActionEnd Parms{};

	Parms.chara = chara;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RequestWaveBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EndWaveBattleSceneType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument00                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument01                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument02                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument03                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::RequestWaveBattleScene(class UObject* WorldContextObject, class FName baseBattleSceneId, class AEndCharacter* causerChara, EndWaveBattleSceneType Type, int32 IntegerArgument00, int32 IntegerArgument01, int32 IntegerArgument02, int32 IntegerArgument03)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestWaveBattleScene");

	Params::EndBattleAPI_RequestWaveBattleScene Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.causerChara = causerChara;
	Parms.Type = Type;
	Parms.IntegerArgument00 = IntegerArgument00;
	Parms.IntegerArgument01 = IntegerArgument01;
	Parms.IntegerArgument02 = IntegerArgument02;
	Parms.IntegerArgument03 = IntegerArgument03;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.RequestWaveBattleSceneWithPopTransform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             baseBattleSceneId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    causerChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EndWaveBattleSceneType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument00                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument01                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument02                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntegerArgument03                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               popTransforms                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndBattleAPI::RequestWaveBattleSceneWithPopTransform(class UObject* WorldContextObject, class FName baseBattleSceneId, class AEndCharacter* causerChara, EndWaveBattleSceneType Type, int32 IntegerArgument00, int32 IntegerArgument01, int32 IntegerArgument02, int32 IntegerArgument03, const TArray<struct FTransform>& popTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RequestWaveBattleSceneWithPopTransform");

	Params::EndBattleAPI_RequestWaveBattleSceneWithPopTransform Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.baseBattleSceneId = baseBattleSceneId;
	Parms.causerChara = causerChara;
	Parms.Type = Type;
	Parms.IntegerArgument00 = IntegerArgument00;
	Parms.IntegerArgument01 = IntegerArgument01;
	Parms.IntegerArgument02 = IntegerArgument02;
	Parms.IntegerArgument03 = IntegerArgument03;
	Parms.popTransforms = std::move(popTransforms);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.ResetActiveBattleAIController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetActiveBattleAIController(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetActiveBattleAIController");

	Params::EndBattleAPI_ResetActiveBattleAIController Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetAIPCCombatArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetAIPCCombatArea(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetAIPCCombatArea");

	Params::EndBattleAPI_ResetAIPCCombatArea Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetAIPCExcludeTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetAIPCExcludeTarget(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetAIPCExcludeTarget");

	Params::EndBattleAPI_ResetAIPCExcludeTarget Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetAIPCTargetChoosingParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetAIPCTargetChoosingParam(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetAIPCTargetChoosingParam");

	Params::EndBattleAPI_ResetAIPCTargetChoosingParam Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetAIPCTargetDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetAIPCTargetDirect(const EPlayerType PlayerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetAIPCTargetDirect");

	Params::EndBattleAPI_ResetAIPCTargetDirect Parms{};

	Parms.PlayerCharacter = PlayerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetCharacterMovementMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetCharacterMovementMode(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetCharacterMovementMode");

	Params::EndBattleAPI_ResetCharacterMovementMode Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetFreeAct
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ResetFreeAct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetFreeAct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetFreeActFromChara
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetFreeActFromChara(class AEndCharacter* InChara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetFreeActFromChara");

	Params::EndBattleAPI_ResetFreeActFromChara Parms{};

	Parms.InChara = InChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetRedXIIIAbilityExclusionTarget
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ResetRedXIIIAbilityExclusionTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetRedXIIIAbilityExclusionTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetSummonCutSceneReturnLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ResetSummonCutSceneReturnLocation(class AEndCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetSummonCutSceneReturnLocation");

	Params::EndBattleAPI_ResetSummonCutSceneReturnLocation Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ResetSummonPointToIncreaseOneSecond
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ResetSummonPointToIncreaseOneSecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ResetSummonPointToIncreaseOneSecond");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.RestrictBattleFieldBySummonBoss
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::RestrictBattleFieldBySummonBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "RestrictBattleFieldBySummonBoss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendBattleMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EBattleMessageTarget                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendBattleMessage(EBattleMessageTarget InTarget, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendBattleMessage");

	Params::EndBattleAPI_SendBattleMessage Parms{};

	Parms.InTarget = InTarget;
	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendDangerWarning
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleAIDangerAreaType              DangerAreaType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          CenterLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendDangerWarning(class AEndCharacter* Instigator, EEndBattleAIDangerAreaType DangerAreaType, const struct FVector& CenterLocation, const struct FVector& Direction, float Radius, float Length, float Width, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendDangerWarning");

	Params::EndBattleAPI_SendDangerWarning Parms{};

	Parms.Instigator = Instigator;
	Parms.DangerAreaType = DangerAreaType;
	Parms.CenterLocation = std::move(CenterLocation);
	Parms.Direction = std::move(Direction);
	Parms.Radius = Radius;
	Parms.Length = Length;
	Parms.Width = Width;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendDangerWarningMultipleShape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FEndBattleAIDangerWarningParam   DangerWarning                                          (Parm, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendDangerWarningMultipleShape(const struct FEndBattleAIDangerWarningParam& DangerWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendDangerWarningMultipleShape");

	Params::EndBattleAPI_SendDangerWarningMultipleShape Parms{};

	Parms.DangerWarning = std::move(DangerWarning);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendDangerWarningStaticVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendDangerWarningStaticVolume(class AEndCharacter* Instigator, float Duration, int32 GroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendDangerWarningStaticVolume");

	Params::EndBattleAPI_SendDangerWarningStaticVolume Parms{};

	Parms.Instigator = Instigator;
	Parms.Duration = Duration;
	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendMetaMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendMetaMessage(const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendMetaMessage");

	Params::EndBattleAPI_SendMetaMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendMetaMessageAboutCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendMetaMessageAboutCharacter(class AEndCharacter* InChara, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendMetaMessageAboutCharacter");

	Params::EndBattleAPI_SendMetaMessageAboutCharacter Parms{};

	Parms.InChara = InChara;
	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendMetaMessageToChara
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InSend                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    InResv                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendMetaMessageToChara(class AEndCharacter* InSend, class AEndCharacter* InResv, const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendMetaMessageToChara");

	Params::EndBattleAPI_SendMetaMessageToChara Parms{};

	Parms.InSend = InSend;
	Parms.InResv = InResv;
	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SendSystemMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           InMessage                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SendSystemMessage(const class FString& InMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SendSystemMessage");

	Params::EndBattleAPI_SendSystemMessage Parms{};

	Parms.InMessage = std::move(InMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetActiveBattleAIController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndBattleAIController*           BattleAIController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetActiveBattleAIController(class AEndCharacter* InChara, class AEndBattleAIController* BattleAIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetActiveBattleAIController");

	Params::EndBattleAPI_SetActiveBattleAIController Parms{};

	Parms.InChara = InChara;
	Parms.BattleAIController = BattleAIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetActiveBattleAIControllerFromID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetActiveBattleAIControllerFromID(class AEndCharacter* InChara, int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetActiveBattleAIControllerFromID");

	Params::EndBattleAPI_SetActiveBattleAIControllerFromID Parms{};

	Parms.InChara = InChara;
	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetActorLocationAndRotationToRoot
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NewLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         NewRotator                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetActorLocationAndRotationToRoot(class AEndCharacter* Character, const struct FVector& NewLocation, const struct FRotator& NewRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetActorLocationAndRotationToRoot");

	Params::EndBattleAPI_SetActorLocationAndRotationToRoot Parms{};

	Parms.Character = Character;
	Parms.NewLocation = std::move(NewLocation);
	Parms.NewRotator = std::move(NewRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetActorPause
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTickPause                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDrawPause                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetActorPause(class AActor* Actor, bool bTickPause, bool bDrawPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetActorPause");

	Params::EndBattleAPI_SetActorPause Parms{};

	Parms.Actor = Actor;
	Parms.bTickPause = bTickPause;
	Parms.bDrawPause = bDrawPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCCombatDistanceOffset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AlsoAbilityOffset                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCCombatDistanceOffset(const EPlayerType PlayerCharacter, float Offset, bool AlsoAbilityOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCCombatDistanceOffset");

	Params::EndBattleAPI_SetAIPCCombatDistanceOffset Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.Offset = Offset;
	Parms.AlsoAbilityOffset = AlsoAbilityOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCDefenceActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BestDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCDefenceActor(EPlayerType PlayerType, class AActor* TargetActor, float MaxDistance, float BestDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCDefenceActor");

	Params::EndBattleAPI_SetAIPCDefenceActor Parms{};

	Parms.PlayerType = PlayerType;
	Parms.TargetActor = TargetActor;
	Parms.MaxDistance = MaxDistance;
	Parms.BestDistance = BestDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCDefenceLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BestDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCDefenceLocation(EPlayerType PlayerType, const struct FVector& TargetLocation, float MaxDistance, float BestDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCDefenceLocation");

	Params::EndBattleAPI_SetAIPCDefenceLocation Parms{};

	Parms.PlayerType = PlayerType;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.MaxDistance = MaxDistance;
	Parms.BestDistance = BestDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCExcludeTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCExcludeTarget(EPlayerType PlayerType, class AEndCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCExcludeTarget");

	Params::EndBattleAPI_SetAIPCExcludeTarget Parms{};

	Parms.PlayerType = PlayerType;
	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCFleeTargets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    PlayerCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            FleeTargets                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCFleeTargets(class AEndCharacter* PlayerCharacter, const TArray<class AEndCharacter*>& FleeTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCFleeTargets");

	Params::EndBattleAPI_SetAIPCFleeTargets Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.FleeTargets = std::move(FleeTargets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCTakeCover
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    CoverTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CoverTargetPartsID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCTakeCover(EPlayerType PlayerCharacter, bool Flag, class AEndCharacter* CoverTarget, class FName CoverTargetPartsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCTakeCover");

	Params::EndBattleAPI_SetAIPCTakeCover Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.Flag = Flag;
	Parms.CoverTarget = CoverTarget;
	Parms.CoverTargetPartsID = CoverTargetPartsID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCTargetChoosingParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ETargetChoosingTag>              PriorityTagList                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ETargetChoosingSort                     SortMethod                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            AssignedTargets                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCTargetChoosingParam(const EPlayerType PlayerCharacter, const TArray<ETargetChoosingTag>& PriorityTagList, ETargetChoosingSort SortMethod, const TArray<class AEndCharacter*>& AssignedTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCTargetChoosingParam");

	Params::EndBattleAPI_SetAIPCTargetChoosingParam Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.PriorityTagList = std::move(PriorityTagList);
	Parms.SortMethod = SortMethod;
	Parms.AssignedTargets = std::move(AssignedTargets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCTargetDirect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             partsID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetOverrideTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCTargetDirect(const EPlayerType PlayerCharacter, class AEndCharacter* TargetCharacter, const class FName partsID, float TargetOverrideTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCTargetDirect");

	Params::EndBattleAPI_SetAIPCTargetDirect Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.partsID = partsID;
	Parms.TargetOverrideTime = TargetOverrideTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCTargetDirectMultipleParts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     PartsIDList                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCTargetDirectMultipleParts(const EPlayerType PlayerCharacter, class AEndCharacter* TargetCharacter, const TArray<class FName>& PartsIDList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCTargetDirectMultipleParts");

	Params::EndBattleAPI_SetAIPCTargetDirectMultipleParts Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.TargetCharacter = TargetCharacter;
	Parms.PartsIDList = std::move(PartsIDList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetAIPCToSafeArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetAIPCToSafeArea(const EPlayerType PlayerCharacter, const bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetAIPCToSafeArea");

	Params::EndBattleAPI_SetAIPCToSafeArea Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetATB
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetATB(EPlayerType PlayerType, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetATB");

	Params::EndBattleAPI_SetATB Parms{};

	Parms.PlayerType = PlayerType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetATBAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetATBAll(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetATBAll");

	Params::EndBattleAPI_SetATBAll Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetBattleSafeTransform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetBattleSafeTransform(class AEndCharacter* InChara, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetBattleSafeTransform");

	Params::EndBattleAPI_SetBattleSafeTransform Parms{};

	Parms.InChara = InChara;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetBattleSceneCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetBattleSceneCount(class FName InName, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetBattleSceneCount");

	Params::EndBattleAPI_SetBattleSceneCount Parms{};

	Parms.InName = InName;
	Parms.InCount = InCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetBattleSceneCountLifeCycle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleSceneCountLifeCycleType       InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetBattleSceneCountLifeCycle(class FName InName, EEndBattleSceneCountLifeCycleType InType, int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetBattleSceneCountLifeCycle");

	Params::EndBattleAPI_SetBattleSceneCountLifeCycle Parms{};

	Parms.InName = InName;
	Parms.InType = InType;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetCharacterMovementMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMovable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHitWall                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHitObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFitFloor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMaxWeight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetCharacterMovementMode(class AEndCharacter* InChara, bool bMovable, bool bHitWall, bool bHitObject, bool bFitFloor, bool bMaxWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetCharacterMovementMode");

	Params::EndBattleAPI_SetCharacterMovementMode Parms{};

	Parms.InChara = InChara;
	Parms.bMovable = bMovable;
	Parms.bHitWall = bHitWall;
	Parms.bHitObject = bHitObject;
	Parms.bFitFloor = bFitFloor;
	Parms.bMaxWeight = bMaxWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetDisableTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDisable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    hitDamage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TargetParts                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    refreshTargetLock                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetDisableTarget(class AEndCharacter* InChara, bool InDisable, bool hitDamage, bool TargetParts, bool refreshTargetLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetDisableTarget");

	Params::EndBattleAPI_SetDisableTarget Parms{};

	Parms.InChara = InChara;
	Parms.InDisable = InDisable;
	Parms.hitDamage = hitDamage;
	Parms.TargetParts = TargetParts;
	Parms.refreshTargetLock = refreshTargetLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetDisplayEnemyStatusCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetDisplayEnemyStatusCharacter(class AEndCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetDisplayEnemyStatusCharacter");

	Params::EndBattleAPI_SetDisplayEnemyStatusCharacter Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetDrawDangerArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetDrawDangerArea(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetDrawDangerArea");

	Params::EndBattleAPI_SetDrawDangerArea Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetDrawPauseEnvironmentPhysicsActors
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   objectList                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    drawPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    tickPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetDrawPauseEnvironmentPhysicsActors(const TArray<class AActor*>& objectList, bool drawPause, bool tickPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetDrawPauseEnvironmentPhysicsActors");

	Params::EndBattleAPI_SetDrawPauseEnvironmentPhysicsActors Parms{};

	Parms.objectList = std::move(objectList);
	Parms.drawPause = drawPause;
	Parms.tickPause = tickPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetEnableEquipmentSkillFrogAlways
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    frogAfterDebuffDisable                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetEnableEquipmentSkillFrogAlways(bool Enable, bool frogAfterDebuffDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetEnableEquipmentSkillFrogAlways");

	Params::EndBattleAPI_SetEnableEquipmentSkillFrogAlways Parms{};

	Parms.Enable = Enable;
	Parms.frogAfterDebuffDisable = frogAfterDebuffDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetEnableSensorInfluence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    causerCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetEnableSensorInfluence(EPlayerType PlayerType, bool Enable, class AEndCharacter* causerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetEnableSensorInfluence");

	Params::EndBattleAPI_SetEnableSensorInfluence Parms{};

	Parms.PlayerType = PlayerType;
	Parms.Enable = Enable;
	Parms.causerCharacter = causerCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetFindTargetNoLimit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetFindTargetNoLimit(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetFindTargetNoLimit");

	Params::EndBattleAPI_SetFindTargetNoLimit Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetForceWeakConditionPointMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Number                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::SetForceWeakConditionPointMax(class AEndCharacter* TargetCharacter, int32 Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetForceWeakConditionPointMax");

	Params::EndBattleAPI_SetForceWeakConditionPointMax Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.SetHiddenBreakable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bHidden                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     BreakableIDs                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetHiddenBreakable(bool bHidden, const TArray<class FName>& BreakableIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetHiddenBreakable");

	Params::EndBattleAPI_SetHiddenBreakable Parms{};

	Parms.bHidden = bHidden;
	Parms.BreakableIDs = std::move(BreakableIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetHiddenVolumeRelatedBreakable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EEndBattleBreakableRelationVolumeType   VolumeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHidden                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     BreakableIDs                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetHiddenVolumeRelatedBreakable(EEndBattleBreakableRelationVolumeType VolumeType, bool bHidden, const TArray<class FName>& BreakableIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetHiddenVolumeRelatedBreakable");

	Params::EndBattleAPI_SetHiddenVolumeRelatedBreakable Parms{};

	Parms.VolumeType = VolumeType;
	Parms.bHidden = bHidden;
	Parms.BreakableIDs = std::move(BreakableIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetImmotality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InImmotality                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetImmotality(class AEndCharacter* InChara, bool InImmotality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetImmotality");

	Params::EndBattleAPI_SetImmotality Parms{};

	Parms.InChara = InChara;
	Parms.InImmotality = InImmotality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetNoCheckDyningFilterTifaFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetNoCheckDyningFilterTifaFlag(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetNoCheckDyningFilterTifaFlag");

	Params::EndBattleAPI_SetNoCheckDyningFilterTifaFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetOverrideTextLabelID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InOverrideTextLabelID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetOverrideTextLabelID(class AEndCharacter* InCharacter, class FName InOverrideTextLabelID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetOverrideTextLabelID");

	Params::EndBattleAPI_SetOverrideTextLabelID Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InOverrideTextLabelID = InOverrideTextLabelID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetPartyLeader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInputTrigered                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::SetPartyLeader(EPlayerType Player, bool bIsInputTrigered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetPartyLeader");

	Params::EndBattleAPI_SetPartyLeader Parms{};

	Parms.Player = Player;
	Parms.bIsInputTrigered = bIsInputTrigered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.SetRedXIIIAbilityExclusionTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetRedXIIIAbilityExclusionTarget(class AEndCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetRedXIIIAbilityExclusionTarget");

	Params::EndBattleAPI_SetRedXIIIAbilityExclusionTarget Parms{};

	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetRewardEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    InChara                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleRewardType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetRewardEnable(class AEndCharacter* InChara, EEndBattleRewardType InType, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetRewardEnable");

	Params::EndBattleAPI_SetRewardEnable Parms{};

	Parms.InChara = InChara;
	Parms.InType = InType;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetStoryFlagCondition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             storyFlagNames                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetStoryFlagCondition(class FName storyFlagNames, bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetStoryFlagCondition");

	Params::EndBattleAPI_SetStoryFlagCondition Parms{};

	Parms.storyFlagNames = storyFlagNames;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SetSummonInBossCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bFlag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SetSummonInBossCutScene(bool bFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SetSummonInBossCutScene");

	Params::EndBattleAPI_SetSummonInBossCutScene Parms{};

	Parms.bFlag = bFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ShowPhysics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSimulatePhysics                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ShowPhysics(class FName ActorName, bool bSimulatePhysics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ShowPhysics");

	Params::EndBattleAPI_ShowPhysics Parms{};

	Parms.ActorName = ActorName;
	Parms.bSimulatePhysics = bSimulatePhysics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ShowWaveBattleScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             BattleSceneID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               enemyPopTransforms                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndBattleAPI::ShowWaveBattleScene(class FName BattleSceneID, const TArray<struct FTransform>& enemyPopTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ShowWaveBattleScene");

	Params::EndBattleAPI_ShowWaveBattleScene Parms{};

	Parms.BattleSceneID = BattleSceneID;
	Parms.enemyPopTransforms = std::move(enemyPopTransforms);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.ShowWaveBattleSceneNoPopTransform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             BattleSceneID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::ShowWaveBattleSceneNoPopTransform(class FName BattleSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ShowWaveBattleSceneNoPopTransform");

	Params::EndBattleAPI_ShowWaveBattleSceneNoPopTransform Parms{};

	Parms.BattleSceneID = BattleSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SkipFadeCharaPopActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::SkipFadeCharaPopActor(class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SkipFadeCharaPopActor");

	Params::EndBattleAPI_SkipFadeCharaPopActor Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.StartEnvironmentPhysFieldForce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             GroupName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::StartEnvironmentPhysFieldForce(class FName GroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "StartEnvironmentPhysFieldForce");

	Params::EndBattleAPI_StartEnvironmentPhysFieldForce Parms{};

	Parms.GroupName = GroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.StopBattleCameraSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   sequenceActorUID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::StopBattleCameraSequence(int32 sequenceActorUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "StopBattleCameraSequence");

	Params::EndBattleAPI_StopBattleCameraSequence Parms{};

	Parms.sequenceActorUID = sequenceActorUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.StopEnvironmentPhysFieldForce
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             GroupName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::StopEnvironmentPhysFieldForce(class FName GroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "StopEnvironmentPhysFieldForce");

	Params::EndBattleAPI_StopEnvironmentPhysFieldForce Parms{};

	Parms.GroupName = GroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.StopLoopEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   EffectHandle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleAPI::StopLoopEffect(int32 EffectHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "StopLoopEffect");

	Params::EndBattleAPI_StopLoopEffect Parms{};

	Parms.EffectHandle = EffectHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.SummonTrigger
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::SummonTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "SummonTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.TryLayoutTransform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             NodeName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::TryLayoutTransform(class FName NodeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "TryLayoutTransform");

	Params::EndBattleAPI_TryLayoutTransform Parms{};

	Parms.NodeName = NodeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.TrySetAIPCCombatArea
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerCharacter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleAPI::TrySetAIPCCombatArea(const EPlayerType PlayerCharacter, int32 GroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "TrySetAIPCCombatArea");

	Params::EndBattleAPI_TrySetAIPCCombatArea Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.GroupID = GroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.ValidNearFadeEnvPhysicsActor
// (Final, Native, Static, Public, BlueprintCallable)

void UEndBattleAPI::ValidNearFadeEnvPhysicsActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "ValidNearFadeEnvPhysicsActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleAPI.VecToPitch
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InVec                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::VecToPitch(const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "VecToPitch");

	Params::EndBattleAPI_VecToPitch Parms{};

	Parms.InVec = std::move(InVec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleAPI.VecToYaw
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InVec                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleAPI::VecToYaw(const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleAPI", "VecToYaw");

	Params::EndBattleAPI_VecToYaw Parms{};

	Parms.InVec = std::move(InVec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSkeletalMeshActor.OverrideDefaultEmissiveColor
// (Final, Native, Public, BlueprintCallable)

void AEndSkeletalMeshActor::OverrideDefaultEmissiveColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSkeletalMeshActor", "OverrideDefaultEmissiveColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSkeletalMeshActor.PlayEmissiveColorAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ColorPaletteId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndEmissiveModifierType                ModifierType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndEmissiveCurveType                   CurveType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendOutTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndOffset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndSkeletalMeshActor::PlayEmissiveColorAnimation(class FName RequestID, class FName ColorPaletteId, EEndEmissiveModifierType ModifierType, EEndEmissiveCurveType CurveType, bool bLoop, float Duration, float BlendInTime, float BlendOutTime, float StartOffset, float EndOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSkeletalMeshActor", "PlayEmissiveColorAnimation");

	Params::EndSkeletalMeshActor_PlayEmissiveColorAnimation Parms{};

	Parms.RequestID = RequestID;
	Parms.ColorPaletteId = ColorPaletteId;
	Parms.ModifierType = ModifierType;
	Parms.CurveType = CurveType;
	Parms.bLoop = bLoop;
	Parms.Duration = Duration;
	Parms.BlendInTime = BlendInTime;
	Parms.BlendOutTime = BlendOutTime;
	Parms.StartOffset = StartOffset;
	Parms.EndOffset = EndOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSkeletalMeshActor.ResetDirectEmissiveColor
// (Final, Native, Public, BlueprintCallable)

void AEndSkeletalMeshActor::ResetDirectEmissiveColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSkeletalMeshActor", "ResetDirectEmissiveColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSkeletalMeshActor.SetDirectEmissiveColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ColorPaletteId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IntensityBias                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndSkeletalMeshActor::SetDirectEmissiveColor(class FName ColorPaletteId, float IntensityBias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSkeletalMeshActor", "SetDirectEmissiveColor");

	Params::EndSkeletalMeshActor_SetDirectEmissiveColor Parms{};

	Parms.ColorPaletteId = ColorPaletteId;
	Parms.IntensityBias = IntensityBias;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSkeletalMeshActor.StopEmissiveColorAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RequestID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndSkeletalMeshActor::StopEmissiveColorAnimation(class FName RequestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSkeletalMeshActor", "StopEmissiveColorAnimation");

	Params::EndSkeletalMeshActor_StopEmissiveColorAnimation Parms{};

	Parms.RequestID = RequestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndWireReelActor.SetWireState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndWireReelState                       InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndWireReelActor::SetWireState(EEndWireReelState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndWireReelActor", "SetWireState");

	Params::EndWireReelActor_SetWireState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleDamageSourceComponentLaser.OnBindEffectFinished
// (Final, Native, Private)
// Parameters:
// class UParticleSystemComponent*         finishedComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleDamageSourceComponentLaser::OnBindEffectFinished(class UParticleSystemComponent* finishedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleDamageSourceComponentLaser", "OnBindEffectFinished");

	Params::EndBattleDamageSourceComponentLaser_OnBindEffectFinished Parms{};

	Parms.finishedComponent = finishedComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleMenu.OnCommandCellSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleMenu::OnCommandCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleMenu", "OnCommandCellSetup");

	Params::EndBattleMenu_OnCommandCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleMenu.OnPressedItem
// (Final, Native, Public)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBattleMenu::OnPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleMenu", "OnPressedItem");

	Params::EndBattleMenu_OnPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UEndCircle::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "GetDynamicMaterial");

	Params::EndCircle_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCircle.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetBlendMode");

	Params::EndCircle_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndCircle::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetBrush");

	Params::EndCircle_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetBrushFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetBrushFromAsset");

	Params::EndCircle_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetBrushFromMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetBrushFromMaterial");

	Params::EndCircle_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetBrushFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetBrushFromTexture");

	Params::EndCircle_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetBrushFromTextureDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetBrushFromTextureDynamic");

	Params::EndCircle_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetColorAndOpacity");

	Params::EndCircle_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetEndAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetEndAngle(float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetEndAngle");

	Params::EndCircle_SetEndAngle Parms{};

	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetNumSides
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InNumSides                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetNumSides(int32 InNumSides)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetNumSides");

	Params::EndCircle_SetNumSides Parms{};

	Parms.InNumSides = InNumSides;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetOpacity");

	Params::EndCircle_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetRadius(float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetRadius");

	Params::EndCircle_SetRadius Parms{};

	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCircle.SetStartAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCircle::SetStartAngle(float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCircle", "SetStartAngle");

	Params::EndCircle_SetStartAngle Parms{};

	Parms.InAngle = InAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnListMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnListMenuPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnListMenuPressedItem");

	Params::EndStartMenu_OnListMenuPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnListMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnListMenuSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnListMenuSelectedIndexChanged");

	Params::EndStartMenu_OnListMenuSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnListMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnListMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnListMenuSetupItem");

	Params::EndStartMenu_OnListMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnLoadGame
// (Final, Native, Private, BlueprintCallable)

void UEndStartMenu::OnLoadGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnLoadGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnLoadLatest
// (Final, Native, Private, BlueprintCallable)

void UEndStartMenu::OnLoadLatest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnLoadLatest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnMembershipUpdate
// (Final, Native, Private)

void UEndStartMenu::OnMembershipUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnMembershipUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnNewGame
// (Final, Native, Private, BlueprintCallable)

void UEndStartMenu::OnNewGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnNewGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnOptions
// (Final, Native, Private, BlueprintCallable)

void UEndStartMenu::OnOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnQuitGame
// (Final, Native, Private, BlueprintCallable)

void UEndStartMenu::OnQuitGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnQuitGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnSaveDataCancelled
// (Final, Native, Private, BlueprintCallable)

void UEndStartMenu::OnSaveDataCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnSaveDataCancelled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnSaveDataClicked
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Cell                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnSaveDataClicked(class UUserWidget* Cell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnSaveDataClicked");

	Params::EndStartMenu_OnSaveDataClicked Parms{};

	Parms.Cell = Cell;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnSaveDataPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnSaveDataPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnSaveDataPressedItem");

	Params::EndStartMenu_OnSaveDataPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnSaveDataSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnSaveDataSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnSaveDataSelectedIndexChanged");

	Params::EndStartMenu_OnSaveDataSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStartMenu.OnSaveDataSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStartMenu::OnSaveDataSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStartMenu", "OnSaveDataSetupItem");

	Params::EndStartMenu_OnSaveDataSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_mako1_110.OnAddMagicThunderHitCountForBarrierGS
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CauserCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_mako1_110::OnAddMagicThunderHitCountForBarrierGS(class FName CauserCharaName, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_mako1_110", "OnAddMagicThunderHitCountForBarrierGS");

	Params::EndBattleScene_btsc_mako1_110_OnAddMagicThunderHitCountForBarrierGS Parms{};

	Parms.CauserCharaName = CauserCharaName;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleScene_btsc_mako1_110.OnAddNormalAttackHitCountForBarrierGS
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CauserCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_mako1_110::OnAddNormalAttackHitCountForBarrierGS(class FName CauserCharaName, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_mako1_110", "OnAddNormalAttackHitCountForBarrierGS");

	Params::EndBattleScene_btsc_mako1_110_OnAddNormalAttackHitCountForBarrierGS Parms{};

	Parms.CauserCharaName = CauserCharaName;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.EndSetPlay
// (Final, Native, Static, Private, BlueprintCallable)

void AEndBattleScene_btsc_sbil0_90_boss020::EndSetPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "EndSetPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.IsReadySetPlay
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBattleScene_btsc_sbil0_90_boss020::IsReadySetPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "IsReadySetPlay");

	Params::EndBattleScene_btsc_sbil0_90_boss020_IsReadySetPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.KeepRelativePositionWarp
// (Final, Native, Static, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    BaseCharacter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          BaseLocation                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         BaseRotation                                           (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class AEndCharacter*>            Characters                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::KeepRelativePositionWarp(class AEndCharacter* BaseCharacter, const struct FVector& BaseLocation, const struct FRotator& BaseRotation, const TArray<class AEndCharacter*>& Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "KeepRelativePositionWarp");

	Params::EndBattleScene_btsc_sbil0_90_boss020_KeepRelativePositionWarp Parms{};

	Parms.BaseCharacter = BaseCharacter;
	Parms.BaseLocation = std::move(BaseLocation);
	Parms.BaseRotation = std::move(BaseRotation);
	Parms.Characters = std::move(Characters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.LockSetPlayHeight
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::LockSetPlayHeight(float Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "LockSetPlayHeight");

	Params::EndBattleScene_btsc_sbil0_90_boss020_LockSetPlayHeight Parms{};

	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.ResetForceLookAt
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::ResetForceLookAt(class AEndCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "ResetForceLookAt");

	Params::EndBattleScene_btsc_sbil0_90_boss020_ResetForceLookAt Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.SetBattleAbilityRotateStateLocation
// (Final, Native, Static, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::SetBattleAbilityRotateStateLocation(class AEndCharacter* Character, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "SetBattleAbilityRotateStateLocation");

	Params::EndBattleScene_btsc_sbil0_90_boss020_SetBattleAbilityRotateStateLocation Parms{};

	Parms.Character = Character;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.SetBattleAbilityRotateStatePointName
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RotatePointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::SetBattleAbilityRotateStatePointName(class AEndCharacter* Character, class FName RotatePointName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "SetBattleAbilityRotateStatePointName");

	Params::EndBattleScene_btsc_sbil0_90_boss020_SetBattleAbilityRotateStatePointName Parms{};

	Parms.Character = Character;
	Parms.RotatePointName = RotatePointName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.SetForceLookAt
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    TargetCharacter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::SetForceLookAt(class AEndCharacter* Character, class AEndCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "SetForceLookAt");

	Params::EndBattleScene_btsc_sbil0_90_boss020_SetForceLookAt Parms{};

	Parms.Character = Character;
	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.SetOverrideAerialAttackFallSequence
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FallSequeceName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LandSequenceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MotionOwnerCharaSpecId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::SetOverrideAerialAttackFallSequence(class AEndCharacter* Character, class FName FallSequeceName, class FName LandSequenceName, class FName MotionOwnerCharaSpecId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "SetOverrideAerialAttackFallSequence");

	Params::EndBattleScene_btsc_sbil0_90_boss020_SetOverrideAerialAttackFallSequence Parms{};

	Parms.Character = Character;
	Parms.FallSequeceName = FallSequeceName;
	Parms.LandSequenceName = LandSequenceName;
	Parms.MotionOwnerCharaSpecId = MotionOwnerCharaSpecId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.StartSetPlay
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AEndCharacter*>            Characters                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::StartSetPlay(const TArray<class AEndCharacter*>& Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "StartSetPlay");

	Params::EndBattleScene_btsc_sbil0_90_boss020_StartSetPlay Parms{};

	Parms.Characters = std::move(Characters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.StartSetPlayWithErrorCheck
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AEndCharacter*>            Characters                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// ESetPlayStartSetPlay                    OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::StartSetPlayWithErrorCheck(const TArray<class AEndCharacter*>& Characters, ESetPlayStartSetPlay* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "StartSetPlayWithErrorCheck");

	Params::EndBattleScene_btsc_sbil0_90_boss020_StartSetPlayWithErrorCheck Parms{};

	Parms.Characters = std::move(Characters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.SuspendAll
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::SuspendAll(class AEndCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "SuspendAll");

	Params::EndBattleScene_btsc_sbil0_90_boss020_SuspendAll Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.UnlockSetPlayHeight
// (Final, Native, Static, Private, BlueprintCallable)

void AEndBattleScene_btsc_sbil0_90_boss020::UnlockSetPlayHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "UnlockSetPlayHeight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.AerialAttackJump
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             StartMotionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LoopMotionName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NextAbilityID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Executor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   JumpTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MotionOwnerCharaSpecId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ESetPlayAerialAttackJump                OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::AerialAttackJump(class FName StartMotionName, class FName LoopMotionName, class FName NextAbilityID, class AEndCharacter* Executor, class AEndCharacter* Target, float JumpTime, float Timeout, class FName MotionOwnerCharaSpecId, const struct FLatentActionInfo& LatentInfo, ESetPlayAerialAttackJump* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "AerialAttackJump");

	Params::EndBattleScene_btsc_sbil0_90_boss020_AerialAttackJump Parms{};

	Parms.StartMotionName = StartMotionName;
	Parms.LoopMotionName = LoopMotionName;
	Parms.NextAbilityID = NextAbilityID;
	Parms.Executor = Executor;
	Parms.Target = Target;
	Parms.JumpTime = JumpTime;
	Parms.Timeout = Timeout;
	Parms.MotionOwnerCharaSpecId = MotionOwnerCharaSpecId;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.FallAction
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GravityScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FallSequenceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LandSequenceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MotionOwnerCharaSpecId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ESetPlayFallAction                      OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::FallAction(class AEndCharacter* Character, float GravityScale, class FName FallSequenceName, class FName LandSequenceName, class FName MotionOwnerCharaSpecId, const struct FLatentActionInfo& LatentInfo, ESetPlayFallAction* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "FallAction");

	Params::EndBattleScene_btsc_sbil0_90_boss020_FallAction Parms{};

	Parms.Character = Character;
	Parms.GravityScale = GravityScale;
	Parms.FallSequenceName = FallSequenceName;
	Parms.LandSequenceName = LandSequenceName;
	Parms.MotionOwnerCharaSpecId = MotionOwnerCharaSpecId;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.ForceChangeIdleAction
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ESetPlayForceChangeIdleAction           OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::ForceChangeIdleAction(class AEndCharacter* Character, const struct FLatentActionInfo& LatentInfo, ESetPlayForceChangeIdleAction* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "ForceChangeIdleAction");

	Params::EndBattleScene_btsc_sbil0_90_boss020_ForceChangeIdleAction Parms{};

	Parms.Character = Character;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.GraviticJump
// (Final, Native, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          landingLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PeakBias                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   turningDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LandingForward                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BeginSequenceName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LoopSequenceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EndSequenceName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MotionOwnerCharaSpecId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ESetPlayGraviticJump                    OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::GraviticJump(class AEndCharacter* Character, const struct FVector& landingLocation, float Height, float PeakBias, float turningDuration, const struct FVector& LandingForward, class FName BeginSequenceName, class FName LoopSequenceName, class FName EndSequenceName, class FName MotionOwnerCharaSpecId, const struct FLatentActionInfo& LatentInfo, ESetPlayGraviticJump* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "GraviticJump");

	Params::EndBattleScene_btsc_sbil0_90_boss020_GraviticJump Parms{};

	Parms.Character = Character;
	Parms.landingLocation = std::move(landingLocation);
	Parms.Height = Height;
	Parms.PeakBias = PeakBias;
	Parms.turningDuration = turningDuration;
	Parms.LandingForward = std::move(LandingForward);
	Parms.BeginSequenceName = BeginSequenceName;
	Parms.LoopSequenceName = LoopSequenceName;
	Parms.EndSequenceName = EndSequenceName;
	Parms.MotionOwnerCharaSpecId = MotionOwnerCharaSpecId;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.JumpTo
// (Final, Native, Private, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AEndCharacter*                    Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         TargetRotation                                         (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartMotionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LoopMotionName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OnCompleteMotionName                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MotionOwnerCharaSpecId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ESetPlayJumpTo                          OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::JumpTo(class AEndCharacter* Character, const struct FVector& TargetLocation, const struct FRotator& TargetRotation, float Duration, class FName StartMotionName, class FName LoopMotionName, class FName OnCompleteMotionName, class FName MotionOwnerCharaSpecId, const struct FLatentActionInfo& LatentInfo, ESetPlayJumpTo* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "JumpTo");

	Params::EndBattleScene_btsc_sbil0_90_boss020_JumpTo Parms{};

	Parms.Character = Character;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.TargetRotation = std::move(TargetRotation);
	Parms.Duration = Duration;
	Parms.StartMotionName = StartMotionName;
	Parms.LoopMotionName = LoopMotionName;
	Parms.OnCompleteMotionName = OnCompleteMotionName;
	Parms.MotionOwnerCharaSpecId = MotionOwnerCharaSpecId;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_sbil0_90_boss020.RequestUseAbility
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             AbilityID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Executor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ImmediatelyUseAerial                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ESetPlayUseAbility                      OutSignal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_sbil0_90_boss020::RequestUseAbility(class FName AbilityID, class AEndCharacter* Executor, class AEndCharacter* Target, float Timeout, bool ImmediatelyUseAerial, const struct FLatentActionInfo& LatentInfo, ESetPlayUseAbility* OutSignal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_sbil0_90_boss020", "RequestUseAbility");

	Params::EndBattleScene_btsc_sbil0_90_boss020_RequestUseAbility Parms{};

	Parms.AbilityID = AbilityID;
	Parms.Executor = Executor;
	Parms.Target = Target;
	Parms.Timeout = Timeout;
	Parms.ImmediatelyUseAerial = ImmediatelyUseAerial;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSignal != nullptr)
		*OutSignal = Parms.OutSignal;
}


// Function EndGame.EndBattleScene_btsc_slu5b_010.ConfirmSpark
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           mineActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   sparkID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_slu5b_010::ConfirmSpark(class AActor* mineActor, int32 sparkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_slu5b_010", "ConfirmSpark");

	Params::EndBattleScene_btsc_slu5b_010_ConfirmSpark Parms{};

	Parms.mineActor = mineActor;
	Parms.sparkID = sparkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBattleScene_btsc_slu5b_010.ReleaseSpark
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           mineActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   sparkID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleScene_btsc_slu5b_010::ReleaseSpark(class AActor* mineActor, int32 sparkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleScene_btsc_slu5b_010", "ReleaseSpark");

	Params::EndBattleScene_btsc_slu5b_010_ReleaseSpark Parms{};

	Parms.mineActor = mineActor;
	Parms.sparkID = sparkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNavAPI.FindNearestNavMeshPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InModifierName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SearchRange                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndQueryFilterType                     FilterType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::FindNearestNavMeshPoint(const struct FVector& TargetLocation, struct FVector* OutLocation, class FName InModifierName, const struct FVector& SearchRange, EEndQueryFilterType FilterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "FindNearestNavMeshPoint");

	Params::EndNavAPI_FindNearestNavMeshPoint Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.InModifierName = InModifierName;
	Parms.SearchRange = std::move(SearchRange);
	Parms.FilterType = FilterType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.FindNearestNavMeshPointAgent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutLocation                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InModifierName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNavAgentProperties              InAgentProperty                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SearchRange                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndQueryFilterType                     FilterType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::FindNearestNavMeshPointAgent(const struct FVector& TargetLocation, struct FVector* OutLocation, class FName InModifierName, const struct FNavAgentProperties& InAgentProperty, const struct FVector& SearchRange, EEndQueryFilterType FilterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "FindNearestNavMeshPointAgent");

	Params::EndNavAPI_FindNearestNavMeshPointAgent Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.InModifierName = InModifierName;
	Parms.InAgentProperty = std::move(InAgentProperty);
	Parms.SearchRange = std::move(SearchRange);
	Parms.FilterType = FilterType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.GetAgentPropety
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndNavLayerType                        InLayerType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNavAgentProperties              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FNavAgentProperties UEndNavAPI::GetAgentPropety(EEndNavLayerType InLayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "GetAgentPropety");

	Params::EndNavAPI_GetAgentPropety Parms{};

	Parms.InLayerType = InLayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.GetNavModifierTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndNavAPI::GetNavModifierTransform(const class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "GetNavModifierTransform");

	Params::EndNavAPI_GetNavModifierTransform Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.InvalidateAerialIgnoreVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::InvalidateAerialIgnoreVolume(const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "InvalidateAerialIgnoreVolume");

	Params::EndNavAPI_InvalidateAerialIgnoreVolume Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.InvalidateBlockingModifierVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::InvalidateBlockingModifierVolume(const class FName LevelName, const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "InvalidateBlockingModifierVolume");

	Params::EndNavAPI_InvalidateBlockingModifierVolume Parms{};

	Parms.LevelName = LevelName;
	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.InvalidateFieldActionModifierVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::InvalidateFieldActionModifierVolume(const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "InvalidateFieldActionModifierVolume");

	Params::EndNavAPI_InvalidateFieldActionModifierVolume Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.InvalidateNavModifierVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::InvalidateNavModifierVolume(const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "InvalidateNavModifierVolume");

	Params::EndNavAPI_InvalidateNavModifierVolume Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.ValidateAerialIgnoreVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::ValidateAerialIgnoreVolume(const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "ValidateAerialIgnoreVolume");

	Params::EndNavAPI_ValidateAerialIgnoreVolume Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.ValidateBlockingModifierVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::ValidateBlockingModifierVolume(const class FName LevelName, const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "ValidateBlockingModifierVolume");

	Params::EndNavAPI_ValidateBlockingModifierVolume Parms{};

	Parms.LevelName = LevelName;
	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.ValidateFieldActionModifierVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::ValidateFieldActionModifierVolume(const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "ValidateFieldActionModifierVolume");

	Params::EndNavAPI_ValidateFieldActionModifierVolume Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNavAPI.ValidateNavModifierVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndNavAPI::ValidateNavModifierVolume(const class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndNavAPI", "ValidateNavModifierVolume");

	Params::EndNavAPI_ValidateNavModifierVolume Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleTalkCharacterComponent.OnNotify
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             AnimName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SoundName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleTalkCharacterComponent::OnNotify(const class FName& AnimName, const class FName& SoundName, class AEndCharacter* ownerChara) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleTalkCharacterComponent", "OnNotify");

	Params::EndBattleTalkCharacterComponent_OnNotify Parms{};

	Parms.AnimName = AnimName;
	Parms.SoundName = SoundName;
	Parms.ownerChara = ownerChara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleTalkCharacterComponent.OnNotifyWithAbility
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             AnimName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SoundName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ownerChara                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    targetChara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AbilityID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEndDataTableBattleAbility       dataTableBattleAbility                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bFinishBlow                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleTalkCharacterComponent::OnNotifyWithAbility(const class FName& AnimName, const class FName& SoundName, class AEndCharacter* ownerChara, class AEndCharacter* targetChara, const class FName& AbilityID, const struct FEndDataTableBattleAbility& dataTableBattleAbility, bool bFinishBlow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleTalkCharacterComponent", "OnNotifyWithAbility");

	Params::EndBattleTalkCharacterComponent_OnNotifyWithAbility Parms{};

	Parms.AnimName = AnimName;
	Parms.SoundName = SoundName;
	Parms.ownerChara = ownerChara;
	Parms.targetChara = targetChara;
	Parms.AbilityID = AbilityID;
	Parms.dataTableBattleAbility = std::move(dataTableBattleAbility);
	Parms.bFinishBlow = bFinishBlow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBattleTalkOnEndBattleActor.OnEndBattle
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             BattleSceneID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EndBattleExitBattleSceneType            BattleExitType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleTalkOnEndBattleActor::OnEndBattle(class FName BattleSceneID, EndBattleExitBattleSceneType BattleExitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleTalkOnEndBattleActor", "OnEndBattle");

	Params::EndBattleTalkOnEndBattleActor_OnEndBattle Parms{};

	Parms.BattleSceneID = BattleSceneID;
	Parms.BattleExitType = BattleExitType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndBattleTalkOnEndBattleActor.PlayVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUnuseDefaultDelay                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDelayMinSeconds                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDelayMaxSeconds                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             VoiceSetId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBattleTalkOnEndBattleActor::PlayVoice(bool bUnuseDefaultDelay, float OverrideDelayMinSeconds, float OverrideDelayMaxSeconds, class FName VoiceSetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBattleTalkOnEndBattleActor", "PlayVoice");

	Params::EndBattleTalkOnEndBattleActor_PlayVoice Parms{};

	Parms.bUnuseDefaultDelay = bUnuseDefaultDelay;
	Parms.OverrideDelayMinSeconds = OverrideDelayMinSeconds;
	Parms.OverrideDelayMaxSeconds = OverrideDelayMaxSeconds;
	Parms.VoiceSetId = VoiceSetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UEndPolygon::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "GetDynamicMaterial");

	Params::EndPolygon_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndPolygon.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetBlendMode");

	Params::EndPolygon_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndPolygon::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetBrush");

	Params::EndPolygon_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetBrushFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetBrushFromAsset");

	Params::EndPolygon_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetBrushFromMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetBrushFromMaterial");

	Params::EndPolygon_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetBrushFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetBrushFromTexture");

	Params::EndPolygon_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetBrushFromTextureDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetBrushFromTextureDynamic");

	Params::EndPolygon_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetColorAndOpacity");

	Params::EndPolygon_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPolygon.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPolygon::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPolygon", "SetOpacity");

	Params::EndPolygon_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTrialOrderWindow.BtnDeluxeOnClicked
// (Final, Native, Private)

void UEndTrialOrderWindow::BtnDeluxeOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTrialOrderWindow", "BtnDeluxeOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTrialOrderWindow.BtnNormalOnClicked
// (Final, Native, Private)

void UEndTrialOrderWindow::BtnNormalOnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTrialOrderWindow", "BtnNormalOnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.Press
// (Final, Native, Public, BlueprintCallable)

void UEndButton::Press()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "Press");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.Release
// (Final, Native, Public, BlueprintCallable)

void UEndButton::Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "Release");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetBackgroundColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InBackgroundColor                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetBackgroundColor(const struct FLinearColor& InBackgroundColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetBackgroundColor");

	Params::EndButton_SetBackgroundColor Parms{};

	Parms.InBackgroundColor = std::move(InBackgroundColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetCanPress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCanPress                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetCanPress(bool bInCanPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetCanPress");

	Params::EndButton_SetCanPress Parms{};

	Parms.bInCanPress = bInCanPress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetClickMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EButtonClickMethod                      InClickMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetClickMethod(EButtonClickMethod InClickMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetClickMethod");

	Params::EndButton_SetClickMethod Parms{};

	Parms.InClickMethod = InClickMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetColorAndOpacity");

	Params::EndButton_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetForceHovered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHovered                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetForceHovered(bool bInHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetForceHovered");

	Params::EndButton_SetForceHovered Parms{};

	Parms.bInHovered = bInHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetGuideText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetGuideText(const class FString& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetGuideText");

	Params::EndButton_SetGuideText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetHelpText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetHelpText(const class FString& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetHelpText");

	Params::EndButton_SetHelpText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetIgnoreKeyRepeat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIgnoreKeyRepeat                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetIgnoreKeyRepeat(bool bInIgnoreKeyRepeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetIgnoreKeyRepeat");

	Params::EndButton_SetIgnoreKeyRepeat Parms{};

	Parms.bInIgnoreKeyRepeat = bInIgnoreKeyRepeat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetIsFocusable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsFocusable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetIsFocusable(bool bInIsFocusable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetIsFocusable");

	Params::EndButton_SetIsFocusable Parms{};

	Parms.bInIsFocusable = bInIsFocusable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetPressMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EButtonPressMethod                      InPressMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetPressMethod(EButtonPressMethod InPressMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetPressMethod");

	Params::EndButton_SetPressMethod Parms{};

	Parms.InPressMethod = InPressMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetStyle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FButtonStyle                     InStyle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndButton::SetStyle(const struct FButtonStyle& InStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetStyle");

	Params::EndButton_SetStyle Parms{};

	Parms.InStyle = std::move(InStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.SetTouchMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EButtonTouchMethod                      InTouchMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButton::SetTouchMethod(EButtonTouchMethod InTouchMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "SetTouchMethod");

	Params::EndButton_SetTouchMethod Parms{};

	Parms.InTouchMethod = InTouchMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButton.GetCanPress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndButton::GetCanPress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "GetCanPress");

	Params::EndButton_GetCanPress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndButton.GetIgnoreKeyRepeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndButton::GetIgnoreKeyRepeat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "GetIgnoreKeyRepeat");

	Params::EndButton_GetIgnoreKeyRepeat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndButton.GetIsFocusable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndButton::GetIsFocusable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "GetIsFocusable");

	Params::EndButton_GetIsFocusable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndButton.GetIsForceHovered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndButton::GetIsForceHovered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "GetIsForceHovered");

	Params::EndButton_GetIsForceHovered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndButton.IsPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndButton::IsPressed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButton", "IsPressed");

	Params::EndButton_IsPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBikeTriggerBoxLoccheBreakBridge.OnOverlapBegin
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBikeTriggerBoxLoccheBreakBridge::OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBikeTriggerBoxLoccheBreakBridge", "OnOverlapBegin");

	Params::EndBikeTriggerBoxLoccheBreakBridge_OnOverlapBegin Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBikeTriggerBoxLoccheBreakBridge.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBikeTriggerBoxLoccheBreakBridge::OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBikeTriggerBoxLoccheBreakBridge", "OnOverlapEnd");

	Params::EndBikeTriggerBoxLoccheBreakBridge_OnOverlapEnd Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBikeTriggerBoxSavePhysActor.BeginOverlap
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBikeTriggerBoxSavePhysActor::BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBikeTriggerBoxSavePhysActor", "BeginOverlap");

	Params::EndBikeTriggerBoxSavePhysActor_BeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBillboard.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBillboard::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBillboard", "SetBlendMode");

	Params::EndBillboard_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBillboard.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBillboard::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBillboard", "SetColorAndOpacity");

	Params::EndBillboard_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBillboard.SetImagePath
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  InImagePath                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInRewind                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBillboard::SetImagePath(const struct FSoftObjectPath& InImagePath, bool bInRewind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBillboard", "SetImagePath");

	Params::EndBillboard_SetImagePath Parms{};

	Parms.InImagePath = std::move(InImagePath);
	Parms.bInRewind = bInRewind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBillboard.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndBillboard::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBillboard", "SetOpacity");

	Params::EndBillboard_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBonamikBoxScaleGroupParamsActor.OnOverlapBegin
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEndBonamikBoxScaleGroupParamsActor::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikBoxScaleGroupParamsActor", "OnOverlapBegin");

	Params::EndBonamikBoxScaleGroupParamsActor_OnOverlapBegin Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBonamikBoxScaleGroupParamsActor.OnOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndBonamikBoxScaleGroupParamsActor::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikBoxScaleGroupParamsActor", "OnOverlapEnd");

	Params::EndBonamikBoxScaleGroupParamsActor_OnOverlapEnd Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBonamikBoxWindActor.Activate
// (Final, Native, Public, BlueprintCallable)

void AEndBonamikBoxWindActor::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikBoxWindActor", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBonamikBoxWindActor.Deactivate
// (Final, Native, Public, BlueprintCallable)

void AEndBonamikBoxWindActor::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikBoxWindActor", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndBonamikBoxWindActor.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndBonamikBoxWindActor::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikBoxWindActor", "IsActive");

	Params::EndBonamikBoxWindActor_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndBonamikBoxWindComponent.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBonamikBoxWindComponent::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndBonamikBoxWindComponent", "IsActive");

	Params::EndBonamikBoxWindComponent_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndButtonSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButtonSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButtonSlot", "SetHorizontalAlignment");

	Params::EndButtonSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButtonSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndButtonSlot::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButtonSlot", "SetPadding");

	Params::EndButtonSlot_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndButtonSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndButtonSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndButtonSlot", "SetVerticalAlignment");

	Params::EndButtonSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanel.AddChildToCanvas
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEndCanvasPanelSlot*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEndCanvasPanelSlot* UEndCanvasPanel::AddChildToCanvas(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanel", "AddChildToCanvas");

	Params::EndCanvasPanel_AddChildToCanvas Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCanvasPanel.SetContentColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InContentColorAndOpacity                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanel::SetContentColorAndOpacity(const struct FLinearColor& InContentColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanel", "SetContentColorAndOpacity");

	Params::EndCanvasPanel_SetContentColorAndOpacity Parms{};

	Parms.InContentColorAndOpacity = std::move(InContentColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanel.SetExplicitChildZOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInExplicitChildZOrder                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanel::SetExplicitChildZOrder(bool bInExplicitChildZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanel", "SetExplicitChildZOrder");

	Params::EndCanvasPanel_SetExplicitChildZOrder Parms{};

	Parms.bInExplicitChildZOrder = bInExplicitChildZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanel.SetFieldOfView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InFieldOfView                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanel::SetFieldOfView(float InFieldOfView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanel", "SetFieldOfView");

	Params::EndCanvasPanel_SetFieldOfView Parms{};

	Parms.InFieldOfView = InFieldOfView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCanvasPanel.SetProjectionMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraProjectionMode                   InProjectionMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCanvasPanel::SetProjectionMode(ECameraProjectionMode InProjectionMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCanvasPanel", "SetProjectionMode");

	Params::EndCanvasPanel_SetProjectionMode Parms{};

	Parms.InProjectionMode = InProjectionMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCategoryVolumeControlActor.UpdateCategoryVolumeComponent
// (Final, Native, Public, BlueprintCallable)

void AEndCategoryVolumeControlActor::UpdateCategoryVolumeComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCategoryVolumeControlActor", "UpdateCategoryVolumeComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCategoryVolumeControlActor.GetControllerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEndCategoryVolumeControlComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEndCategoryVolumeControlComponent* AEndCategoryVolumeControlActor::GetControllerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCategoryVolumeControlActor", "GetControllerComponent");

	Params::EndCategoryVolumeControlActor_GetControllerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCategoryVolumeControlComponent.InitializeCategoryVolume
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             TargetName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCategoryVolumeControlComponent::InitializeCategoryVolume(const class FName& TargetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCategoryVolumeControlComponent", "InitializeCategoryVolume");

	Params::EndCategoryVolumeControlComponent_InitializeCategoryVolume Parms{};

	Parms.TargetName = TargetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCategoryVolumeControlComponent.TerminateCategoryVolume
// (Final, Native, Public)

void UEndCategoryVolumeControlComponent::TerminateCategoryVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCategoryVolumeControlComponent", "TerminateCategoryVolume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCategoryVolumeControlComponent.UpdateCategoryVolume
// (Final, Native, Public)

void UEndCategoryVolumeControlComponent::UpdateCategoryVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCategoryVolumeControlComponent", "UpdateCategoryVolume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndChapterSelectMenu.OnChapterListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChapterSelectMenu::OnChapterListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChapterSelectMenu", "OnChapterListPressedItem");

	Params::EndChapterSelectMenu_OnChapterListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndChapterSelectMenu.OnChapterListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChapterSelectMenu::OnChapterListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChapterSelectMenu", "OnChapterListSelectedIndexChanged");

	Params::EndChapterSelectMenu_OnChapterListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndChapterSelectMenu.OnChapterListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChapterSelectMenu::OnChapterListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChapterSelectMenu", "OnChapterListSetupItem");

	Params::EndChapterSelectMenu_OnChapterListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndChapterSelectMenu.SetCellImage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEndImage*                        Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     Sprite                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChapterSelectMenu::SetCellImage(class UEndImage* Widget, class UPaperSprite* Sprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChapterSelectMenu", "SetCellImage");

	Params::EndChapterSelectMenu_SetCellImage Parms{};

	Parms.Widget = Widget;
	Parms.Sprite = Sprite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndChocoboFastTravelMenu.OnPointsListIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChocoboFastTravelMenu::OnPointsListIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChocoboFastTravelMenu", "OnPointsListIndexChanged");

	Params::EndChocoboFastTravelMenu_OnPointsListIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndChocoboFastTravelMenu.OnPointsListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChocoboFastTravelMenu::OnPointsListPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChocoboFastTravelMenu", "OnPointsListPressedItem");

	Params::EndChocoboFastTravelMenu_OnPointsListPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndChocoboFastTravelMenu.OnPointsListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndChocoboFastTravelMenu::OnPointsListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndChocoboFastTravelMenu", "OnPointsListSetupItem");

	Params::EndChocoboFastTravelMenu_OnPointsListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumBattleSelectWindow.OnBattleListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumBattleSelectWindow::OnBattleListPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumBattleSelectWindow", "OnBattleListPressedItem");

	Params::EndColosseumBattleSelectWindow_OnBattleListPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumBattleSelectWindow.OnBattleListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumBattleSelectWindow::OnBattleListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumBattleSelectWindow", "OnBattleListSetupItem");

	Params::EndColosseumBattleSelectWindow_OnBattleListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumConfirmWindow.OnCancelNextBattleClicked
// (Final, Native, Public)

void UEndColosseumConfirmWindow::OnCancelNextBattleClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumConfirmWindow", "OnCancelNextBattleClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumConfirmWindow.OnConfirmNextBattleClicked
// (Final, Native, Public)

void UEndColosseumConfirmWindow::OnConfirmNextBattleClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumConfirmWindow", "OnConfirmNextBattleClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnBattleInfoWindowMeasureItem
// (Final, Native, Public, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndColosseumMenu::OnBattleInfoWindowMeasureItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnBattleInfoWindowMeasureItem");

	Params::EndColosseumMenu_OnBattleInfoWindowMeasureItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndColosseumMenu.OnBattleInfoWindowSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnBattleInfoWindowSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnBattleInfoWindowSetupItem");

	Params::EndColosseumMenu_OnBattleInfoWindowSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnCharaSelectMenuPressedItem
// (Final, Native, Public)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnCharaSelectMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnCharaSelectMenuPressedItem");

	Params::EndColosseumMenu_OnCharaSelectMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnCharaSelectMenuSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnCharaSelectMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnCharaSelectMenuSetupItem");

	Params::EndColosseumMenu_OnCharaSelectMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnCourseMenuPressedItem
// (Final, Native, Public)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnCourseMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnCourseMenuPressedItem");

	Params::EndColosseumMenu_OnCourseMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnCourseMenuSelectedIndexChanged
// (Final, Native, Public)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnCourseMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnCourseMenuSelectedIndexChanged");

	Params::EndColosseumMenu_OnCourseMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnCourseMenuSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnCourseMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnCourseMenuSetupItem");

	Params::EndColosseumMenu_OnCourseMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnDifficultySelectMenuPressedItem
// (Final, Native, Public)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnDifficultySelectMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnDifficultySelectMenuPressedItem");

	Params::EndColosseumMenu_OnDifficultySelectMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnDifficultySelectMenuSelectedIndexChanged
// (Final, Native, Public)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnDifficultySelectMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnDifficultySelectMenuSelectedIndexChanged");

	Params::EndColosseumMenu_OnDifficultySelectMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnDifficultySelectMenuSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumMenu::OnDifficultySelectMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnDifficultySelectMenuSetupItem");

	Params::EndColosseumMenu_OnDifficultySelectMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnNoButtonPressed
// (Final, Native, Public)

void UEndColosseumMenu::OnNoButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnNoButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumMenu.OnYesButtonPressed
// (Final, Native, Public)

void UEndColosseumMenu::OnYesButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumMenu", "OnYesButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumModeSelectWindow.OnModeListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumModeSelectWindow::OnModeListPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumModeSelectWindow", "OnModeListPressedItem");

	Params::EndColosseumModeSelectWindow_OnModeListPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumModeSelectWindow.OnModeListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumModeSelectWindow::OnModeListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumModeSelectWindow", "OnModeListSetupItem");

	Params::EndColosseumModeSelectWindow_OnModeListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumResultMenu.OnNoButtonPressed
// (Final, Native, Public)

void UEndColosseumResultMenu::OnNoButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumResultMenu", "OnNoButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumResultMenu.OnYesButtonPressed
// (Final, Native, Public)

void UEndColosseumResultMenu::OnYesButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumResultMenu", "OnYesButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumSupplyHandicapWindow.OnCommandListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumSupplyHandicapWindow::OnCommandListPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumSupplyHandicapWindow", "OnCommandListPressedItem");

	Params::EndColosseumSupplyHandicapWindow_OnCommandListPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndColosseumSupplyHandicapWindow.OnCommandListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndColosseumSupplyHandicapWindow::OnCommandListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndColosseumSupplyHandicapWindow", "OnCommandListSetupItem");

	Params::EndColosseumSupplyHandicapWindow_OnCommandListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCommonAPI.RandomFloatInRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndCommonAPI::RandomFloatInRange(float Min, float Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCommonAPI", "RandomFloatInRange");

	Params::EndCommonAPI_RandomFloatInRange Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCommonAPI.RandomIntegerInRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndCommonAPI::RandomIntegerInRange(int32 Min, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndCommonAPI", "RandomIntegerInRange");

	Params::EndCommonAPI_RandomIntegerInRange Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCondorFortMiniGameBoardSelectWindow.OnMeasureItem_Guage
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCondorFortMiniGameBoardSelectWindow::OnMeasureItem_Guage(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameBoardSelectWindow", "OnMeasureItem_Guage");

	Params::EndCondorFortMiniGameBoardSelectWindow_OnMeasureItem_Guage Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCondorFortMiniGameBoardSelectWindow.OnPressedItem_BoardList
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMiniGameBoardSelectWindow::OnPressedItem_BoardList(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameBoardSelectWindow", "OnPressedItem_BoardList");

	Params::EndCondorFortMiniGameBoardSelectWindow_OnPressedItem_BoardList Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMiniGameBoardSelectWindow.OnSetupItem_BoardList
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMiniGameBoardSelectWindow::OnSetupItem_BoardList(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameBoardSelectWindow", "OnSetupItem_BoardList");

	Params::EndCondorFortMiniGameBoardSelectWindow_OnSetupItem_BoardList Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMinigameEditMenu.OnClicked_Board
// (Final, Native, Protected)
// Parameters:
// class FName                             BoardID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMinigameEditMenu::OnClicked_Board(class FName BoardID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMinigameEditMenu", "OnClicked_Board");

	Params::EndCondorFortMinigameEditMenu_OnClicked_Board Parms{};

	Parms.BoardID = BoardID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMinigameEditMenu.OnClicked_UnitSelect
// (Final, Native, Protected)
// Parameters:
// class UEndCondorFortMiniGameUnitItem*   UnitItem                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMinigameEditMenu::OnClicked_UnitSelect(class UEndCondorFortMiniGameUnitItem* UnitItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMinigameEditMenu", "OnClicked_UnitSelect");

	Params::EndCondorFortMinigameEditMenu_OnClicked_UnitSelect Parms{};

	Parms.UnitItem = UnitItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMinigameEditMenu.OnClicked_UnitSwap
// (Final, Native, Protected)
// Parameters:
// class UEndCondorFortMiniGameUnitItem*   UnitItem                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMinigameEditMenu::OnClicked_UnitSwap(class UEndCondorFortMiniGameUnitItem* UnitItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMinigameEditMenu", "OnClicked_UnitSwap");

	Params::EndCondorFortMinigameEditMenu_OnClicked_UnitSwap Parms{};

	Parms.UnitItem = UnitItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMinigameEditMenu.OnSetup_UnitListCell
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMinigameEditMenu::OnSetup_UnitListCell(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMinigameEditMenu", "OnSetup_UnitListCell");

	Params::EndCondorFortMinigameEditMenu_OnSetup_UnitListCell Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMiniGameInfoWindow.OnMeasureItem_Guage
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndCondorFortMiniGameInfoWindow::OnMeasureItem_Guage(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameInfoWindow", "OnMeasureItem_Guage");

	Params::EndCondorFortMiniGameInfoWindow_OnMeasureItem_Guage Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndCondorFortMiniGamePrepareWindow.OnClicked_Board
// (Final, Native, Protected)
// Parameters:
// class FName                             BoardID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndCondorFortMiniGamePrepareWindow::OnClicked_Board(class FName BoardID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGamePrepareWindow", "OnClicked_Board");

	Params::EndCondorFortMiniGamePrepareWindow_OnClicked_Board Parms{};

	Parms.BoardID = BoardID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMiniGameUnitItem.OnButtonClicked
// (Final, Native, Protected)

void UEndCondorFortMiniGameUnitItem::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameUnitItem", "OnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMiniGameUnitItem.OnButtonHovered
// (Final, Native, Protected)

void UEndCondorFortMiniGameUnitItem::OnButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameUnitItem", "OnButtonHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndCondorFortMiniGameUnitItem.OnButtonUnhovered
// (Final, Native, Protected)

void UEndCondorFortMiniGameUnitItem::OnButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndCondorFortMiniGameUnitItem", "OnButtonUnhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.CheckExistSaveCommon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::CheckExistSaveCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "CheckExistSaveCommon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.CheckExistSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::CheckExistSaveData(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "CheckExistSaveData");

	Params::EndDataBaseAPI_CheckExistSaveData Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ClearGameScenarioType
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::ClearGameScenarioType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ClearGameScenarioType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ClearPlayerCharaSpecListBP
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::ClearPlayerCharaSpecListBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ClearPlayerCharaSpecListBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.DebugButtonList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, int32>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, int32> UEndDataBaseAPI::DebugButtonList(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "DebugButtonList");

	Params::EndDataBaseAPI_DebugButtonList Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.DebugButtonList2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseAPI::DebugButtonList2(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "DebugButtonList2");

	Params::EndDataBaseAPI_DebugButtonList2 Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.DebugSetGameScenarioType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndGameScenarioType                    Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::DebugSetGameScenarioType(EEndGameScenarioType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "DebugSetGameScenarioType");

	Params::EndDataBaseAPI_DebugSetGameScenarioType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.EnemyBook_IncrementKillCount_BP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             enemyBookTableId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::EnemyBook_IncrementKillCount_BP(class FName enemyBookTableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "EnemyBook_IncrementKillCount_BP");

	Params::EndDataBaseAPI_EnemyBook_IncrementKillCount_BP Parms{};

	Parms.enemyBookTableId = enemyBookTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.GatherExistSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::GatherExistSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GatherExistSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.GetCurrentDataSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetCurrentDataSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetCurrentDataSlot");

	Params::EndDataBaseAPI_GetCurrentDataSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetCurrentPlayerCharaSpecList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     outNameList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::GetCurrentPlayerCharaSpecList(EEquipmentType equipment, EPlayerType Type, TArray<class FName>* outNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetCurrentPlayerCharaSpecList");

	Params::EndDataBaseAPI_GetCurrentPlayerCharaSpecList Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNameList != nullptr)
		*outNameList = std::move(Parms.outNameList);
}


// Function EndGame.EndDataBaseAPI.GetDataSlotFromDataName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetDataSlotFromDataName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetDataSlotFromDataName");

	Params::EndDataBaseAPI_GetDataSlotFromDataName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetDefaultBattleLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndDataBaseAPI::GetDefaultBattleLeaderTypeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetDefaultBattleLeaderTypeBP");

	Params::EndDataBaseAPI_GetDefaultBattleLeaderTypeBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetDefaultPartyLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndDataBaseAPI::GetDefaultPartyLeaderTypeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetDefaultPartyLeaderTypeBP");

	Params::EndDataBaseAPI_GetDefaultPartyLeaderTypeBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetEmptyDataSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   saves                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetEmptyDataSlot(const TArray<class FString>& saves)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetEmptyDataSlot");

	Params::EndDataBaseAPI_GetEmptyDataSlot Parms{};

	Parms.saves = std::move(saves);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetGameScenarioType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndGameScenarioType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEndGameScenarioType UEndDataBaseAPI::GetGameScenarioType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetGameScenarioType");

	Params::EndDataBaseAPI_GetGameScenarioType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetIOSaveLoadDataResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameDataResult                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameDataResult UEndDataBaseAPI::GetIOSaveLoadDataResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetIOSaveLoadDataResult");

	Params::EndDataBaseAPI_GetIOSaveLoadDataResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetItemNumBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   UniqueID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetItemNumBP(int32 UniqueID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetItemNumBP");

	Params::EndDataBaseAPI_GetItemNumBP Parms{};

	Parms.UniqueID = UniqueID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetLastSelectDataSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetLastSelectDataSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetLastSelectDataSlot");

	Params::EndDataBaseAPI_GetLastSelectDataSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetLocationWorkFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             locationWorkId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndDataBaseAPI::GetLocationWorkFloat(class FName locationWorkId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetLocationWorkFloat");

	Params::EndDataBaseAPI_GetLocationWorkFloat Parms{};

	Parms.locationWorkId = locationWorkId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetLocationWorkInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             locationWorkId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetLocationWorkInteger(class FName locationWorkId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetLocationWorkInteger");

	Params::EndDataBaseAPI_GetLocationWorkInteger Parms{};

	Parms.locationWorkId = locationWorkId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetPlayerLevelName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseAPI::GetPlayerLevelName(EEquipmentType equipment, EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetPlayerLevelName");

	Params::EndDataBaseAPI_GetPlayerLevelName Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetPlayerLevelNames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndDataBaseAPI::GetPlayerLevelNames(EEquipmentType equipment, EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetPlayerLevelNames");

	Params::EndDataBaseAPI_GetPlayerLevelNames Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetPlayerPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndDataBaseAPI::GetPlayerPosition(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetPlayerPosition");

	Params::EndDataBaseAPI_GetPlayerPosition Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetPlayerRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UEndDataBaseAPI::GetPlayerRotation(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetPlayerRotation");

	Params::EndDataBaseAPI_GetPlayerRotation Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetPrevCharaSpecList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     outNameList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::GetPrevCharaSpecList(EEquipmentType equipment, EPlayerType Type, TArray<class FName>* outNameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetPrevCharaSpecList");

	Params::EndDataBaseAPI_GetPrevCharaSpecList Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (outNameList != nullptr)
		*outNameList = std::move(Parms.outNameList);
}


// Function EndGame.EndDataBaseAPI.GetResidentWorkFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             residentWorkId                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndDataBaseAPI::GetResidentWorkFloat(const class FName& residentWorkId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetResidentWorkFloat");

	Params::EndDataBaseAPI_GetResidentWorkFloat Parms{};

	Parms.residentWorkId = residentWorkId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetResidentWorkInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             residentWorkId                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::GetResidentWorkInteger(const class FName& residentWorkId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetResidentWorkInteger");

	Params::EndDataBaseAPI_GetResidentWorkInteger Parms{};

	Parms.residentWorkId = residentWorkId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetSaveDataList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseAPI::GetSaveDataList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetSaveDataList");

	Params::EndDataBaseAPI_GetSaveDataList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetSaveLoadResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameDataResult                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameDataResult UEndDataBaseAPI::GetSaveLoadResult(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetSaveLoadResult");

	Params::EndDataBaseAPI_GetSaveLoadResult Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetTestPlayModeTableID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UEndDataBaseAPI::GetTestPlayModeTableID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetTestPlayModeTableID");

	Params::EndDataBaseAPI_GetTestPlayModeTableID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.GetUpdatePlayTimeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::GetUpdatePlayTimeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "GetUpdatePlayTimeFlag");

	Params::EndDataBaseAPI_GetUpdatePlayTimeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.HasBackUpData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::HasBackUpData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "HasBackUpData");

	Params::EndDataBaseAPI_HasBackUpData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.Hoge00
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge00()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge00");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge01
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge01");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge02
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge02()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge02");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge03
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge03()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge03");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge04
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge04()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge04");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge05
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge05()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge05");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge06
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge06()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge06");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge07
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge07()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge07");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge08
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge08()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge08");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.Hoge09
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::Hoge09()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "Hoge09");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.IsClassic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsClassic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsClassic");

	Params::EndDataBaseAPI_IsClassic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsDataBaseFlagBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   BitFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsDataBaseFlagBP(int32 BitFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsDataBaseFlagBP");

	Params::EndDataBaseAPI_IsDataBaseFlagBP Parms{};

	Parms.BitFlag = BitFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDifficultyType                         Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsDifficulty(EDifficultyType Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsDifficulty");

	Params::EndDataBaseAPI_IsDifficulty Parms{};

	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsFinishStreamMateriaModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsFinishStreamMateriaModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsFinishStreamMateriaModel");

	Params::EndDataBaseAPI_IsFinishStreamMateriaModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsIOSaveLoadData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsIOSaveLoadData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsIOSaveLoadData");

	Params::EndDataBaseAPI_IsIOSaveLoadData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsMakeCommonSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsMakeCommonSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsMakeCommonSaveData");

	Params::EndDataBaseAPI_IsMakeCommonSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsMakeLocationSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsMakeLocationSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsMakeLocationSaveData");

	Params::EndDataBaseAPI_IsMakeLocationSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsSaveLoadExecuting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRequestID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsSaveLoadExecuting(EIOGameDataRequestLayer InLayer, int32 InRequestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsSaveLoadExecuting");

	Params::EndDataBaseAPI_IsSaveLoadExecuting Parms{};

	Parms.InLayer = InLayer;
	Parms.InRequestID = InRequestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.IsStoryFlag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             StoryFlagID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseAPI::IsStoryFlag(const class FName& StoryFlagID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "IsStoryFlag");

	Params::EndDataBaseAPI_IsStoryFlag Parms{};

	Parms.StoryFlagID = StoryFlagID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.MakeCommonSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::MakeCommonSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "MakeCommonSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.MakeLocationSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::MakeLocationSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "MakeLocationSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.MakeResidentSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::MakeResidentSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "MakeResidentSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ReflectionCommonSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::ReflectionCommonSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ReflectionCommonSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ReflectionLocationSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    snap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::ReflectionLocationSaveData(bool snap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ReflectionLocationSaveData");

	Params::EndDataBaseAPI_ReflectionLocationSaveData Parms{};

	Parms.snap = snap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ReflectionPointSaveToAutoSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::ReflectionPointSaveToAutoSave(class FName Level, const class FString& Name_0, const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ReflectionPointSaveToAutoSave");

	Params::EndDataBaseAPI_ReflectionPointSaveToAutoSave Parms{};

	Parms.Level = Level;
	Parms.Name_0 = std::move(Name_0);
	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ReflectionResidentSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    snap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    backup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::ReflectionResidentSaveData(bool snap, bool backup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ReflectionResidentSaveData");

	Params::EndDataBaseAPI_ReflectionResidentSaveData Parms{};

	Parms.snap = snap;
	Parms.backup = backup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.RequestAutoSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestAutoSave(EIOGameDataRequestLayer InLayer, bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestAutoSave");

	Params::EndDataBaseAPI_RequestAutoSave Parms{};

	Parms.InLayer = InLayer;
	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestBackUpAutoSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestBackUpAutoSave(EIOGameDataRequestLayer InLayer, bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestBackUpAutoSave");

	Params::EndDataBaseAPI_RequestBackUpAutoSave Parms{};

	Parms.InLayer = InLayer;
	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestBackUpLoad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestBackUpLoad(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestBackUpLoad");

	Params::EndDataBaseAPI_RequestBackUpLoad Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestCheckExistSaveCommon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestCheckExistSaveCommon(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestCheckExistSaveCommon");

	Params::EndDataBaseAPI_RequestCheckExistSaveCommon Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestCheckExistSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestCheckExistSaveData(EIOGameDataRequestLayer InLayer, int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestCheckExistSaveData");

	Params::EndDataBaseAPI_RequestCheckExistSaveData Parms{};

	Parms.InLayer = InLayer;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestGatherExistSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestGatherExistSaveData(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestGatherExistSaveData");

	Params::EndDataBaseAPI_RequestGatherExistSaveData Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestGatherExistSaveDataAtSaving
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestGatherExistSaveDataAtSaving(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestGatherExistSaveDataAtSaving");

	Params::EndDataBaseAPI_RequestGatherExistSaveDataAtSaving Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestLoadCommon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestLoadCommon(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestLoadCommon");

	Params::EndDataBaseAPI_RequestLoadCommon Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestLoadData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isCarryOverPlayerParameter                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestLoadData(EIOGameDataRequestLayer InLayer, bool isCarryOverPlayerParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestLoadData");

	Params::EndDataBaseAPI_RequestLoadData Parms{};

	Parms.InLayer = InLayer;
	Parms.isCarryOverPlayerParameter = isCarryOverPlayerParameter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestLoadLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestLoadLocation(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestLoadLocation");

	Params::EndDataBaseAPI_RequestLoadLocation Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestResetBackUpAutoSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestResetBackUpAutoSave(EIOGameDataRequestLayer InLayer, bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestResetBackUpAutoSave");

	Params::EndDataBaseAPI_RequestResetBackUpAutoSave Parms{};

	Parms.InLayer = InLayer;
	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestSaveCommon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestSaveCommon(EIOGameDataRequestLayer InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestSaveCommon");

	Params::EndDataBaseAPI_RequestSaveCommon Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EIOGameDataRequestLayer                 InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ignorePreUpdateLocation                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ignoreLocationSave                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseAPI::RequestSaveData(EIOGameDataRequestLayer InLayer, bool ignorePreUpdateLocation, bool ignoreLocationSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestSaveData");

	Params::EndDataBaseAPI_RequestSaveData Parms{};

	Parms.InLayer = InLayer;
	Parms.ignorePreUpdateLocation = ignorePreUpdateLocation;
	Parms.ignoreLocationSave = ignoreLocationSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDataBaseAPI.RequestSnapLoad
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::RequestSnapLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "RequestSnapLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ResetLocationSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::ResetLocationSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ResetLocationSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ResetResidentSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::ResetResidentSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ResetResidentSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.ResetSnapSave
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::ResetSnapSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "ResetSnapSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetCurrentDataSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetCurrentDataSlot(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetCurrentDataSlot");

	Params::EndDataBaseAPI_SetCurrentDataSlot Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetCurrentPlayerCharaSpecList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetCurrentPlayerCharaSpecList(EEquipmentType equipment, EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetCurrentPlayerCharaSpecList");

	Params::EndDataBaseAPI_SetCurrentPlayerCharaSpecList Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetDataBaseFlagBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   BitFlag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetDataBaseFlagBP(int32 BitFlag, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetDataBaseFlagBP");

	Params::EndDataBaseAPI_SetDataBaseFlagBP Parms{};

	Parms.BitFlag = BitFlag;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetDefaultBattleLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetDefaultBattleLeaderTypeBP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetDefaultBattleLeaderTypeBP");

	Params::EndDataBaseAPI_SetDefaultBattleLeaderTypeBP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetDefaultPartyLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetDefaultPartyLeaderTypeBP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetDefaultPartyLeaderTypeBP");

	Params::EndDataBaseAPI_SetDefaultPartyLeaderTypeBP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetLocationWorkFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             locationWorkId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetLocationWorkFloat(class FName locationWorkId, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetLocationWorkFloat");

	Params::EndDataBaseAPI_SetLocationWorkFloat Parms{};

	Parms.locationWorkId = locationWorkId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetLocationWorkInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             locationWorkId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetLocationWorkInteger(class FName locationWorkId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetLocationWorkInteger");

	Params::EndDataBaseAPI_SetLocationWorkInteger Parms{};

	Parms.locationWorkId = locationWorkId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetPrevCharaSpecList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEquipmentType                          equipment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     nameList                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetPrevCharaSpecList(EEquipmentType equipment, EPlayerType Type, const TArray<class FName>& nameList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetPrevCharaSpecList");

	Params::EndDataBaseAPI_SetPrevCharaSpecList Parms{};

	Parms.equipment = equipment;
	Parms.Type = Type;
	Parms.nameList = std::move(nameList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetResidentWorkFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             residentWorkId                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetResidentWorkFloat(const class FName& residentWorkId, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetResidentWorkFloat");

	Params::EndDataBaseAPI_SetResidentWorkFloat Parms{};

	Parms.residentWorkId = residentWorkId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetResidentWorkInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             residentWorkId                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetResidentWorkInteger(const class FName& residentWorkId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetResidentWorkInteger");

	Params::EndDataBaseAPI_SetResidentWorkInteger Parms{};

	Parms.residentWorkId = residentWorkId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetStoryFlagBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             StoryFlagID                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetStoryFlagBP(const class FName& StoryFlagID, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetStoryFlagBP");

	Params::EndDataBaseAPI_SetStoryFlagBP Parms{};

	Parms.StoryFlagID = StoryFlagID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetTestPlayModeTableID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             setTableID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetTestPlayModeTableID(class FName setTableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetTestPlayModeTableID");

	Params::EndDataBaseAPI_SetTestPlayModeTableID Parms{};

	Parms.setTableID = setTableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetupInitialParameter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             debugPartyListDataTableId                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::SetupInitialParameter(class FName debugPartyListDataTableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetupInitialParameter");

	Params::EndDataBaseAPI_SetupInitialParameter Parms{};

	Parms.debugPartyListDataTableId = debugPartyListDataTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.SetupSaveDataCommonDefaultParameter
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::SetupSaveDataCommonDefaultParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "SetupSaveDataCommonDefaultParameter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartAutoSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartAutoSave(bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartAutoSave");

	Params::EndDataBaseAPI_StartAutoSave Parms{};

	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartAutoSaveForInitializedLocationData
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartAutoSaveForInitializedLocationData(bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartAutoSaveForInitializedLocationData");

	Params::EndDataBaseAPI_StartAutoSaveForInitializedLocationData Parms{};

	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartBackUpAutoSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartBackUpAutoSave(bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartBackUpAutoSave");

	Params::EndDataBaseAPI_StartBackUpAutoSave Parms{};

	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartBackUpLoad
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartBackUpLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartBackUpLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartLoadCommon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartLoadCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartLoadCommon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartLoadData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    isCarryOverPlayerParameter                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartLoadData(bool isCarryOverPlayerParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartLoadData");

	Params::EndDataBaseAPI_StartLoadData Parms{};

	Parms.isCarryOverPlayerParameter = isCarryOverPlayerParameter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartLoadLocation
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartLoadLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartLoadLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartPlayTime
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartPlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartPlayTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartResetBackUpAutoSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartResetBackUpAutoSave(bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartResetBackUpAutoSave");

	Params::EndDataBaseAPI_StartResetBackUpAutoSave Parms{};

	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartSaveCommon
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartSaveCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartSaveCommon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ignorePreUpdateLocation                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ignoreLocationSave                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartSaveData(bool ignorePreUpdateLocation, bool ignoreLocationSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartSaveData");

	Params::EndDataBaseAPI_StartSaveData Parms{};

	Parms.ignorePreUpdateLocation = ignorePreUpdateLocation;
	Parms.ignoreLocationSave = ignoreLocationSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartSnapLoad
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartSnapLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartSnapLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartSnapSave
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    override_position                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          pos                                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         rot                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::StartSnapSave(bool override_position, const struct FVector& pos, const struct FRotator& rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartSnapSave");

	Params::EndDataBaseAPI_StartSnapSave Parms{};

	Parms.override_position = override_position;
	Parms.pos = std::move(pos);
	Parms.rot = std::move(rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StartStreamMateriaModel
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StartStreamMateriaModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StartStreamMateriaModel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.StopPlayTime
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseAPI::StopPlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "StopPlayTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDataBaseAPI.WaitIOSaveLoadData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndDataBaseAPI::WaitIOSaveLoadData(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseAPI", "WaitIOSaveLoadData");

	Params::EndDataBaseAPI_WaitIOSaveLoadData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPlayBlendSpaceActionActorInterface.OnGetCurrentBlendSpaceInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IEndPlayBlendSpaceActionActorInterface::OnGetCurrentBlendSpaceInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPlayBlendSpaceActionActorInterface", "OnGetCurrentBlendSpaceInput");

	Params::EndPlayBlendSpaceActionActorInterface_OnGetCurrentBlendSpaceInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.FA0122_AnimInstance.RequestArmHeightRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFA0122_AnimInstance::RequestArmHeightRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "RequestArmHeightRate");

	Params::FA0122_AnimInstance_RequestArmHeightRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.FA0122_AnimInstance.RequestBasementAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFA0122_AnimInstance::RequestBasementAngle(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "RequestBasementAngle");

	Params::FA0122_AnimInstance_RequestBasementAngle Parms{};

	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.FA0122_AnimInstance.GetArmHeightRateFromHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFA0122_AnimInstance::GetArmHeightRateFromHeight(float Height) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "GetArmHeightRateFromHeight");

	Params::FA0122_AnimInstance_GetArmHeightRateFromHeight Parms{};

	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.FA0122_AnimInstance.GetCurrentArmHeightRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFA0122_AnimInstance::GetCurrentArmHeightRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "GetCurrentArmHeightRate");

	Params::FA0122_AnimInstance_GetCurrentArmHeightRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.FA0122_AnimInstance.GetCurrentBasementAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFA0122_AnimInstance::GetCurrentBasementAngle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "GetCurrentBasementAngle");

	Params::FA0122_AnimInstance_GetCurrentBasementAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.FA0122_AnimInstance.GetMaxArmHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFA0122_AnimInstance::GetMaxArmHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "GetMaxArmHeight");

	Params::FA0122_AnimInstance_GetMaxArmHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.FA0122_AnimInstance.GetMinArmHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFA0122_AnimInstance::GetMinArmHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FA0122_AnimInstance", "GetMinArmHeight");

	Params::FA0122_AnimInstance_GetMinArmHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSortWindow.OnSortListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSortWindow::OnSortListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSortWindow", "OnSortListPressedItem");

	Params::EndSortWindow_OnSortListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSortWindow.OnSortListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSortWindow::OnSortListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSortWindow", "OnSortListSetupItem");

	Params::EndSortWindow_OnSortListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuFieldMenuHandler.OnCommandClicked
// (Final, Native, Public, BlueprintCallable)

void UEndMenuFieldMenuHandler::OnCommandClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuFieldMenuHandler", "OnCommandClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMateriaListBoxWindow.OnCommandMateriaCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaListBoxWindow::OnCommandMateriaCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaListBoxWindow", "OnCommandMateriaCellSetup");

	Params::EndMainMateriaListBoxWindow_OnCommandMateriaCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMateriaListBoxWindow.OnMateriaCellPressed
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaListBoxWindow::OnMateriaCellPressed(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaListBoxWindow", "OnMateriaCellPressed");

	Params::EndMainMateriaListBoxWindow_OnMateriaCellPressed Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMateriaListBoxWindow.OnMateriaCellSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaListBoxWindow::OnMateriaCellSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaListBoxWindow", "OnMateriaCellSelectedIndexChanged");

	Params::EndMainMateriaListBoxWindow_OnMateriaCellSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMateriaListBoxWindow.OnSetupItemForShop
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMateriaListBoxWindow::OnSetupItemForShop(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMateriaListBoxWindow", "OnSetupItemForShop");

	Params::EndMainMateriaListBoxWindow_OnSetupItemForShop Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainTopMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainTopMenu::OnLeftMenuPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainTopMenu", "OnLeftMenuPressedItem");

	Params::EndMainTopMenu_OnLeftMenuPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainTopMenu.OnLeftMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainTopMenu::OnLeftMenuSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainTopMenu", "OnLeftMenuSelectedIndexChanged");

	Params::EndMainTopMenu_OnLeftMenuSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainTopMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainTopMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainTopMenu", "OnLeftMenuSetupItem");

	Params::EndMainTopMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainTopMenu.OnPlaySlotAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainTopMenu::OnPlaySlotAnimation(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainTopMenu", "OnPlaySlotAnimation");

	Params::EndMainTopMenu_OnPlaySlotAnimation Parms{};

	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMainTopMenu.SetupPartySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndMainTopMenu::SetupPartySlot(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainTopMenu", "SetupPartySlot");

	Params::EndMainTopMenu_SetupPartySlot Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMessageLogs.AddMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMessageLogs::AddMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMessageLogs", "AddMessage");

	Params::EndMessageLogs_AddMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMessageLogs.ClearMessages
// (Final, Native, Public, BlueprintCallable)

void UEndMessageLogs::ClearMessages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMessageLogs", "ClearMessages");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnItemMenuIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnItemMenuIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnItemMenuIndexChanged");

	Params::EndMainItemMenu_OnItemMenuIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnItemMenuMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainItemMenu::OnItemMenuMeasureItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnItemMenuMeasureItem");

	Params::EndMainItemMenu_OnItemMenuMeasureItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainItemMenu.OnItemMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnItemMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnItemMenuPressedItem");

	Params::EndMainItemMenu_OnItemMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnItemMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnItemMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnItemMenuSetupItem");

	Params::EndMainItemMenu_OnItemMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnLeftMenuIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnLeftMenuIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnLeftMenuIndexChanged");

	Params::EndMainItemMenu_OnLeftMenuIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnLeftMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnLeftMenuPressedItem");

	Params::EndMainItemMenu_OnLeftMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnLeftMenuSetupItem");

	Params::EndMainItemMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnMemberMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnMemberMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnMemberMenuPressedItem");

	Params::EndMainItemMenu_OnMemberMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainItemMenu.OnMemberMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainItemMenu::OnMemberMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainItemMenu", "OnMemberMenuSetupItem");

	Params::EndMainItemMenu_OnMemberMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.AddAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDebugAPI::AddAction(class FName Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "AddAction");

	Params::EndDebugAPI_AddAction Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.AddSelectHistory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDebugAPI::AddSelectHistory(const class FString& str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "AddSelectHistory");

	Params::EndDebugAPI_AddSelectHistory Parms{};

	Parms.str = std::move(str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.GetCutSceneEventID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndDebugAPI::GetCutSceneEventID(class FName Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "GetCutSceneEventID");

	Params::EndDebugAPI_GetCutSceneEventID Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDebugAPI.GetDebugState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TableID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           defaultState                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndDebugAPI::GetDebugState(class FName TableID, const class FString& defaultState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "GetDebugState");

	Params::EndDebugAPI_GetDebugState Parms{};

	Parms.TableID = TableID;
	Parms.defaultState = std::move(defaultState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDebugAPI.GetDebugStateBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TableID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    defaultBool                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDebugAPI::GetDebugStateBool(class FName TableID, bool defaultBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "GetDebugStateBool");

	Params::EndDebugAPI_GetDebugStateBool Parms{};

	Parms.TableID = TableID;
	Parms.defaultBool = defaultBool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDebugAPI.IsCompletedTrace
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDebugAPI::IsCompletedTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "IsCompletedTrace");

	Params::EndDebugAPI_IsCompletedTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndDebugAPI.PrintMemory
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDebugAPI::PrintMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "PrintMemory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.RequestExit
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDebugAPI::RequestExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "RequestExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.SetControlRotation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Pitch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Yaw                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Roll                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDebugAPI::SetControlRotation(float Pitch, float Yaw, float Roll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "SetControlRotation");

	Params::EndDebugAPI_SetControlRotation Parms{};

	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;
	Parms.Roll = Roll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.StartCPUCapture
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDebugAPI::StartCPUCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "StartCPUCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.StopCPUCapture
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDebugAPI::StopCPUCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "StopCPUCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.TraceGPU
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDebugAPI::TraceGPU()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "TraceGPU");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndDebugAPI.UpdateSelectHistory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   list                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    changeOrder                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDebugAPI::UpdateSelectHistory(const TArray<class FString>& list, bool changeOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDebugAPI", "UpdateSelectHistory");

	Params::EndDebugAPI_UpdateSelectHistory Parms{};

	Parms.list = std::move(list);
	Parms.changeOrder = changeOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndEnvQueryComponent.GetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndEnvQueryComponent::GetActor(EEqsType Index_0, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "GetActor");

	Params::EndEnvQueryComponent_GetActor Parms{};

	Parms.Index_0 = Index_0;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndEnvQueryComponent.GetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndEnvQueryComponent::GetLocation(EEqsType Index_0, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "GetLocation");

	Params::EndEnvQueryComponent_GetLocation Parms{};

	Parms.Index_0 = Index_0;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndEnvQueryComponent.GetScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndEnvQueryComponent::GetScore(EEqsType Index_0, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "GetScore");

	Params::EndEnvQueryComponent_GetScore Parms{};

	Parms.Index_0 = Index_0;
	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndEnvQueryComponent.IsQueryVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndEnvQueryComponent::IsQueryVisible(EEqsType Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "IsQueryVisible");

	Params::EndEnvQueryComponent_IsQueryVisible Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndEnvQueryComponent.RunQuery
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnvQueryComponent::RunQuery(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "RunQuery");

	Params::EndEnvQueryComponent_RunQuery Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnvQueryComponent.SetQuery
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEnvQuery*                        InQuery                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnvQueryComponent::SetQuery(EEqsType Index_0, class UEnvQuery* InQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "SetQuery");

	Params::EndEnvQueryComponent_SetQuery Parms{};

	Parms.Index_0 = Index_0;
	Parms.InQuery = InQuery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnvQueryComponent.SetQueryActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnvQueryComponent::SetQueryActive(EEqsType Index_0, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "SetQueryActive");

	Params::EndEnvQueryComponent_SetQueryActive Parms{};

	Parms.Index_0 = Index_0;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEnvQueryComponent.SetQueryAllActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEqsType                                Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEnvQueryComponent::SetQueryAllActive(EEqsType Index_0, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEnvQueryComponent", "SetQueryAllActive");

	Params::EndEnvQueryComponent_SetQueryAllActive Parms{};

	Parms.Index_0 = Index_0;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnCoreListSetupItemAerith
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnCoreListSetupItemAerith(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnCoreListSetupItemAerith");

	Params::EndMainWeaponUpgradeEquipMenu_OnCoreListSetupItemAerith Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnCoreListSetupItemBarret
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnCoreListSetupItemBarret(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnCoreListSetupItemBarret");

	Params::EndMainWeaponUpgradeEquipMenu_OnCoreListSetupItemBarret Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnCoreListSetupItemCloud
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnCoreListSetupItemCloud(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnCoreListSetupItemCloud");

	Params::EndMainWeaponUpgradeEquipMenu_OnCoreListSetupItemCloud Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnCoreListSetupItemSonon
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnCoreListSetupItemSonon(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnCoreListSetupItemSonon");

	Params::EndMainWeaponUpgradeEquipMenu_OnCoreListSetupItemSonon Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnCoreListSetupItemTifa
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnCoreListSetupItemTifa(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnCoreListSetupItemTifa");

	Params::EndMainWeaponUpgradeEquipMenu_OnCoreListSetupItemTifa Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnCoreListSetupItemYuffie
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnCoreListSetupItemYuffie(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnCoreListSetupItemYuffie");

	Params::EndMainWeaponUpgradeEquipMenu_OnCoreListSetupItemYuffie Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnEquipMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnEquipMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnEquipMenuPressedItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnEquipMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnEquipMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnEquipMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnEquipMenuSelectedIndexChanged");

	Params::EndMainWeaponUpgradeEquipMenu_OnEquipMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnEquipMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnEquipMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnEquipMenuSetupItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnEquipMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnMemberMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnMemberMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnMemberMenuPressedItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnMemberMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnMemberMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnMemberMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnMemberMenuSelectedIndexChanged");

	Params::EndMainWeaponUpgradeEquipMenu_OnMemberMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnMemberMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnMemberMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnMemberMenuSetupItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnMemberMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnSortListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnSortListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnSortListPressedItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnSortListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnSpListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnSpListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnSpListPressedItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnSpListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnSpListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnSpListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnSpListSelectedIndexChanged");

	Params::EndMainWeaponUpgradeEquipMenu_OnSpListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.OnSpListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::OnSpListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "OnSpListSetupItem");

	Params::EndMainWeaponUpgradeEquipMenu_OnSpListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeEquipMenu.UpdateCharaImage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEndImage*                        Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperSprite*                     Sprite                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeEquipMenu::UpdateCharaImage(EPlayerType PlayerType, class UEndImage* Widget, class UPaperSprite* Sprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeEquipMenu", "UpdateCharaImage");

	Params::EndMainWeaponUpgradeEquipMenu_UpdateCharaImage Parms{};

	Parms.PlayerType = PlayerType;
	Parms.Widget = Widget;
	Parms.Sprite = Sprite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndEquipmentCell.UpdateEquipStatus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Defense                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MagicAttack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MagicDefense                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEquipmentCell::UpdateEquipStatus(int32 Attack, int32 Defense, int32 MagicAttack, int32 MagicDefense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEquipmentCell", "UpdateEquipStatus");

	Params::EndEquipmentCell_UpdateEquipStatus Parms{};

	Parms.Attack = Attack;
	Parms.Defense = Defense;
	Parms.MagicAttack = MagicAttack;
	Parms.MagicDefense = MagicDefense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndEquipmentMateriaInfoWindow.OnCoreListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEquipmentMateriaInfoWindow::OnCoreListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEquipmentMateriaInfoWindow", "OnCoreListSetupItem");

	Params::EndEquipmentMateriaInfoWindow_OnCoreListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEquipmentMateriaInfoWindow.OnMateriaInfoListSetupItem
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndEquipmentMateriaInfoWindow::OnMateriaInfoListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEquipmentMateriaInfoWindow", "OnMateriaInfoListSetupItem");

	Params::EndEquipmentMateriaInfoWindow_OnMateriaInfoListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndEquipmentMateriaInfoWindow.OnMeasureInfoListSize
// (Final, Native, Public, HasDefaults)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndEquipmentMateriaInfoWindow::OnMeasureInfoListSize(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndEquipmentMateriaInfoWindow", "OnMeasureInfoListSize");

	Params::EndEquipmentMateriaInfoWindow_OnMeasureInfoListSize Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndFeelerWallExActor.Play
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndFeelerWallExActor::Play(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFeelerWallExActor", "Play");

	Params::EndFeelerWallExActor_Play Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFeelerWallExActor.Stop
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndFeelerWallExActor::Stop(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFeelerWallExActor", "Stop");

	Params::EndFeelerWallExActor_Stop Parms{};

	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndFieldCameraOperator.OnOwnerCharaChangedAttachedActors
// (Final, Native, Public)

void AEndFieldCameraOperator::OnOwnerCharaChangedAttachedActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndFieldCameraOperator", "OnOwnerCharaChangedAttachedActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameMode.InitEditorGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LocationName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    QuickStart                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OverRideEnvName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCutName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndGameMode::InitEditorGameMode(const class UObject* WorldContextObject, class FName LocationName, bool QuickStart, class FName OverRideEnvName, class FName InCutName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameMode", "InitEditorGameMode");

	Params::EndGameMode_InitEditorGameMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LocationName = LocationName;
	Parms.QuickStart = QuickStart;
	Parms.OverRideEnvName = OverRideEnvName;
	Parms.InCutName = InCutName;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameMode.InitEditorPreviewGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndGameMode::InitEditorPreviewGameMode(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameMode", "InitEditorPreviewGameMode");

	Params::EndGameMode_InitEditorPreviewGameMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.OnDebugPauseEnable
// (Final, Exec, Native, Static, Public)

void AEndGameState::OnDebugPauseEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameState", "OnDebugPauseEnable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.OnDebugPauseFrameSkip
// (Final, Exec, Native, Static, Public)

void AEndGameState::OnDebugPauseFrameSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameState", "OnDebugPauseFrameSkip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.SendGameTrigger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameTrigger                            Trigger                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameState                              toState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndGameState::SendGameTrigger(const class UObject* WorldContextObject, EGameTrigger Trigger, EGameState toState, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameState", "SendGameTrigger");

	Params::EndGameState_SendGameTrigger Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Trigger = Trigger;
	Parms.toState = toState;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.WaitGameDifferentState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameState                              toState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndGameState::WaitGameDifferentState(const class UObject* WorldContextObject, EGameState toState, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameState", "WaitGameDifferentState");

	Params::EndGameState_WaitGameDifferentState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.toState = toState;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.WaitGameDifferentStateList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EGameState>                      toStateList                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndGameState::WaitGameDifferentStateList(const class UObject* WorldContextObject, const TArray<EGameState>& toStateList, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameState", "WaitGameDifferentStateList");

	Params::EndGameState_WaitGameDifferentStateList Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.toStateList = std::move(toStateList);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.WaitGameState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameState                              toState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AEndGameState::WaitGameState(const class UObject* WorldContextObject, EGameState toState, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndGameState", "WaitGameState");

	Params::EndGameState_WaitGameState Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.toState = toState;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.ActivateLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TargetLocation                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OverRideEnvName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndGameState::ActivateLocation(const class FString& TargetLocation, class FName OverRideEnvName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "ActivateLocation");

	Params::EndGameState_ActivateLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.OverRideEnvName = OverRideEnvName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.GetGameSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AEndGameState::GetGameSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "GetGameSpeed");

	Params::EndGameState_GetGameSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndGameState.IsGamePause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndGameState::IsGamePause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "IsGamePause");

	Params::EndGameState_IsGamePause Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndGameState.IsGameStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameStatus                             Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEndGameState::IsGameStatus(EGameStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "IsGameStatus");

	Params::EndGameState_IsGameStatus Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndGameState.SetGameSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameSpeed                              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndGameState::SetGameSpeed(EGameSpeed Type, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "SetGameSpeed");

	Params::EndGameState_SetGameSpeed Parms{};

	Parms.Type = Type;
	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.SetGameStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameStatus                             Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Set                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndGameState::SetGameStatus(EGameStatus Status, bool Set)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "SetGameStatus");

	Params::EndGameState_SetGameStatus Parms{};

	Parms.Status = Status;
	Parms.Set = Set;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGameState.SetRequestGamePauseOn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGamePause                              Pause                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEndGameState::SetRequestGamePauseOn(EGamePause Pause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGameState", "SetRequestGamePauseOn");

	Params::EndGameState_SetRequestGamePauseOn Parms{};

	Parms.Pause = Pause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGauge.SetFillColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGauge::SetFillColorAndOpacity(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGauge", "SetFillColorAndOpacity");

	Params::EndGauge_SetFillColorAndOpacity Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGauge.SetFillEndColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGauge::SetFillEndColorAndOpacity(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGauge", "SetFillEndColorAndOpacity");

	Params::EndGauge_SetFillEndColorAndOpacity Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGauge.SetMaxValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMaxValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGauge::SetMaxValue(float InMaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGauge", "SetMaxValue");

	Params::EndGauge_SetMaxValue Parms{};

	Parms.InMaxValue = InMaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGauge.SetPreviewColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGauge::SetPreviewColorAndOpacity(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGauge", "SetPreviewColorAndOpacity");

	Params::EndGauge_SetPreviewColorAndOpacity Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGauge.SetPreviewValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPreviewValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGauge::SetPreviewValue(float InPreviewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGauge", "SetPreviewValue");

	Params::EndGauge_SetPreviewValue Parms{};

	Parms.InPreviewValue = InPreviewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGauge.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGauge::SetValue(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGauge", "SetValue");

	Params::EndGauge_SetValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndGBikeMenu.OnGBikeCellSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndGBikeMenu::OnGBikeCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndGBikeMenu", "OnGBikeCellSetup");

	Params::EndGBikeMenu_OnGBikeCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UEndImage::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "GetDynamicMaterial");

	Params::EndImage_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndImage.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetBlendMode");

	Params::EndImage_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndImage::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetBrush");

	Params::EndImage_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetBrushFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetBrushFromAsset");

	Params::EndImage_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetBrushFromMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetBrushFromMaterial");

	Params::EndImage_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetBrushFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetBrushFromTexture");

	Params::EndImage_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetBrushFromTextureDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetBrushFromTextureDynamic");

	Params::EndImage_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetColorAndOpacity");

	Params::EndImage_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndImage.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndImage::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndImage", "SetOpacity");

	Params::EndImage_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndInstancedLightweightPhysicsComponent.AddPhysicsInstance
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                       Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          Impulse                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndInstancedLightweightPhysicsComponent::AddPhysicsInstance(const struct FTransform& Transform, const struct FVector& Impulse, float DelayTime, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndInstancedLightweightPhysicsComponent", "AddPhysicsInstance");

	Params::EndInstancedLightweightPhysicsComponent_AddPhysicsInstance Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Impulse = std::move(Impulse);
	Parms.DelayTime = DelayTime;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.CheckLoadStreamLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::CheckLoadStreamLevel(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "CheckLoadStreamLevel");

	Params::EndLevelLoader_CheckLoadStreamLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.CheckLoadStreamLevelSepc
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::CheckLoadStreamLevelSepc(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "CheckLoadStreamLevelSepc");

	Params::EndLevelLoader_CheckLoadStreamLevelSepc Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.DoLoadStreamLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndLevelLoader::DoLoadStreamLevelSet(EStreamLevelSetSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "DoLoadStreamLevelSet");

	Params::EndLevelLoader_DoLoadStreamLevelSet Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.FindActorFromLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndLevelLoader::FindActorFromLevel(class FName LevelName, class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FindActorFromLevel");

	Params::EndLevelLoader_FindActorFromLevel Parms{};

	Parms.LevelName = LevelName;
	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.FindActorFromWorld
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UEndLevelLoader::FindActorFromWorld(class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FindActorFromWorld");

	Params::EndLevelLoader_FindActorFromWorld Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.FindCharacterFromLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndLevelLoader::FindCharacterFromLevel(class FName LevelName, class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FindCharacterFromLevel");

	Params::EndLevelLoader_FindCharacterFromLevel Parms{};

	Parms.LevelName = LevelName;
	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.FindCharacterFromWorld
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndCharacter* UEndLevelLoader::FindCharacterFromWorld(class FName ActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FindCharacterFromWorld");

	Params::EndLevelLoader_FindCharacterFromWorld Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.FinishLoadStreamLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndLevelLoader::FinishLoadStreamLevel(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FinishLoadStreamLevel");

	Params::EndLevelLoader_FinishLoadStreamLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.FinishLoadStreamLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndLevelLoader::FinishLoadStreamLevelSet(EStreamLevelSetSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FinishLoadStreamLevelSet");

	Params::EndLevelLoader_FinishLoadStreamLevelSet Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.FinishLoadStreamLevelSpec
// (Final, Native, Static, Public, BlueprintCallable)

void UEndLevelLoader::FinishLoadStreamLevelSpec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "FinishLoadStreamLevelSpec");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.GetCacheLoadStreamHideLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UEndLevelLoader::GetCacheLoadStreamHideLevelSet(EStreamLevelSetSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetCacheLoadStreamHideLevelSet");

	Params::EndLevelLoader_GetCacheLoadStreamHideLevelSet Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.GetLoadStreamLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndLevelLoader::GetLoadStreamLevel(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetLoadStreamLevel");

	Params::EndLevelLoader_GetLoadStreamLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.GetLoadStreamLevels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    load                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndLevelLoader::GetLoadStreamLevels(const class UObject* WorldContextObject, bool load)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetLoadStreamLevels");

	Params::EndLevelLoader_GetLoadStreamLevels Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.load = load;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.GetLoadStreamLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndLevelLoader::GetLoadStreamLevelSet(EStreamLevelSetSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetLoadStreamLevelSet");

	Params::EndLevelLoader_GetLoadStreamLevelSet Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.GetLoadStreamLevelSpec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndLevelLoader::GetLoadStreamLevelSpec(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetLoadStreamLevelSpec");

	Params::EndLevelLoader_GetLoadStreamLevelSpec Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.GetLoadStreamLevelSpecPriority
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndLevelLoader::GetLoadStreamLevelSpecPriority(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetLoadStreamLevelSpecPriority");

	Params::EndLevelLoader_GetLoadStreamLevelSpecPriority Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.GetUnLoadStreamLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndLevelLoader::GetUnLoadStreamLevelSet(EStreamLevelSetSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "GetUnLoadStreamLevelSet");

	Params::EndLevelLoader_GetUnLoadStreamLevelSet Parms{};

	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.IsBoostLoading
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndLevelLoader::IsBoostLoading(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "IsBoostLoading");

	Params::EndLevelLoader_IsBoostLoading Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.IsLoadStreamLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndLevelLoader::IsLoadStreamLevel(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "IsLoadStreamLevel");

	Params::EndLevelLoader_IsLoadStreamLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.IsLoadStreamLevelSpec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndLevelLoader::IsLoadStreamLevelSpec(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "IsLoadStreamLevelSpec");

	Params::EndLevelLoader_IsLoadStreamLevelSpec Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelGroups
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     LevelNames                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelGroups(const class UObject* WorldContextObject, int32 Priority, const TArray<class FName>& LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelGroups");

	Params::EndLevelLoader_LoadStreamLevelGroups Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.LevelNames = std::move(LevelNames);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelGroupsWithHide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     LevelNames                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<uint8>                           hides                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelGroupsWithHide(const class UObject* WorldContextObject, int32 Priority, const TArray<class FName>& LevelNames, const TArray<uint8>& hides, EStreamLevelSetSlot Slot, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelGroupsWithHide");

	Params::EndLevelLoader_LoadStreamLevelGroupsWithHide Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.LevelNames = std::move(LevelNames);
	Parms.hides = std::move(hides);
	Parms.Slot = Slot;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     LevelNames                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevels(const class UObject* WorldContextObject, const TArray<class FName>& LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevels");

	Params::EndLevelLoader_LoadStreamLevels Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelNames = std::move(LevelNames);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStreamLevelSetSlot                     Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     LevelNames                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelSet(const class UObject* WorldContextObject, EStreamLevelSetSlot Slot, int32 Priority, const TArray<class FName>& LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelSet");

	Params::EndLevelLoader_LoadStreamLevelSet Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Slot = Slot;
	Parms.Priority = Priority;
	Parms.LevelNames = std::move(LevelNames);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelSingle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelNames                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelSingle(const class UObject* WorldContextObject, int32 Priority, class FName LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelSingle");

	Params::EndLevelLoader_LoadStreamLevelSingle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.LevelNames = LevelNames;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelSingleWithHide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelNames                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   hide                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelSingleWithHide(const class UObject* WorldContextObject, int32 Priority, class FName LevelNames, uint8 hide, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelSingleWithHide");

	Params::EndLevelLoader_LoadStreamLevelSingleWithHide Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.LevelNames = LevelNames;
	Parms.hide = hide;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelSpec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelSpec(const class UObject* WorldContextObject, int32 Priority, class FName SpecName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelSpec");

	Params::EndLevelLoader_LoadStreamLevelSpec Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.SpecName = SpecName;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.LoadStreamLevelSpecInternal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::LoadStreamLevelSpecInternal(const class UObject* WorldContextObject, int32 Priority, class FName SpecName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "LoadStreamLevelSpecInternal");

	Params::EndLevelLoader_LoadStreamLevelSpecInternal Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.SpecName = SpecName;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.MakeLongLevelName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ShortName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndLevelLoader::MakeLongLevelName(const class FString& ShortName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "MakeLongLevelName");

	Params::EndLevelLoader_MakeLongLevelName Parms{};

	Parms.ShortName = std::move(ShortName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndLevelLoader.SetShowFrameLimitFree
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isFree                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndLevelLoader::SetShowFrameLimitFree(const class UObject* WorldContextObject, bool isFree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "SetShowFrameLimitFree");

	Params::EndLevelLoader_SetShowFrameLimitFree Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.isFree = isFree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.UnloadStreamLevelGroups
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     LevelNames                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::UnloadStreamLevelGroups(const class UObject* WorldContextObject, int32 Priority, const TArray<class FName>& LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "UnloadStreamLevelGroups");

	Params::EndLevelLoader_UnloadStreamLevelGroups Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.LevelNames = std::move(LevelNames);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.UnloadStreamLevels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     LevelNames                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::UnloadStreamLevels(const class UObject* WorldContextObject, const TArray<class FName>& LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "UnloadStreamLevels");

	Params::EndLevelLoader_UnloadStreamLevels Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelNames = std::move(LevelNames);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.UnloadStreamLevelSingle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LevelNames                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::UnloadStreamLevelSingle(const class UObject* WorldContextObject, int32 Priority, class FName LevelNames, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "UnloadStreamLevelSingle");

	Params::EndLevelLoader_UnloadStreamLevelSingle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.LevelNames = LevelNames;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.UnLoadStreamLevelSpec
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::UnLoadStreamLevelSpec(const class UObject* WorldContextObject, int32 Priority, class FName SpecName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "UnLoadStreamLevelSpec");

	Params::EndLevelLoader_UnLoadStreamLevelSpec Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.SpecName = SpecName;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.UnLoadStreamLevelSpecInternal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::UnLoadStreamLevelSpecInternal(const class UObject* WorldContextObject, int32 Priority, class FName SpecName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "UnLoadStreamLevelSpecInternal");

	Params::EndLevelLoader_UnLoadStreamLevelSpecInternal Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Priority = Priority;
	Parms.SpecName = SpecName;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.WaitShowSlicingLevelSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::WaitShowSlicingLevelSet(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "WaitShowSlicingLevelSet");

	Params::EndLevelLoader_WaitShowSlicingLevelSet Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndLevelLoader.WaitStreamLevelEmpty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndLevelLoader::WaitStreamLevelEmpty(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndLevelLoader", "WaitStreamLevelEmpty");

	Params::EndLevelLoader_WaitStreamLevelEmpty Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.RefreshItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndListBox::RefreshItem(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "RefreshItem");

	Params::EndListBox_RefreshItem Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.RefreshItems
// (Final, Native, Public, BlueprintCallable)

void UEndListBox::RefreshItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "RefreshItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.SetDesiredCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDesiredCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndListBox::SetDesiredCount(int32 InDesiredCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "SetDesiredCount");

	Params::EndListBox_SetDesiredCount Parms{};

	Parms.InDesiredCount = InDesiredCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.SetItemCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InItemCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndListBox::SetItemCount(int32 InItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "SetItemCount");

	Params::EndListBox_SetItemCount Parms{};

	Parms.InItemCount = InItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndListBox::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "SetPadding");

	Params::EndListBox_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndListBox::SetSelectedIndex(int32 UserIndex, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "SetSelectedIndex");

	Params::EndListBox_SetSelectedIndex Parms{};

	Parms.UserIndex = UserIndex;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndListBox.GetChildAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UEndListBox::GetChildAt(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "GetChildAt");

	Params::EndListBox_GetChildAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndListBox.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndListBox::GetSelectedIndex(int32 UserIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndListBox", "GetSelectedIndex");

	Params::EndListBox_GetSelectedIndex Parms{};

	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainBattleSettingLimitList.OnEndBattleSettingLimitListLevel
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingLimitList::OnEndBattleSettingLimitListLevel(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingLimitList", "OnEndBattleSettingLimitListLevel");

	Params::EndMainBattleSettingLimitList_OnEndBattleSettingLimitListLevel Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnAbilityCellPressed
// (Final, Native, Private)
// Parameters:
// int32                                   AbilityCellIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnAbilityCellPressed(int32 AbilityCellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnAbilityCellPressed");

	Params::EndMainBattleSettingMenu_OnAbilityCellPressed Parms{};

	Parms.AbilityCellIndex = AbilityCellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnAbilityCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnAbilityCellSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnAbilityCellSetup");

	Params::EndMainBattleSettingMenu_OnAbilityCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnAbilitySelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   AbilityCellIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnAbilitySelectedIndexChanged(int32 AbilityCellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnAbilitySelectedIndexChanged");

	Params::EndMainBattleSettingMenu_OnAbilitySelectedIndexChanged Parms{};

	Parms.AbilityCellIndex = AbilityCellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnCategoryCellPressed
// (Final, Native, Private)
// Parameters:
// int32                                   CommandCellIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnCategoryCellPressed(int32 CommandCellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnCategoryCellPressed");

	Params::EndMainBattleSettingMenu_OnCategoryCellPressed Parms{};

	Parms.CommandCellIndex = CommandCellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnCategoryCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnCategoryCellSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnCategoryCellSetup");

	Params::EndMainBattleSettingMenu_OnCategoryCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnCategorySelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CategoryCellIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnCategorySelectedIndexChanged(int32 CategoryCellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnCategorySelectedIndexChanged");

	Params::EndMainBattleSettingMenu_OnCategorySelectedIndexChanged Parms{};

	Parms.CategoryCellIndex = CategoryCellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnLeftMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnLeftMenuPressedItem");

	Params::EndMainBattleSettingMenu_OnLeftMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnLeftMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnLeftMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnLeftMenuSelectedIndexChanged");

	Params::EndMainBattleSettingMenu_OnLeftMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnLeftMenuSetupItem");

	Params::EndMainBattleSettingMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnLimitCellPressed
// (Final, Native, Private)
// Parameters:
// int32                                   LimitCellIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnLimitCellPressed(int32 LimitCellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnLimitCellPressed");

	Params::EndMainBattleSettingMenu_OnLimitCellPressed Parms{};

	Parms.LimitCellIndex = LimitCellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnLimitCellSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnLimitCellSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnLimitCellSelectedIndexChanged");

	Params::EndMainBattleSettingMenu_OnLimitCellSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnLimitCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnLimitCellSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnLimitCellSetup");

	Params::EndMainBattleSettingMenu_OnLimitCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnSettingCellPressed
// (Final, Native, Private)
// Parameters:
// int32                                   SettingCellIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnSettingCellPressed(int32 SettingCellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnSettingCellPressed");

	Params::EndMainBattleSettingMenu_OnSettingCellPressed Parms{};

	Parms.SettingCellIndex = SettingCellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnSettingCellSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnSettingCellSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnSettingCellSelectedIndexChanged");

	Params::EndMainBattleSettingMenu_OnSettingCellSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainBattleSettingMenu.OnSettingCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainBattleSettingMenu::OnSettingCellSetup(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainBattleSettingMenu", "OnSettingCellSetup");

	Params::EndMainBattleSettingMenu_OnSettingCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainDlcTopMenu.OnPressedItemInternal
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainDlcTopMenu::OnPressedItemInternal(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainDlcTopMenu", "OnPressedItemInternal");

	Params::EndMainDlcTopMenu_OnPressedItemInternal Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainDlcTopMenu.OnSelectedIndexChangedInternal
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainDlcTopMenu::OnSelectedIndexChangedInternal(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainDlcTopMenu", "OnSelectedIndexChangedInternal");

	Params::EndMainDlcTopMenu_OnSelectedIndexChangedInternal Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainDlcTopMenu.OnSetupItemInternal
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainDlcTopMenu::OnSetupItemInternal(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainDlcTopMenu", "OnSetupItemInternal");

	Params::EndMainDlcTopMenu_OnSetupItemInternal Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnCharaMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnCharaMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnCharaMenuPressedItem");

	Params::EndMainEquipmentMateriaMenu_OnCharaMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnCharaMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnCharaMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnCharaMenuSelectedIndexChanged");

	Params::EndMainEquipmentMateriaMenu_OnCharaMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnCharaMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnCharaMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnCharaMenuSetupItem");

	Params::EndMainEquipmentMateriaMenu_OnCharaMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipCategoryMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnEquipCategoryMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipCategoryMenuPressedItem");

	Params::EndMainEquipmentMateriaMenu_OnEquipCategoryMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipCategoryMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnEquipCategoryMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipCategoryMenuSelectedIndexChanged");

	Params::EndMainEquipmentMateriaMenu_OnEquipCategoryMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipCategoryMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnEquipCategoryMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipCategoryMenuSetupItem");

	Params::EndMainEquipmentMateriaMenu_OnEquipCategoryMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipMenuMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainEquipmentMateriaMenu::OnEquipMenuMeasureItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipMenuMeasureItem");

	Params::EndMainEquipmentMateriaMenu_OnEquipMenuMeasureItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnEquipMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipMenuPressedItem");

	Params::EndMainEquipmentMateriaMenu_OnEquipMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnEquipMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipMenuSelectedIndexChanged");

	Params::EndMainEquipmentMateriaMenu_OnEquipMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnEquipMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnEquipMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnEquipMenuSetupItem");

	Params::EndMainEquipmentMateriaMenu_OnEquipMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnMateriaMenuMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainEquipmentMateriaMenu::OnMateriaMenuMeasureItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnMateriaMenuMeasureItem");

	Params::EndMainEquipmentMateriaMenu_OnMateriaMenuMeasureItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnMateriaMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnMateriaMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnMateriaMenuPressedItem");

	Params::EndMainEquipmentMateriaMenu_OnMateriaMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnMateriaMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnMateriaMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnMateriaMenuSelectedIndexChanged");

	Params::EndMainEquipmentMateriaMenu_OnMateriaMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnMateriaMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnMateriaMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnMateriaMenuSetupItem");

	Params::EndMainEquipmentMateriaMenu_OnMateriaMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnSlotIndexChanged
// (Final, Native, Private)

void UEndMainEquipmentMateriaMenu::OnSlotIndexChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnSlotIndexChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnSlotPressed
// (Final, Native, Private)

void UEndMainEquipmentMateriaMenu::OnSlotPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnSlotPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnSortListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::OnSortListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnSortListPressedItem");

	Params::EndMainEquipmentMateriaMenu_OnSortListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.OnSummonMateriaSlotPressed
// (Final, Native, Private)

void UEndMainEquipmentMateriaMenu::OnSummonMateriaSlotPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "OnSummonMateriaSlotPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipmentMateriaMenu.UpdateStatusPanel
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::UpdateStatusPanel(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "UpdateStatusPanel");

	Params::EndMainEquipmentMateriaMenu_UpdateStatusPanel Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMainEquipmentMateriaMenu.UpdateStatusPanelWithEquipment
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipmentCategoryMain                  EquipType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EquipID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EquipIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::UpdateStatusPanelWithEquipment(EPlayerType PlayerType, EEquipmentCategoryMain EquipType, const class FName& EquipID, int32 EquipIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "UpdateStatusPanelWithEquipment");

	Params::EndMainEquipmentMateriaMenu_UpdateStatusPanelWithEquipment Parms{};

	Parms.PlayerType = PlayerType;
	Parms.EquipType = EquipType;
	Parms.EquipID = EquipID;
	Parms.EquipIndex = EquipIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMainEquipmentMateriaMenu.UpdateStatusPanelWithMateria
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipmentCategoryMain                  EquipType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OrigMateriaIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetMateriaIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipmentMateriaMenu::UpdateStatusPanelWithMateria(EPlayerType PlayerType, EEquipmentCategoryMain EquipType, int32 SlotIndex, int32 OrigMateriaIndex, int32 TargetMateriaIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipmentMateriaMenu", "UpdateStatusPanelWithMateria");

	Params::EndMainEquipmentMateriaMenu_UpdateStatusPanelWithMateria Parms{};

	Parms.PlayerType = PlayerType;
	Parms.EquipType = EquipType;
	Parms.SlotIndex = SlotIndex;
	Parms.OrigMateriaIndex = OrigMateriaIndex;
	Parms.TargetMateriaIndex = TargetMateriaIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMainEquipMenu.OnCommandEquipCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipMenu::OnCommandEquipCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipMenu", "OnCommandEquipCellSetup");

	Params::EndMainEquipMenu_OnCommandEquipCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipMenu.OnCommandEquipStatusCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipMenu::OnCommandEquipStatusCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipMenu", "OnCommandEquipStatusCellSetup");

	Params::EndMainEquipMenu_OnCommandEquipStatusCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipMenu.OnCommandMemberCellSetup
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainEquipMenu::OnCommandMemberCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipMenu", "OnCommandMemberCellSetup");

	Params::EndMainEquipMenu_OnCommandMemberCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipMenu.OnEndEquipMenuMemberClicked
// (Final, Native, Private)

void UEndMainEquipMenu::OnEndEquipMenuMemberClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipMenu", "OnEndEquipMenuMemberClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainEquipSelectCell.OnEndEquipCellClicked
// (Final, Native, Private)

void UEndMainEquipSelectCell::OnEndEquipCellClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainEquipSelectCell", "OnEndEquipCellClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMagicMenu.OnLeftMenuIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMagicMenu::OnLeftMenuIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMagicMenu", "OnLeftMenuIndexChanged");

	Params::EndMainMagicMenu_OnLeftMenuIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMagicMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMagicMenu::OnLeftMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMagicMenu", "OnLeftMenuPressedItem");

	Params::EndMainMagicMenu_OnLeftMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMagicMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMagicMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMagicMenu", "OnLeftMenuSetupItem");

	Params::EndMainMagicMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMagicMenu.OnMagicMenuIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMagicMenu::OnMagicMenuIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMagicMenu", "OnMagicMenuIndexChanged");

	Params::EndMainMagicMenu_OnMagicMenuIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMagicMenu.OnMagicMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMagicMenu::OnMagicMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMagicMenu", "OnMagicMenuPressedItem");

	Params::EndMainMagicMenu_OnMagicMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainMagicMenu.OnMagicMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainMagicMenu::OnMagicMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainMagicMenu", "OnMagicMenuSetupItem");

	Params::EndMainMagicMenu_OnMagicMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainManualMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainManualMenu::OnLeftMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainManualMenu", "OnLeftMenuPressedItem");

	Params::EndMainManualMenu_OnLeftMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainManualMenu.OnLeftMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainManualMenu::OnLeftMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainManualMenu", "OnLeftMenuSelectedIndexChanged");

	Params::EndMainManualMenu_OnLeftMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainManualMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainManualMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainManualMenu", "OnLeftMenuSetupItem");

	Params::EndMainManualMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainPlaylogList.OnLogListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainPlaylogList::OnLogListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainPlaylogList", "OnLogListSetupItem");

	Params::EndMainPlaylogList_OnLogListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnLeftMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnLeftMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnLeftMenuSelectedIndexChanged");

	Params::EndMainStatusMenu_OnLeftMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnLeftMenuSetupItem");

	Params::EndMainStatusMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnMeasureAbilityItem
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainStatusMenu::OnMeasureAbilityItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnMeasureAbilityItem");

	Params::EndMainStatusMenu_OnMeasureAbilityItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainStatusMenu.OnMeasureLimitItem
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainStatusMenu::OnMeasureLimitItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnMeasureLimitItem");

	Params::EndMainStatusMenu_OnMeasureLimitItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainStatusMenu.OnMeasureMagicItem
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainStatusMenu::OnMeasureMagicItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnMeasureMagicItem");

	Params::EndMainStatusMenu_OnMeasureMagicItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainStatusMenu.OnMeasureStatusItem
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainStatusMenu::OnMeasureStatusItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnMeasureStatusItem");

	Params::EndMainStatusMenu_OnMeasureStatusItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainStatusMenu.OnMeasureSummonItem
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndMainStatusMenu::OnMeasureSummonItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnMeasureSummonItem");

	Params::EndMainStatusMenu_OnMeasureSummonItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMainStatusMenu.OnSetupAbilityItem
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnSetupAbilityItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnSetupAbilityItem");

	Params::EndMainStatusMenu_OnSetupAbilityItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnSetupLimitItem
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnSetupLimitItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnSetupLimitItem");

	Params::EndMainStatusMenu_OnSetupLimitItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnSetupMagicItem
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnSetupMagicItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnSetupMagicItem");

	Params::EndMainStatusMenu_OnSetupMagicItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnSetupStatusItem
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnSetupStatusItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnSetupStatusItem");

	Params::EndMainStatusMenu_OnSetupStatusItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.OnSetupSummonItem
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::OnSetupSummonItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "OnSetupSummonItem");

	Params::EndMainStatusMenu_OnSetupSummonItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.SetupDescriptionTitle
// (Final, Native, Private, BlueprintCallable)

void UEndMainStatusMenu::SetupDescriptionTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "SetupDescriptionTitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.UpdateDescription
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::UpdateDescription(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "UpdateDescription");

	Params::EndMainStatusMenu_UpdateDescription Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.UpdateEquipmentInfo
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::UpdateEquipmentInfo(int32 CellIndex, EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "UpdateEquipmentInfo");

	Params::EndMainStatusMenu_UpdateEquipmentInfo Parms{};

	Parms.CellIndex = CellIndex;
	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.UpdatePlayerStatusInfo
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::UpdatePlayerStatusInfo(int32 CellIndex, EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "UpdatePlayerStatusInfo");

	Params::EndMainStatusMenu_UpdatePlayerStatusInfo Parms{};

	Parms.CellIndex = CellIndex;
	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainStatusMenu.UpdateStatusPanel
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainStatusMenu::UpdateStatusPanel(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainStatusMenu", "UpdateStatusPanel");

	Params::EndMainStatusMenu_UpdateStatusPanel Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeMenu.OnCoreMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeMenu::OnCoreMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeMenu", "OnCoreMenuSetupItem");

	Params::EndMainWeaponUpgradeMenu_OnCoreMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeMenu.OnMenuInFinish
// (Final, Native, Private, BlueprintCallable)

void UEndMainWeaponUpgradeMenu::OnMenuInFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeMenu", "OnMenuInFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeMenu.OnNoButtonClicked
// (Final, Native, Private)

void UEndMainWeaponUpgradeMenu::OnNoButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeMenu", "OnNoButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeMenu.OnSkillListMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMainWeaponUpgradeMenu::OnSkillListMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeMenu", "OnSkillListMenuSetupItem");

	Params::EndMainWeaponUpgradeMenu_OnSkillListMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMainWeaponUpgradeMenu.OnYesButtonClicked
// (Final, Native, Private)

void UEndMainWeaponUpgradeMenu::OnYesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMainWeaponUpgradeMenu", "OnYesButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPAbsoluteToViewport
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        Geometry                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        AbsoluteCoordinate                                     (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenPosition                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ViewportPosition                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPAbsoluteToViewport(class UWorld* World, const struct FGeometry& Geometry, const struct FVector2D& AbsoluteCoordinate, struct FVector2D* ScreenPosition, struct FVector2D* ViewportPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPAbsoluteToViewport");

	Params::EndMenuBPAPI_BPAbsoluteToViewport Parms{};

	Parms.World = World;
	Parms.Geometry = std::move(Geometry);
	Parms.AbsoluteCoordinate = std::move(AbsoluteCoordinate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ScreenPosition != nullptr)
		*ScreenPosition = std::move(Parms.ScreenPosition);

	if (ViewportPosition != nullptr)
		*ViewportPosition = std::move(Parms.ViewportPosition);
}


// Function EndGame.EndMenuBPAPI.BPGetAllChapters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class FName>               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<class FName> UEndMenuBPAPI::BPGetAllChapters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetAllChapters");

	Params::EndMenuBPAPI_BPGetAllChapters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetCurrentChapter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             ChapterID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UEndMenuBPAPI::BPGetCurrentChapter(class FName* ChapterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetCurrentChapter");

	Params::EndMenuBPAPI_BPGetCurrentChapter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ChapterID != nullptr)
		*ChapterID = Parms.ChapterID;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetCurrentEquipment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipmentCategoryMain                  EquipType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEndDataTableEquipment     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FEndDataTableEquipment UEndMenuBPAPI::BPGetCurrentEquipment(EPlayerType PlayerType, EEquipmentCategoryMain EquipType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetCurrentEquipment");

	Params::EndMenuBPAPI_BPGetCurrentEquipment Parms{};

	Parms.PlayerType = PlayerType;
	Parms.EquipType = EquipType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetFinalPower
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PowerValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleDamageSourcePowerType         PowerType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 UEndMenuBPAPI::BPGetFinalPower(EPlayerType PlayerType, int32 PowerValue, EEndBattleDamageSourcePowerType PowerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetFinalPower");

	Params::EndMenuBPAPI_BPGetFinalPower Parms{};

	Parms.PlayerType = PlayerType;
	Parms.PowerValue = PowerValue;
	Parms.PowerType = PowerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetFirstName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UEndMenuBPAPI::BPGetFirstName(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetFirstName");

	Params::EndMenuBPAPI_BPGetFirstName Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetLastName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UEndMenuBPAPI::BPGetLastName(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetLastName");

	Params::EndMenuBPAPI_BPGetLastName Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetMemberName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndMenuBPAPI::BPGetMemberName(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetMemberName");

	Params::EndMenuBPAPI_BPGetMemberName Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerDexterity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerDexterity(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerDexterity");

	Params::EndMenuBPAPI_BPGetPlayerDexterity Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerExperience
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerExperience(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerExperience");

	Params::EndMenuBPAPI_BPGetPlayerExperience Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerExperienceBase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerExperienceBase(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerExperienceBase");

	Params::EndMenuBPAPI_BPGetPlayerExperienceBase Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerExperienceNext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerExperienceNext(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerExperienceNext");

	Params::EndMenuBPAPI_BPGetPlayerExperienceNext Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerHP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerHP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerHP");

	Params::EndMenuBPAPI_BPGetPlayerHP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerHPMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerHPMax(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerHPMax");

	Params::EndMenuBPAPI_BPGetPlayerHPMax Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerLevel(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerLevel");

	Params::EndMenuBPAPI_BPGetPlayerLevel Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerLimit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerLimit(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerLimit");

	Params::EndMenuBPAPI_BPGetPlayerLimit Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerLimitLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerLimitLevel(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerLimitLevel");

	Params::EndMenuBPAPI_BPGetPlayerLimitLevel Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerLimitLevelMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerLimitLevelMax(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerLimitLevelMax");

	Params::EndMenuBPAPI_BPGetPlayerLimitLevelMax Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerLimitMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerLimitMax(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerLimitMax");

	Params::EndMenuBPAPI_BPGetPlayerLimitMax Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerLuck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerLuck(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerLuck");

	Params::EndMenuBPAPI_BPGetPlayerLuck Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerMagic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerMagic(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerMagic");

	Params::EndMenuBPAPI_BPGetPlayerMagic Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerMagicAttack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerMagicAttack(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerMagicAttack");

	Params::EndMenuBPAPI_BPGetPlayerMagicAttack Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerMagicDefense
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerMagicDefense(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerMagicDefense");

	Params::EndMenuBPAPI_BPGetPlayerMagicDefense Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerMaxMP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerMaxMP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerMaxMP");

	Params::EndMenuBPAPI_BPGetPlayerMaxMP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerMP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerMP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerMP");

	Params::EndMenuBPAPI_BPGetPlayerMP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerPhysicsAttack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerPhysicsAttack(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerPhysicsAttack");

	Params::EndMenuBPAPI_BPGetPlayerPhysicsAttack Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerPhysicsDefense
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerPhysicsDefense(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerPhysicsDefense");

	Params::EndMenuBPAPI_BPGetPlayerPhysicsDefense Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerSpirit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerSpirit(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerSpirit");

	Params::EndMenuBPAPI_BPGetPlayerSpirit Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEndPlayerStatus           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FEndPlayerStatus UEndMenuBPAPI::BPGetPlayerStatus(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerStatus");

	Params::EndMenuBPAPI_BPGetPlayerStatus Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerStatusWithEquipment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipmentCategoryMain                  EquipType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EquipID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EquipmentIndexToEquip                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEndPlayerStatus           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FEndPlayerStatus UEndMenuBPAPI::BPGetPlayerStatusWithEquipment(EPlayerType PlayerType, EEquipmentCategoryMain EquipType, const class FName& EquipID, int32 EquipmentIndexToEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerStatusWithEquipment");

	Params::EndMenuBPAPI_BPGetPlayerStatusWithEquipment Parms{};

	Parms.PlayerType = PlayerType;
	Parms.EquipType = EquipType;
	Parms.EquipID = EquipID;
	Parms.EquipmentIndexToEquip = EquipmentIndexToEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerStatusWithMateria
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OrigMateriaIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetMateriaIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipmentCategoryMain                  materiaEquipType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEndPlayerStatus           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FEndPlayerStatus UEndMenuBPAPI::BPGetPlayerStatusWithMateria(EPlayerType PlayerType, int32 OrigMateriaIndex, int32 TargetMateriaIndex, int32 SlotIndex, EEquipmentCategoryMain materiaEquipType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerStatusWithMateria");

	Params::EndMenuBPAPI_BPGetPlayerStatusWithMateria Parms{};

	Parms.PlayerType = PlayerType;
	Parms.OrigMateriaIndex = OrigMateriaIndex;
	Parms.TargetMateriaIndex = TargetMateriaIndex;
	Parms.SlotIndex = SlotIndex;
	Parms.materiaEquipType = materiaEquipType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerStrength
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerStrength(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerStrength");

	Params::EndMenuBPAPI_BPGetPlayerStrength Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPGetPlayerVitality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndMenuBPAPI::BPGetPlayerVitality(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPGetPlayerVitality");

	Params::EndMenuBPAPI_BPGetPlayerVitality Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPIsCharacterDead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UEndMenuBPAPI::BPIsCharacterDead(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPIsCharacterDead");

	Params::EndMenuBPAPI_BPIsCharacterDead Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuBPAPI.BPLocalToViewport
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        Geometry                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        LocalCoordinate                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenPosition                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ViewportPosition                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPLocalToViewport(class UWorld* World, const struct FGeometry& Geometry, const struct FVector2D& LocalCoordinate, struct FVector2D* ScreenPosition, struct FVector2D* ViewportPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPLocalToViewport");

	Params::EndMenuBPAPI_BPLocalToViewport Parms{};

	Parms.World = World;
	Parms.Geometry = std::move(Geometry);
	Parms.LocalCoordinate = std::move(LocalCoordinate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ScreenPosition != nullptr)
		*ScreenPosition = std::move(Parms.ScreenPosition);

	if (ViewportPosition != nullptr)
		*ViewportPosition = std::move(Parms.ViewportPosition);
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerExperience
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Exp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerExperience(EPlayerType Type, int32 Exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerExperience");

	Params::EndMenuBPAPI_BPSetPlayerExperience Parms{};

	Parms.Type = Type;
	Parms.Exp = Exp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerHP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerHP(EPlayerType Type, int32 HP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerHP");

	Params::EndMenuBPAPI_BPSetPlayerHP Parms{};

	Parms.Type = Type;
	Parms.HP = HP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerHPMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerHPMax(EPlayerType Type, int32 HP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerHPMax");

	Params::EndMenuBPAPI_BPSetPlayerHPMax Parms{};

	Parms.Type = Type;
	Parms.HP = HP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerLevel(EPlayerType Type, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerLevel");

	Params::EndMenuBPAPI_BPSetPlayerLevel Parms{};

	Parms.Type = Type;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerLimit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Limit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerLimit(EPlayerType Type, int32 Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerLimit");

	Params::EndMenuBPAPI_BPSetPlayerLimit Parms{};

	Parms.Type = Type;
	Parms.Limit = Limit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerLimitLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LimitLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerLimitLevel(EPlayerType Type, int32 LimitLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerLimitLevel");

	Params::EndMenuBPAPI_BPSetPlayerLimitLevel Parms{};

	Parms.Type = Type;
	Parms.LimitLevel = LimitLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerLimitLevelMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LimitLevelMax                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerLimitLevelMax(EPlayerType Type, int32 LimitLevelMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerLimitLevelMax");

	Params::EndMenuBPAPI_BPSetPlayerLimitLevelMax Parms{};

	Parms.Type = Type;
	Parms.LimitLevelMax = LimitLevelMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerLimitMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LimitMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerLimitMax(EPlayerType Type, int32 LimitMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerLimitMax");

	Params::EndMenuBPAPI_BPSetPlayerLimitMax Parms{};

	Parms.Type = Type;
	Parms.LimitMax = LimitMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerMaxMP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxHp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerMaxMP(EPlayerType Type, int32 MaxHp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerMaxMP");

	Params::EndMenuBPAPI_BPSetPlayerMaxMP Parms{};

	Parms.Type = Type;
	Parms.MaxHp = MaxHp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetPlayerMP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetPlayerMP(EPlayerType Type, int32 MP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetPlayerMP");

	Params::EndMenuBPAPI_BPSetPlayerMP Parms{};

	Parms.Type = Type;
	Parms.MP = MP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetupBillboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      TopStatus                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    enableReleaseSlate                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetupBillboard(class UUserWidget* TopStatus, EPlayerType PlayerType, bool enableReleaseSlate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetupBillboard");

	Params::EndMenuBPAPI_BPSetupBillboard Parms{};

	Parms.TopStatus = TopStatus;
	Parms.PlayerType = PlayerType;
	Parms.enableReleaseSlate = enableReleaseSlate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetupLeaderLabel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      TopStatus                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             LeaderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetupLeaderLabel(class UUserWidget* TopStatus, EPlayerType PlayerType, EPlayerType LeaderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetupLeaderLabel");

	Params::EndMenuBPAPI_BPSetupLeaderLabel Parms{};

	Parms.TopStatus = TopStatus;
	Parms.PlayerType = PlayerType;
	Parms.LeaderType = LeaderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetupStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      TopStatus                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetupStatus(class UUserWidget* TopStatus, EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetupStatus");

	Params::EndMenuBPAPI_BPSetupStatus Parms{};

	Parms.TopStatus = TopStatus;
	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPSetupStatusPanel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      TopStatus                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerType                             LeaderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPSetupStatusPanel(class UUserWidget* TopStatus, EPlayerType PlayerType, EPlayerType LeaderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPSetupStatusPanel");

	Params::EndMenuBPAPI_BPSetupStatusPanel Parms{};

	Parms.TopStatus = TopStatus;
	Parms.PlayerType = PlayerType;
	Parms.LeaderType = LeaderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.BPViewportToAbsolute
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        Geometry                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        ViewportPosition                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        AbsoluteCoordinate                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPViewportToAbsolute(class UWorld* World, const struct FGeometry& Geometry, const struct FVector2D& ViewportPosition, struct FVector2D* AbsoluteCoordinate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPViewportToAbsolute");

	Params::EndMenuBPAPI_BPViewportToAbsolute Parms{};

	Parms.World = World;
	Parms.Geometry = std::move(Geometry);
	Parms.ViewportPosition = std::move(ViewportPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AbsoluteCoordinate != nullptr)
		*AbsoluteCoordinate = std::move(Parms.AbsoluteCoordinate);
}


// Function EndGame.EndMenuBPAPI.BPViewportToLocal
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        Geometry                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        ViewportPosition                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        LocalCoordinate                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::BPViewportToLocal(class UWorld* World, const struct FGeometry& Geometry, const struct FVector2D& ViewportPosition, struct FVector2D* LocalCoordinate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "BPViewportToLocal");

	Params::EndMenuBPAPI_BPViewportToLocal Parms{};

	Parms.World = World;
	Parms.Geometry = std::move(Geometry);
	Parms.ViewportPosition = std::move(ViewportPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LocalCoordinate != nullptr)
		*LocalCoordinate = std::move(Parms.LocalCoordinate);
}


// Function EndGame.EndMenuBPAPI.ResetLinkedMateria
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UEndMainMateriaListBoxWindow*>MateriaLists                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::ResetLinkedMateria(const TArray<class UEndMainMateriaListBoxWindow*>& MateriaLists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "ResetLinkedMateria");

	Params::EndMenuBPAPI_ResetLinkedMateria Parms{};

	Parms.MateriaLists = std::move(MateriaLists);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.SetIgnoreListRepeatKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UEndListBox*                      Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ButtonName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::SetIgnoreListRepeatKey(const class UEndListBox* Widget, const class FName& ButtonName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "SetIgnoreListRepeatKey");

	Params::EndMenuBPAPI_SetIgnoreListRepeatKey Parms{};

	Parms.Widget = Widget;
	Parms.ButtonName = ButtonName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.SetIgnoreRepeatKey
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UEndVirtualScrollBox*             Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ButtonName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::SetIgnoreRepeatKey(const class UEndVirtualScrollBox* Widget, const class FName& ButtonName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "SetIgnoreRepeatKey");

	Params::EndMenuBPAPI_SetIgnoreRepeatKey Parms{};

	Parms.Widget = Widget;
	Parms.ButtonName = ButtonName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuBPAPI.UpdateLinkedMateria
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UEndMainMateriaListBoxWindow*>MateriaLists                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UEndMenuBPAPI::UpdateLinkedMateria(const TArray<class UEndMainMateriaListBoxWindow*>& MateriaLists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuBPAPI", "UpdateLinkedMateria");

	Params::EndMenuBPAPI_UpdateLinkedMateria Parms{};

	Parms.MateriaLists = std::move(MateriaLists);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuGameOverHandler.OnCommandCellSetup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuGameOverHandler::OnCommandCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuGameOverHandler", "OnCommandCellSetup");

	Params::EndMenuGameOverHandler_OnCommandCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuGameOverHandler.OnCommandClicked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuGameOverHandler::OnCommandClicked(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuGameOverHandler", "OnCommandClicked");

	Params::EndMenuGameOverHandler_OnCommandClicked Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMenuMateriaEquipCell.OnUpdateEquipStatus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEndDataTableEquipment           equipment                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndMenuMateriaEquipCell::OnUpdateEquipStatus(const struct FEndDataTableEquipment& equipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuMateriaEquipCell", "OnUpdateEquipStatus");

	Params::EndMenuMateriaEquipCell_OnUpdateEquipStatus Parms{};

	Parms.equipment = std::move(equipment);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMenuMateriaEquipCell.OnUpdateEquipUpgradedStatus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Defense                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MagicAttack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MagicDefense                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttackAdd                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseAdd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MagicAttackAdd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MagicDefenseAdd                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuMateriaEquipCell::OnUpdateEquipUpgradedStatus(int32 Attack, int32 Defense, int32 MagicAttack, int32 MagicDefense, int32 AttackAdd, int32 DefenseAdd, int32 MagicAttackAdd, int32 MagicDefenseAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuMateriaEquipCell", "OnUpdateEquipUpgradedStatus");

	Params::EndMenuMateriaEquipCell_OnUpdateEquipUpgradedStatus Parms{};

	Parms.Attack = Attack;
	Parms.Defense = Defense;
	Parms.MagicAttack = MagicAttack;
	Parms.MagicDefense = MagicDefense;
	Parms.AttackAdd = AttackAdd;
	Parms.DefenseAdd = DefenseAdd;
	Parms.MagicAttackAdd = MagicAttackAdd;
	Parms.MagicDefenseAdd = MagicDefenseAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMenuMateriaEquipCell.OnUpdateMaterialStatus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ApStr                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuMateriaEquipCell::OnUpdateMaterialStatus(const class FString& ApStr, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuMateriaEquipCell", "OnUpdateMaterialStatus");

	Params::EndMenuMateriaEquipCell_OnUpdateMaterialStatus Parms{};

	Parms.ApStr = std::move(ApStr);
	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMenuMemberSelectBtn.OnChangeCharacterCell
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuMemberSelectBtn::OnChangeCharacterCell(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuMemberSelectBtn", "OnChangeCharacterCell");

	Params::EndMenuMemberSelectBtn_OnChangeCharacterCell Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMenuMemberSelectBtn.OnSetupCharacterCell
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuMemberSelectBtn::OnSetupCharacterCell(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuMemberSelectBtn", "OnSetupCharacterCell");

	Params::EndMenuMemberSelectBtn_OnSetupCharacterCell Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMenuMemberSelectBtn.OnSetupSelectBtn
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerType                             PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMenuMemberSelectBtn::OnSetupSelectBtn(EPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMenuMemberSelectBtn", "OnSetupSelectBtn");

	Params::EndMenuMemberSelectBtn_OnSetupSelectBtn Parms{};

	Parms.PlayerType = PlayerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndGame.EndMenuMigration.GetTextFromTextBlock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InTextBlock                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UEndMenuMigration::GetTextFromTextBlock(class UWidget* InTextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuMigration", "GetTextFromTextBlock");

	Params::EndMenuMigration_GetTextFromTextBlock Parms{};

	Parms.InTextBlock = InTextBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndMenuMigration.SetTextToTextBlock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InTextBlock                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InText                                                 (Parm, NativeAccessSpecifierPublic)

void UEndMenuMigration::SetTextToTextBlock(class UWidget* InTextBlock, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndMenuMigration", "SetTextToTextBlock");

	Params::EndMenuMigration_SetTextToTextBlock Parms{};

	Parms.InTextBlock = InTextBlock;
	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndMidgarMenu.ShowLegend
// (Final, Native, Private)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndMidgarMenu::ShowLegend(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndMidgarMenu", "ShowLegend");

	Params::EndMidgarMenu_ShowLegend Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNaviMap.ConvertToPosition2D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPos                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndNaviMap::ConvertToPosition2D(const struct FVector& InPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNaviMap", "ConvertToPosition2D");

	Params::EndNaviMap_ConvertToPosition2D Parms{};

	Parms.InPos = std::move(InPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNaviMap.SetPosition3D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPos                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNaviMap::SetPosition3D(const struct FVector& InPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNaviMap", "SetPosition3D");

	Params::EndNaviMap_SetPosition3D Parms{};

	Parms.InPos = std::move(InPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNaviMapIcon.SetDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNaviMapIcon::SetDistance(float InDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNaviMapIcon", "SetDistance");

	Params::EndNaviMapIcon_SetDistance Parms{};

	Parms.InDistance = InDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNaviMapOctagon.ConvertToPosition2D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPos                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndNaviMapOctagon::ConvertToPosition2D(const struct FVector& InPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNaviMapOctagon", "ConvertToPosition2D");

	Params::EndNaviMapOctagon_ConvertToPosition2D Parms{};

	Parms.InPos = std::move(InPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNaviMapOctagon.SetPosition3D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InPos                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNaviMapOctagon::SetPosition3D(const struct FVector& InPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNaviMapOctagon", "SetPosition3D");

	Params::EndNaviMapOctagon_SetPosition3D Parms{};

	Parms.InPos = std::move(InPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnButtonTypeListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnButtonTypeListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnButtonTypeListPressedItem");

	Params::EndNewOptionsMenu_OnButtonTypeListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnButtonTypeListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnButtonTypeListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnButtonTypeListSetupItem");

	Params::EndNewOptionsMenu_OnButtonTypeListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnCategoryListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnCategoryListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnCategoryListPressedItem");

	Params::EndNewOptionsMenu_OnCategoryListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnCategoryListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnCategoryListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnCategoryListSelectedIndexChanged");

	Params::EndNewOptionsMenu_OnCategoryListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnCategoryListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnCategoryListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnCategoryListSetupItem");

	Params::EndNewOptionsMenu_OnCategoryListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnControllerListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnControllerListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnControllerListPressedItem");

	Params::EndNewOptionsMenu_OnControllerListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnControllerListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnControllerListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnControllerListSetupItem");

	Params::EndNewOptionsMenu_OnControllerListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnHoverSelectButton
// (Final, Native, Private)

void UEndNewOptionsMenu::OnHoverSelectButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnHoverSelectButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListKeyboardMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndNewOptionsMenu::OnOptionListKeyboardMeasureItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListKeyboardMeasureItem");

	Params::EndNewOptionsMenu_OnOptionListKeyboardMeasureItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListKeyboardPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnOptionListKeyboardPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListKeyboardPressedItem");

	Params::EndNewOptionsMenu_OnOptionListKeyboardPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListKeyboardSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnOptionListKeyboardSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListKeyboardSelectedIndexChanged");

	Params::EndNewOptionsMenu_OnOptionListKeyboardSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListKeyboardSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnOptionListKeyboardSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListKeyboardSetupItem");

	Params::EndNewOptionsMenu_OnOptionListKeyboardSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnOptionListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListPressedItem");

	Params::EndNewOptionsMenu_OnOptionListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnOptionListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListSelectedIndexChanged");

	Params::EndNewOptionsMenu_OnOptionListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnOptionListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnOptionListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnOptionListSetupItem");

	Params::EndNewOptionsMenu_OnOptionListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnSelectListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnSelectListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnSelectListPressedItem");

	Params::EndNewOptionsMenu_OnSelectListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnSelectListSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnSelectListSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnSelectListSelectedIndexChanged");

	Params::EndNewOptionsMenu_OnSelectListSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnSelectListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnSelectListSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnSelectListSetupItem");

	Params::EndNewOptionsMenu_OnSelectListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnSetupGaugeItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNewOptionsMenu::OnSetupGaugeItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnSetupGaugeItem");

	Params::EndNewOptionsMenu_OnSetupGaugeItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNewOptionsMenu.OnUnhoverSelectButton
// (Final, Native, Private)

void UEndNewOptionsMenu::OnUnhoverSelectButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNewOptionsMenu", "OnUnhoverSelectButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetBlendMode");

	Params::EndNumberLabel_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetColorAndOpacity");

	Params::EndNumberLabel_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetFontIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InFontIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetFontIndex(int32 InFontIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetFontIndex");

	Params::EndNumberLabel_SetFontIndex Parms{};

	Parms.InFontIndex = InFontIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetJustification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextJustify                            InJustification                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetJustification(ETextJustify InJustification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetJustification");

	Params::EndNumberLabel_SetJustification Parms{};

	Parms.InJustification = InJustification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetMinDigits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMinDigits                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetMinDigits(int32 InMinDigits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetMinDigits");

	Params::EndNumberLabel_SetMinDigits Parms{};

	Parms.InMinDigits = InMinDigits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetOpacity");

	Params::EndNumberLabel_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetSpacing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSpacing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetSpacing(int32 InSpacing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetSpacing");

	Params::EndNumberLabel_SetSpacing Parms{};

	Parms.InSpacing = InSpacing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndNumberLabel.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndNumberLabel::SetValue(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndNumberLabel", "SetValue");

	Params::EndNumberLabel_SetValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPauseMenu.OnListMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPauseMenu::OnListMenuPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPauseMenu", "OnListMenuPressedItem");

	Params::EndPauseMenu_OnListMenuPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndPauseMenu.OnListMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndPauseMenu::OnListMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndPauseMenu", "OnListMenuSetupItem");

	Params::EndPauseMenu_OnListMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnMateriaMenuMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndQuickMateriaMenu::OnMateriaMenuMeasureItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnMateriaMenuMeasureItem");

	Params::EndQuickMateriaMenu_OnMateriaMenuMeasureItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndQuickMateriaMenu.OnMateriaMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndQuickMateriaMenu::OnMateriaMenuPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnMateriaMenuPressedItem");

	Params::EndQuickMateriaMenu_OnMateriaMenuPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnMateriaMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndQuickMateriaMenu::OnMateriaMenuSelectedIndexChanged(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnMateriaMenuSelectedIndexChanged");

	Params::EndQuickMateriaMenu_OnMateriaMenuSelectedIndexChanged Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnMateriaMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndQuickMateriaMenu::OnMateriaMenuSetupItem(class UWidget* ItemWidget, int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnMateriaMenuSetupItem");

	Params::EndQuickMateriaMenu_OnMateriaMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnSlotIndexChanged
// (Final, Native, Private)

void UEndQuickMateriaMenu::OnSlotIndexChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnSlotIndexChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnSlotPressed
// (Final, Native, Private)

void UEndQuickMateriaMenu::OnSlotPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnSlotPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnSortListPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   CellIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndQuickMateriaMenu::OnSortListPressedItem(int32 CellIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnSortListPressedItem");

	Params::EndQuickMateriaMenu_OnSortListPressedItem Parms{};

	Parms.CellIndex = CellIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndQuickMateriaMenu.OnSummonMateriaSlotPressed
// (Final, Native, Private)

void UEndQuickMateriaMenu::OnSummonMateriaSlotPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndQuickMateriaMenu", "OnSummonMateriaSlotPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndRagdollSEComponent.OnHitRagdoll
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UEndRagdollSEComponent::OnHitRagdoll(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndRagdollSEComponent", "OnHitRagdoll");

	Params::EndRagdollSEComponent_OnHitRagdoll Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSaveDataBootMenuAPI.GatherSaveData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndGameScenarioType                    ScenarioType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutSaveDataList                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndSaveDataBootMenuAPI::GatherSaveData(class UObject* WorldContextObject, EEndGameScenarioType ScenarioType, TArray<class FString>* OutSaveDataList, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSaveDataBootMenuAPI", "GatherSaveData");

	Params::EndSaveDataBootMenuAPI_GatherSaveData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ScenarioType = ScenarioType;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSaveDataList != nullptr)
		*OutSaveDataList = std::move(Parms.OutSaveDataList);
}


// Function EndGame.EndSaveDataBootMenuAPI.GetLoadingSaveData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSaveDataBootMenuAPI::GetLoadingSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSaveDataBootMenuAPI", "GetLoadingSaveData");

	Params::EndSaveDataBootMenuAPI_GetLoadingSaveData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSaveDataBootMenuAPI.LoadSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndGameScenarioType                    ScenarioType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DataName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndSaveDataBootMenuAPI::LoadSaveData(class UObject* WorldContextObject, EEndGameScenarioType ScenarioType, const class FString& DataName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSaveDataBootMenuAPI", "LoadSaveData");

	Params::EndSaveDataBootMenuAPI_LoadSaveData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ScenarioType = ScenarioType;
	Parms.DataName = std::move(DataName);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSaveDataBootMenuAPI.SetLoadingSaveData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bLoading                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSaveDataBootMenuAPI::SetLoadingSaveData(bool bLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSaveDataBootMenuAPI", "SetLoadingSaveData");

	Params::EndSaveDataBootMenuAPI_SetLoadingSaveData Parms{};

	Parms.bLoading = bLoading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSceneAPI.BindActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Parent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             child                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             socket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponSlot                             Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSceneAPI::BindActor(class FName Parent, class FName child, class FName socket, EWeaponSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "BindActor");

	Params::EndSceneAPI_BindActor Parms{};

	Parms.Parent = Parent;
	Parms.child = child;
	Parms.socket = socket;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSceneAPI.CancelOverwirttenEnvironmentSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndEnvironmentSetOverritePriority      Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSceneAPI::CancelOverwirttenEnvironmentSet(EEndEnvironmentSetOverritePriority Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "CancelOverwirttenEnvironmentSet");

	Params::EndSceneAPI_CancelOverwirttenEnvironmentSet Parms{};

	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSceneAPI.CreateActorBP
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CharaSpec                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSceneAPI::CreateActorBP(class FName Name_0, class FName CharaSpec, const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "CreateActorBP");

	Params::EndSceneAPI_CreateActorBP Parms{};

	Parms.Name_0 = Name_0;
	Parms.CharaSpec = CharaSpec;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.DestroyActorBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSceneAPI::DestroyActorBP(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "DestroyActorBP");

	Params::EndSceneAPI_DestroyActorBP Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.FollowToTargetActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FollowTargetActorName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::FollowToTargetActor(class FName TargetActorName, class FName FollowTargetActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "FollowToTargetActor");

	Params::EndSceneAPI_FollowToTargetActor Parms{};

	Parms.TargetActorName = TargetActorName;
	Parms.FollowTargetActorName = FollowTargetActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavFromName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndNavModifierVolume*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndNavModifierVolume* UEndSceneAPI::GetNavFromName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavFromName");

	Params::EndSceneAPI_GetNavFromName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavFromNameAndLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEndNavModifierVolume*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEndNavModifierVolume* UEndSceneAPI::GetNavFromNameAndLevel(class FName Level, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavFromNameAndLevel");

	Params::EndSceneAPI_GetNavFromNameAndLevel Parms{};

	Parms.Level = Level;
	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndSceneAPI::GetNavLocation(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavLocation");

	Params::EndSceneAPI_GetNavLocation Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavLocationFromLevel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndSceneAPI::GetNavLocationFromLevel(class FName Level, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavLocationFromLevel");

	Params::EndSceneAPI_GetNavLocationFromLevel Parms{};

	Parms.Level = Level;
	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UEndSceneAPI::GetNavRotation(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavRotation");

	Params::EndSceneAPI_GetNavRotation Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavRotationFromLevel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UEndSceneAPI::GetNavRotationFromLevel(class FName Level, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavRotationFromLevel");

	Params::EndSceneAPI_GetNavRotationFromLevel Parms{};

	Parms.Level = Level;
	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndSceneAPI::GetNavTransform(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavTransform");

	Params::EndSceneAPI_GetNavTransform Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.GetNavTransformFromLevel
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UEndSceneAPI::GetNavTransformFromLevel(class FName Level, class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "GetNavTransformFromLevel");

	Params::EndSceneAPI_GetNavTransformFromLevel Parms{};

	Parms.Level = Level;
	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.InvalidateSimpleCameraWall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::InvalidateSimpleCameraWall(class FName TargetActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "InvalidateSimpleCameraWall");

	Params::EndSceneAPI_InvalidateSimpleCameraWall Parms{};

	Parms.TargetActorName = TargetActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.IsDrawPause
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::IsDrawPause(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "IsDrawPause");

	Params::EndSceneAPI_IsDrawPause Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.IsStableEnvironmentSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::IsStableEnvironmentSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "IsStableEnvironmentSet");

	Params::EndSceneAPI_IsStableEnvironmentSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.MoveToTargetPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             TargetActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::MoveToTargetPoint(class FName TargetActorName, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "MoveToTargetPoint");

	Params::EndSceneAPI_MoveToTargetPoint Parms{};

	Parms.TargetActorName = TargetActorName;
	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.SetOverwriteEnvinronment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             EnvironmentSetKeyName                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndEnvironmentSetOverritePriority      Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSceneAPI::SetOverwriteEnvinronment(const class FName& EnvironmentSetKeyName, EEndEnvironmentSetOverritePriority Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "SetOverwriteEnvinronment");

	Params::EndSceneAPI_SetOverwriteEnvinronment Parms{};

	Parms.EnvironmentSetKeyName = EnvironmentSetKeyName;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSceneAPI.TeleportActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LevelName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActorName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyDestRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::TeleportActor(class FName LevelName, class FName ActorName, class AActor* TargetActor, bool bApplyDestRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "TeleportActor");

	Params::EndSceneAPI_TeleportActor Parms{};

	Parms.LevelName = LevelName;
	Parms.ActorName = ActorName;
	Parms.TargetActor = TargetActor;
	Parms.bApplyDestRotation = bApplyDestRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSceneAPI.UnBindActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Parent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponSlot                             Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSceneAPI::UnBindActor(class FName Parent, EWeaponSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "UnBindActor");

	Params::EndSceneAPI_UnBindActor Parms{};

	Parms.Parent = Parent;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSceneAPI.ValidateSimpleCameraWall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetActorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSceneAPI::ValidateSimpleCameraWall(class FName TargetActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSceneAPI", "ValidateSimpleCameraWall");

	Params::EndSceneAPI_ValidateSimpleCameraWall Parms{};

	Parms.TargetActorName = TargetActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndShopMenu.OnShopChadolyCellSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndShopMenu::OnShopChadolyCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopMenu", "OnShopChadolyCellSetup");

	Params::EndShopMenu_OnShopChadolyCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndShopMenu.OnShopDefaultCellSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndShopMenu::OnShopDefaultCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopMenu", "OnShopDefaultCellSetup");

	Params::EndShopMenu_OnShopDefaultCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndShopMenu.OnShopListCellCliked
// (Final, Native, Public)

void UEndShopMenu::OnShopListCellCliked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopMenu", "OnShopListCellCliked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndShopMenu.OnShopListCellSetup
// (Final, Native, Public)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndShopMenu::OnShopListCellSetup(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndShopMenu", "OnShopListCellSetup");

	Params::EndShopMenu_OnShopListCellSetup Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStoryDetailWindow.OnQuestInfoListMeasureItem
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UEndStoryDetailWindow::OnQuestInfoListMeasureItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStoryDetailWindow", "OnQuestInfoListMeasureItem");

	Params::EndStoryDetailWindow_OnQuestInfoListMeasureItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndStoryDetailWindow.OnQuestInfoListSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStoryDetailWindow::OnQuestInfoListSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStoryDetailWindow", "OnQuestInfoListSetupItem");

	Params::EndStoryDetailWindow_OnQuestInfoListSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStoryMenu.OnLeftMenuPressedItem
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStoryMenu::OnLeftMenuPressedItem(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStoryMenu", "OnLeftMenuPressedItem");

	Params::EndStoryMenu_OnLeftMenuPressedItem Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStoryMenu.OnLeftMenuSelectedIndexChanged
// (Final, Native, Private)
// Parameters:
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStoryMenu::OnLeftMenuSelectedIndexChanged(int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStoryMenu", "OnLeftMenuSelectedIndexChanged");

	Params::EndStoryMenu_OnLeftMenuSelectedIndexChanged Parms{};

	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStoryMenu.OnLeftMenuSetupItem
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStoryMenu::OnLeftMenuSetupItem(class UWidget* ItemWidget, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStoryMenu", "OnLeftMenuSetupItem");

	Params::EndStoryMenu_OnLeftMenuSetupItem Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemIndex = ItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.RefreshItems
// (Final, Native, Public, BlueprintCallable)

void UEndStringScrollBox::RefreshItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "RefreshItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.ScrollToEnd
// (Final, Native, Public, BlueprintCallable)

void UEndStringScrollBox::ScrollToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "ScrollToEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.ScrollToStart
// (Final, Native, Public, BlueprintCallable)

void UEndStringScrollBox::ScrollToStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "ScrollToStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetColorAndOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (Parm, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetColorAndOpacity");

	Params::EndStringScrollBox_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetCullingBoundsExtension
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InCullingBoundsExtension                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetCullingBoundsExtension(const struct FMargin& InCullingBoundsExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetCullingBoundsExtension");

	Params::EndStringScrollBox_SetCullingBoundsExtension Parms{};

	Parms.InCullingBoundsExtension = std::move(InCullingBoundsExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetDesiredCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDesiredCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetDesiredCount(int32 InDesiredCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetDesiredCount");

	Params::EndStringScrollBox_SetDesiredCount Parms{};

	Parms.InDesiredCount = InDesiredCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetFont
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEndFont*                         InFont                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetFont(class UEndFont* InFont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetFont");

	Params::EndStringScrollBox_SetFont Parms{};

	Parms.InFont = InFont;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInOutline                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetOutline(bool bInOutline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetOutline");

	Params::EndStringScrollBox_SetOutline Parms{};

	Parms.bInOutline = bInOutline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetOutlineColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InOutlineColorAndOpacity                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetOutlineColorAndOpacity(const struct FLinearColor& InOutlineColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetOutlineColorAndOpacity");

	Params::EndStringScrollBox_SetOutlineColorAndOpacity Parms{};

	Parms.InOutlineColorAndOpacity = std::move(InOutlineColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetPadding");

	Params::EndStringScrollBox_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetScrollBarPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndMenuScrollBarPosition               InScrollBarPosition                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetScrollBarPosition(EEndMenuScrollBarPosition InScrollBarPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetScrollBarPosition");

	Params::EndStringScrollBox_SetScrollBarPosition Parms{};

	Parms.InScrollBarPosition = InScrollBarPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetScrollOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewScrollOffset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetScrollOffset(float NewScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetScrollOffset");

	Params::EndStringScrollBox_SetScrollOffset Parms{};

	Parms.NewScrollOffset = NewScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetShadowColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InShadowColorAndOpacity                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetShadowColorAndOpacity");

	Params::EndStringScrollBox_SetShadowColorAndOpacity Parms{};

	Parms.InShadowColorAndOpacity = std::move(InShadowColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetShadowOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InShadowOffset                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetShadowOffset(const struct FVector2D& InShadowOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetShadowOffset");

	Params::EndStringScrollBox_SetShadowOffset Parms{};

	Parms.InShadowOffset = std::move(InShadowOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetText(const class FString& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetText");

	Params::EndStringScrollBox_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.SetWrapTextAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWrapTextAt                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndStringScrollBox::SetWrapTextAt(float InWrapTextAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "SetWrapTextAt");

	Params::EndStringScrollBox_SetWrapTextAt Parms{};

	Parms.InWrapTextAt = InWrapTextAt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndStringScrollBox.GetLineCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndStringScrollBox::GetLineCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "GetLineCount");

	Params::EndStringScrollBox_GetLineCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndStringScrollBox.GetMaxScrollOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InScrollHeight                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndStringScrollBox::GetMaxScrollOffset(float InScrollHeight) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "GetMaxScrollOffset");

	Params::EndStringScrollBox_GetMaxScrollOffset Parms{};

	Parms.InScrollHeight = InScrollHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndStringScrollBox.GetScrollBarVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UEndStringScrollBox::GetScrollBarVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "GetScrollBarVisibility");

	Params::EndStringScrollBox_GetScrollBarVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndStringScrollBox.GetScrollOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndStringScrollBox::GetScrollOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "GetScrollOffset");

	Params::EndStringScrollBox_GetScrollOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndStringScrollBox.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndStringScrollBox::GetText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndStringScrollBox", "GetText");

	Params::EndStringScrollBox_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSwitchableSkeletalMeshComponent.SetSkeletalMeshByIndex
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReinitPose                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSwitchableSkeletalMeshComponent::SetSkeletalMeshByIndex(int32 Index_0, bool bReinitPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSwitchableSkeletalMeshComponent", "SetSkeletalMeshByIndex");

	Params::EndSwitchableSkeletalMeshComponent_SetSkeletalMeshByIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.bReinitPose = bReinitPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSwitchableSkeletalMeshComponent.SetSkeletalMeshByLabel
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Label                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReinitPose                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSwitchableSkeletalMeshComponent::SetSkeletalMeshByLabel(class FName Label, bool bReinitPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndSwitchableSkeletalMeshComponent", "SetSkeletalMeshByLabel");

	Params::EndSwitchableSkeletalMeshComponent_SetSkeletalMeshByLabel Parms{};

	Parms.Label = Label;
	Parms.bReinitPose = bReinitPose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.CheckAppContents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   taskid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndSystemAPI::CheckAppContents(const class UObject* WorldContextObject, int32 taskid, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "CheckAppContents");

	Params::EndSystemAPI_CheckAppContents Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.taskid = taskid;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.ClearReservedPVPreviewName
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::ClearReservedPVPreviewName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "ClearReservedPVPreviewName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.ForceGarbageCollection
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::ForceGarbageCollection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "ForceGarbageCollection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.GetActiveLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetActiveLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetActiveLocation");

	Params::EndSystemAPI_GetActiveLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetAddedAppContents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UEndSystemAPI::GetAddedAppContents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetAddedAppContents");

	Params::EndSystemAPI_GetAddedAppContents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetBuildRevisionString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetBuildRevisionString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetBuildRevisionString");

	Params::EndSystemAPI_GetBuildRevisionString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetBuildTimeString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetBuildTimeString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetBuildTimeString");

	Params::EndSystemAPI_GetBuildTimeString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetCommandLineOptionValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetCommandLineOptionValue(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetCommandLineOptionValue");

	Params::EndSystemAPI_GetCommandLineOptionValue Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetDebugPVPreviewNameList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndSystemAPI::GetDebugPVPreviewNameList(class FName Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetDebugPVPreviewNameList");

	Params::EndSystemAPI_GetDebugPVPreviewNameList Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetDebugSaveDataNameList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndSystemAPI::GetDebugSaveDataNameList(class FName Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetDebugSaveDataNameList");

	Params::EndSystemAPI_GetDebugSaveDataNameList Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetFacialMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndSystemAPI::GetFacialMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetFacialMode");

	Params::EndSystemAPI_GetFacialMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetFontMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndSystemAPI::GetFontMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetFontMode");

	Params::EndSystemAPI_GetFontMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetInputAnalogKeyValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndSystemAPI::GetInputAnalogKeyValue(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetInputAnalogKeyValue");

	Params::EndSystemAPI_GetInputAnalogKeyValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetLanguageMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndSystemAPI::GetLanguageMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetLanguageMode");

	Params::EndSystemAPI_GetLanguageMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetLoadedLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetLoadedLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetLoadedLocation");

	Params::EndSystemAPI_GetLoadedLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetLocationIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Location                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSystemAPI::GetLocationIndex(const class FString& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetLocationIndex");

	Params::EndSystemAPI_GetLocationIndex Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetLocationString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetLocationString(int32 Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetLocationString");

	Params::EndSystemAPI_GetLocationString Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetOriginalLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetOriginalLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetOriginalLocation");

	Params::EndSystemAPI_GetOriginalLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetPrevActiveLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndSystemAPI::GetPrevActiveLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetPrevActiveLocation");

	Params::EndSystemAPI_GetPrevActiveLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetReservedPVPreviewName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndSystemAPI::GetReservedPVPreviewName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetReservedPVPreviewName");

	Params::EndSystemAPI_GetReservedPVPreviewName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetSaveLocationIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Location                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSystemAPI::GetSaveLocationIndex(const class FString& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetSaveLocationIndex");

	Params::EndSystemAPI_GetSaveLocationIndex Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetSaveLocationIndexFromCurrentLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   LocationID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSystemAPI::GetSaveLocationIndexFromCurrentLocation(int32 LocationID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetSaveLocationIndexFromCurrentLocation");

	Params::EndSystemAPI_GetSaveLocationIndexFromCurrentLocation Parms{};

	Parms.LocationID = LocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetTaskIdBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Comment                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSystemAPI::GetTaskIdBP(const class FString& Comment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetTaskIdBP");

	Params::EndSystemAPI_GetTaskIdBP Parms{};

	Parms.Comment = std::move(Comment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.GetVoiceMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndSystemAPI::GetVoiceMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "GetVoiceMode");

	Params::EndSystemAPI_GetVoiceMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.InitActivateLocationFromSaveData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::InitActivateLocationFromSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "InitActivateLocationFromSaveData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.InitAppContents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndSystemAPI::InitAppContents(const class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "InitAppContents");

	Params::EndSystemAPI_InitAppContents Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.IsAppContentsAdded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsAppContentsAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsAppContentsAdded");

	Params::EndSystemAPI_IsAppContentsAdded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsAppContentsChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsAppContentsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsAppContentsChanged");

	Params::EndSystemAPI_IsAppContentsChanged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsEndGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsEndGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsEndGameMode");

	Params::EndSystemAPI_IsEndGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsExistTaskIdBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   taskid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsExistTaskIdBP(int32 taskid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsExistTaskIdBP");

	Params::EndSystemAPI_IsExistTaskIdBP Parms{};

	Parms.taskid = taskid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsGameStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameStatus                             Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsGameStatus(EGameStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsGameStatus");

	Params::EndSystemAPI_IsGameStatus Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsInputKeyDown
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsInputKeyDown(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsInputKeyDown");

	Params::EndSystemAPI_IsInputKeyDown Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsInputKeyPressed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsInputKeyPressed(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsInputKeyPressed");

	Params::EndSystemAPI_IsInputKeyPressed Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsInputKeyReleased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsInputKeyReleased(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsInputKeyReleased");

	Params::EndSystemAPI_IsInputKeyReleased Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsInputKeyRepeat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsInputKeyRepeat(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsInputKeyRepeat");

	Params::EndSystemAPI_IsInputKeyRepeat Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.IsMaster
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::IsMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "IsMaster");

	Params::EndSystemAPI_IsMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.LoadLevelSpecBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndLoadLevelPriority                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSystemAPI::LoadLevelSpecBP(EEndLoadLevelPriority Priority, class FName SpecName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "LoadLevelSpecBP");

	Params::EndSystemAPI_LoadLevelSpecBP Parms{};

	Parms.Priority = Priority;
	Parms.SpecName = SpecName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.ReleaseTaskIdBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   taskid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::ReleaseTaskIdBP(int32 taskid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "ReleaseTaskIdBP");

	Params::EndSystemAPI_ReleaseTaskIdBP Parms{};

	Parms.taskid = taskid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.ReloadPVPreviewData
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::ReloadPVPreviewData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "ReloadPVPreviewData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.RequestActiveLocation
// (Final, Native, Static, Public)
// Parameters:
// class FString                           TargetLocation                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::RequestActiveLocation(const class FString& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "RequestActiveLocation");

	Params::EndSystemAPI_RequestActiveLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SetActiveLocation
// (Final, Native, Static, Public)
// Parameters:
// class FString                           TargetLocation                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::SetActiveLocation(const class FString& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetActiveLocation");

	Params::EndSystemAPI_SetActiveLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SetGameStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameStatus                             Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Set                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::SetGameStatus(EGameStatus Status, bool Set)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetGameStatus");

	Params::EndSystemAPI_SetGameStatus Parms{};

	Parms.Status = Status;
	Parms.Set = Set;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SetLoadedLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Location                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::SetLoadedLocation(const class FString& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetLoadedLocation");

	Params::EndSystemAPI_SetLoadedLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SetReservedPVPreviewName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::SetReservedPVPreviewName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetReservedPVPreviewName");

	Params::EndSystemAPI_SetReservedPVPreviewName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SetUpDebugPVPreviewFromName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndSystemAPI::SetUpDebugPVPreviewFromName(class FName Level, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetUpDebugPVPreviewFromName");

	Params::EndSystemAPI_SetUpDebugPVPreviewFromName Parms{};

	Parms.Level = Level;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.SetUpDebugResidentSaveDataFromName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::SetUpDebugResidentSaveDataFromName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetUpDebugResidentSaveDataFromName");

	Params::EndSystemAPI_SetUpDebugResidentSaveDataFromName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SetUpDebugSaveDataFromName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isSetupResident                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::SetUpDebugSaveDataFromName(class FName Level, const class FString& Name_0, bool isSetupResident)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SetUpDebugSaveDataFromName");

	Params::EndSystemAPI_SetUpDebugSaveDataFromName Parms{};

	Parms.Level = Level;
	Parms.Name_0 = std::move(Name_0);
	Parms.isSetupResident = isSetupResident;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.StableCallBoot
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::StableCallBoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "StableCallBoot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SwitchActiveLocation
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::SwitchActiveLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SwitchActiveLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.SwitchTruthLocation
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::SwitchTruthLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "SwitchTruthLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.UnLoadLevelSpecBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndLoadLevelPriority                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpecName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndSystemAPI::UnLoadLevelSpecBP(EEndLoadLevelPriority Priority, class FName SpecName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "UnLoadLevelSpecBP");

	Params::EndSystemAPI_UnLoadLevelSpecBP Parms{};

	Parms.Priority = Priority;
	Parms.SpecName = SpecName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndSystemAPI.UpdateAppContentsStatus
// (Final, Native, Static, Public, BlueprintCallable)

void UEndSystemAPI::UpdateAppContentsStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "UpdateAppContentsStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.UpdateTrophy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             trophyId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndSystemAPI::UpdateTrophy(class FName trophyId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "UpdateTrophy");

	Params::EndSystemAPI_UpdateTrophy Parms{};

	Parms.trophyId = trophyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndSystemAPI.WaitTaskId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   taskid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndSystemAPI::WaitTaskId(const class UObject* WorldContextObject, int32 taskid, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndSystemAPI", "WaitTaskId");

	Params::EndSystemAPI_WaitTaskId Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.taskid = taskid;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTalkAPI.DisableBattleTalkEventBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TriggerBoxName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTalkAPI::DisableBattleTalkEventBox(class FName TriggerBoxName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndTalkAPI", "DisableBattleTalkEventBox");

	Params::EndTalkAPI_DisableBattleTalkEventBox Parms{};

	Parms.TriggerBoxName = TriggerBoxName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTalkAPI.EnableBattleTalkEventBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TriggerBoxName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTalkAPI::EnableBattleTalkEventBox(class FName TriggerBoxName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndTalkAPI", "EnableBattleTalkEventBox");

	Params::EndTalkAPI_EnableBattleTalkEventBox Parms{};

	Parms.TriggerBoxName = TriggerBoxName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTalkAPI.PlayBattleTalkStateByBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TalkStateId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForced                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableToStable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTalkAPI::PlayBattleTalkStateByBP(class FName TalkStateId, bool bForced, bool bEnableToStable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndTalkAPI", "PlayBattleTalkStateByBP");

	Params::EndTalkAPI_PlayBattleTalkStateByBP Parms{};

	Parms.TalkStateId = TalkStateId;
	Parms.bForced = bForced;
	Parms.bEnableToStable = bEnableToStable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTalkAPI.SendBattleTalkPlayTriggerByBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             TalkPlayTriggerId                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringArgument00                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringArgument01                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringArgument02                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTalkAPI::SendBattleTalkPlayTriggerByBP(const class FName TalkPlayTriggerId, const class FString& StringArgument00, const class FString& StringArgument01, const class FString& StringArgument02)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndTalkAPI", "SendBattleTalkPlayTriggerByBP");

	Params::EndTalkAPI_SendBattleTalkPlayTriggerByBP Parms{};

	Parms.TalkPlayTriggerId = TalkPlayTriggerId;
	Parms.StringArgument00 = std::move(StringArgument00);
	Parms.StringArgument01 = std::move(StringArgument01);
	Parms.StringArgument02 = std::move(StringArgument02);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetAllowMacro
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAllowMacro                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetAllowMacro(bool bInAllowMacro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetAllowMacro");

	Params::EndTextBlock_SetAllowMacro Parms{};

	Parms.bInAllowMacro = bInAllowMacro;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetAutoShrinkText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAutoShrinkText                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetAutoShrinkText(bool bInAutoShrinkText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetAutoShrinkText");

	Params::EndTextBlock_SetAutoShrinkText Parms{};

	Parms.bInAutoShrinkText = bInAutoShrinkText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetAutoUpdateButtons
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAutoUpdateButtons                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetAutoUpdateButtons(bool bInAutoUpdateButtons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetAutoUpdateButtons");

	Params::EndTextBlock_SetAutoUpdateButtons Parms{};

	Parms.bInAutoUpdateButtons = bInAutoUpdateButtons;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetAutoWrapText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAutoWrapText                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetAutoWrapText(bool bInAutoWrapText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetAutoWrapText");

	Params::EndTextBlock_SetAutoWrapText Parms{};

	Parms.bInAutoWrapText = bInAutoWrapText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetBlendMode");

	Params::EndTextBlock_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetBottomColorAndOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (Parm, NativeAccessSpecifierPublic)

void UEndTextBlock::SetBottomColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetBottomColorAndOpacity");

	Params::EndTextBlock_SetBottomColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetBottomOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetBottomOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetBottomOpacity");

	Params::EndTextBlock_SetBottomOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetColorAndOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (Parm, NativeAccessSpecifierPublic)

void UEndTextBlock::SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetColorAndOpacity");

	Params::EndTextBlock_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetColoredButtons
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInColoredButtons                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetColoredButtons(bool bInColoredButtons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetColoredButtons");

	Params::EndTextBlock_SetColoredButtons Parms{};

	Parms.bInColoredButtons = bInColoredButtons;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetFont
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEndFont*                         InFont                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetFont(class UEndFont* InFont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetFont");

	Params::EndTextBlock_SetFont Parms{};

	Parms.InFont = InFont;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetJustification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETextJustify                            InJustification                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetJustification(ETextJustify InJustification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetJustification");

	Params::EndTextBlock_SetJustification Parms{};

	Parms.InJustification = InJustification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetLeftAlignedCenter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInLeftAlignedCenter                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetLeftAlignedCenter(bool bInLeftAlignedCenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetLeftAlignedCenter");

	Params::EndTextBlock_SetLeftAlignedCenter Parms{};

	Parms.bInLeftAlignedCenter = bInLeftAlignedCenter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetMinDesiredWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMinDesiredWidth                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetMinDesiredWidth(float InMinDesiredWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetMinDesiredWidth");

	Params::EndTextBlock_SetMinDesiredWidth Parms{};

	Parms.InMinDesiredWidth = InMinDesiredWidth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetOpacity");

	Params::EndTextBlock_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInOutline                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetOutline(bool bInOutline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetOutline");

	Params::EndTextBlock_SetOutline Parms{};

	Parms.bInOutline = bInOutline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetOutlineColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InOutlineColorAndOpacity                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetOutlineColorAndOpacity(const struct FLinearColor& InOutlineColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetOutlineColorAndOpacity");

	Params::EndTextBlock_SetOutlineColorAndOpacity Parms{};

	Parms.InOutlineColorAndOpacity = std::move(InOutlineColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetShadowColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InShadowColorAndOpacity                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetShadowColorAndOpacity");

	Params::EndTextBlock_SetShadowColorAndOpacity Parms{};

	Parms.InShadowColorAndOpacity = std::move(InShadowColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetShadowOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InShadowOffset                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetShadowOffset(const struct FVector2D& InShadowOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetShadowOffset");

	Params::EndTextBlock_SetShadowOffset Parms{};

	Parms.InShadowOffset = std::move(InShadowOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetText(const class FString& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetText");

	Params::EndTextBlock_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.SetWrapTextAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWrapTextAt                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTextBlock::SetWrapTextAt(float InWrapTextAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "SetWrapTextAt");

	Params::EndTextBlock_SetWrapTextAt Parms{};

	Parms.InWrapTextAt = InWrapTextAt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTextBlock.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndTextBlock::GetText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTextBlock", "GetText");

	Params::EndTextBlock_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndTiledImage.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UEndTiledImage::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "GetDynamicMaterial");

	Params::EndTiledImage_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndTiledImage.SetBlendMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBlendMode                              InBlendMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetBlendMode(EBlendMode InBlendMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetBlendMode");

	Params::EndTiledImage_SetBlendMode Parms{};

	Parms.InBlendMode = InBlendMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEndTiledImage::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetBrush");

	Params::EndTiledImage_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetBrushFromAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USlateBrushAsset*                 Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetBrushFromAsset(class USlateBrushAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetBrushFromAsset");

	Params::EndTiledImage_SetBrushFromAsset Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetBrushFromMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetBrushFromMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetBrushFromMaterial");

	Params::EndTiledImage_SetBrushFromMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetBrushFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetBrushFromTexture");

	Params::EndTiledImage_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetBrushFromTextureDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetBrushFromTextureDynamic");

	Params::EndTiledImage_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetColorAndOpacity");

	Params::EndTiledImage_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTiledImage.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndTiledImage::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTiledImage", "SetOpacity");

	Params::EndTiledImage_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTitleMenu.OnPressedAnyButton
// (Final, Native, Private, BlueprintCallable)

void UEndTitleMenu::OnPressedAnyButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTitleMenu", "OnPressedAnyButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndTitleMenu.OnStartMenuEnd
// (Final, Native, Private, BlueprintCallable)

void UEndTitleMenu::OnStartMenuEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndTitleMenu", "OnStartMenuEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.RefreshItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::RefreshItem(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "RefreshItem");

	Params::EndVirtualScrollBox_RefreshItem Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.RefreshItems
// (Final, Native, Public, BlueprintCallable)

void UEndVirtualScrollBox::RefreshItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "RefreshItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.ScrollToEnd
// (Final, Native, Public, BlueprintCallable)

void UEndVirtualScrollBox::ScrollToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "ScrollToEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.ScrollToStart
// (Final, Native, Public, BlueprintCallable)

void UEndVirtualScrollBox::ScrollToStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "ScrollToStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.ScrollWidgetIntoView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          WidgetToFind                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AnimateScroll                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::ScrollWidgetIntoView(class UWidget* WidgetToFind, bool AnimateScroll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "ScrollWidgetIntoView");

	Params::EndVirtualScrollBox_ScrollWidgetIntoView Parms{};

	Parms.WidgetToFind = WidgetToFind;
	Parms.AnimateScroll = AnimateScroll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetCullingBoundsExtension
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InCullingBoundsExtension                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetCullingBoundsExtension(const struct FMargin& InCullingBoundsExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetCullingBoundsExtension");

	Params::EndVirtualScrollBox_SetCullingBoundsExtension Parms{};

	Parms.InCullingBoundsExtension = std::move(InCullingBoundsExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetCursorBoundsExtension
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InCursorBoundsExtension                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetCursorBoundsExtension(const struct FMargin& InCursorBoundsExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetCursorBoundsExtension");

	Params::EndVirtualScrollBox_SetCursorBoundsExtension Parms{};

	Parms.InCursorBoundsExtension = std::move(InCursorBoundsExtension);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetDesiredCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDesiredCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetDesiredCount(int32 InDesiredCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetDesiredCount");

	Params::EndVirtualScrollBox_SetDesiredCount Parms{};

	Parms.InDesiredCount = InDesiredCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetHasVariableSizeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVariableSizeItem                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetHasVariableSizeItem(bool bInVariableSizeItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetHasVariableSizeItem");

	Params::EndVirtualScrollBox_SetHasVariableSizeItem Parms{};

	Parms.bInVariableSizeItem = bInVariableSizeItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetItemCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InItemCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetItemCount(int32 InItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetItemCount");

	Params::EndVirtualScrollBox_SetItemCount Parms{};

	Parms.InItemCount = InItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetPadding");

	Params::EndVirtualScrollBox_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetScrollBarPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndMenuScrollBarPosition               InScrollBarPosition                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetScrollBarPosition(EEndMenuScrollBarPosition InScrollBarPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetScrollBarPosition");

	Params::EndVirtualScrollBox_SetScrollBarPosition Parms{};

	Parms.InScrollBarPosition = InScrollBarPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetScrollOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewScrollOffset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetScrollOffset(float NewScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetScrollOffset");

	Params::EndVirtualScrollBox_SetScrollOffset Parms{};

	Parms.NewScrollOffset = NewScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAnimateScroll                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForceCallback                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InRootWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetSelectedIndex(int32 UserIndex, int32 SlotIndex, bool InAnimateScroll, bool ForceCallback, class UWidget* InRootWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetSelectedIndex");

	Params::EndVirtualScrollBox_SetSelectedIndex Parms{};

	Parms.UserIndex = UserIndex;
	Parms.SlotIndex = SlotIndex;
	Parms.InAnimateScroll = InAnimateScroll;
	Parms.ForceCallback = ForceCallback;
	Parms.InRootWidget = InRootWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetSelectedIndexWithCause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFocusCause                             FocusCause                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InAnimateScroll                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ForceCallback                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InRootWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetSelectedIndexWithCause(int32 UserIndex, int32 SlotIndex, EFocusCause FocusCause, bool InAnimateScroll, bool ForceCallback, class UWidget* InRootWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetSelectedIndexWithCause");

	Params::EndVirtualScrollBox_SetSelectedIndexWithCause Parms{};

	Parms.UserIndex = UserIndex;
	Parms.SlotIndex = SlotIndex;
	Parms.FocusCause = FocusCause;
	Parms.InAnimateScroll = InAnimateScroll;
	Parms.ForceCallback = ForceCallback;
	Parms.InRootWidget = InRootWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetSupportsKeyDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSupportsKeyDown                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetSupportsKeyDown(bool bInSupportsKeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetSupportsKeyDown");

	Params::EndVirtualScrollBox_SetSupportsKeyDown Parms{};

	Parms.bInSupportsKeyDown = bInSupportsKeyDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.SetSupportsPageScroll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSupportsPageScroll                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndVirtualScrollBox::SetSupportsPageScroll(bool bInSupportsPageScroll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "SetSupportsPageScroll");

	Params::EndVirtualScrollBox_SetSupportsPageScroll Parms{};

	Parms.bInSupportsPageScroll = bInSupportsPageScroll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndGame.EndVirtualScrollBox.GetChildAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UEndVirtualScrollBox::GetChildAt(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "GetChildAt");

	Params::EndVirtualScrollBox_GetChildAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndVirtualScrollBox.GetCursorWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UEndVirtualScrollBox::GetCursorWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "GetCursorWidget");

	Params::EndVirtualScrollBox_GetCursorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndVirtualScrollBox.GetMaxScrollOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndVirtualScrollBox::GetMaxScrollOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "GetMaxScrollOffset");

	Params::EndVirtualScrollBox_GetMaxScrollOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndVirtualScrollBox.GetScrollBarVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UEndVirtualScrollBox::GetScrollBarVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "GetScrollBarVisibility");

	Params::EndVirtualScrollBox_GetScrollBarVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndVirtualScrollBox.GetScrollOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndVirtualScrollBox::GetScrollOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "GetScrollOffset");

	Params::EndVirtualScrollBox_GetScrollOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndGame.EndVirtualScrollBox.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   UserIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndVirtualScrollBox::GetSelectedIndex(int32 UserIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndVirtualScrollBox", "GetSelectedIndex");

	Params::EndVirtualScrollBox_GetSelectedIndex Parms{};

	Parms.UserIndex = UserIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

