#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CondorFort_Enemy_Hp

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CondorFort_Enemy_Hp.CondorFort_Enemy_Hp_C
// 0x0090 (0x03F0 - 0x0360)
class UCondorFort_Enemy_Hp_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Normal;                                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Resist;                                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Weak;                                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayerColor;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       EnemyColor;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndGauge*                              Gauge_HP_Boss;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndGauge*                              Gauge_HP_New;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Arrow;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              icon_Arrow_Blue;                                   // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Fort;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Advantage;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HPGauge_Fort_Enemy;                            // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HPGauge_Fort_Player;                           // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HPGauge_Unit_Enemy;                            // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HPGauge_Unit_Player;                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HPGaugeCover;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Ripples;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCondorFort_RoleIconSet_C*              RoleIcon;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CondorFort_Enemy_Hp_C">();
	}
	static class UCondorFort_Enemy_Hp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCondorFort_Enemy_Hp_C>();
	}
};
static_assert(alignof(UCondorFort_Enemy_Hp_C) == 0x000008, "Wrong alignment on UCondorFort_Enemy_Hp_C");
static_assert(sizeof(UCondorFort_Enemy_Hp_C) == 0x0003F0, "Wrong size on UCondorFort_Enemy_Hp_C");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Normal) == 0x000360, "Member 'UCondorFort_Enemy_Hp_C::Normal' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Resist) == 0x000368, "Member 'UCondorFort_Enemy_Hp_C::Resist' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Weak) == 0x000370, "Member 'UCondorFort_Enemy_Hp_C::Weak' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, PlayerColor) == 0x000378, "Member 'UCondorFort_Enemy_Hp_C::PlayerColor' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, EnemyColor) == 0x000380, "Member 'UCondorFort_Enemy_Hp_C::EnemyColor' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Gauge_HP_Boss) == 0x000388, "Member 'UCondorFort_Enemy_Hp_C::Gauge_HP_Boss' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Gauge_HP_New) == 0x000390, "Member 'UCondorFort_Enemy_Hp_C::Gauge_HP_New' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Icon_Arrow) == 0x000398, "Member 'UCondorFort_Enemy_Hp_C::Icon_Arrow' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, icon_Arrow_Blue) == 0x0003A0, "Member 'UCondorFort_Enemy_Hp_C::icon_Arrow_Blue' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Icon_Fort) == 0x0003A8, "Member 'UCondorFort_Enemy_Hp_C::Icon_Fort' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_Advantage) == 0x0003B0, "Member 'UCondorFort_Enemy_Hp_C::Img_Advantage' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_HPGauge_Fort_Enemy) == 0x0003B8, "Member 'UCondorFort_Enemy_Hp_C::Img_HPGauge_Fort_Enemy' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_HPGauge_Fort_Player) == 0x0003C0, "Member 'UCondorFort_Enemy_Hp_C::Img_HPGauge_Fort_Player' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_HPGauge_Unit_Enemy) == 0x0003C8, "Member 'UCondorFort_Enemy_Hp_C::Img_HPGauge_Unit_Enemy' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_HPGauge_Unit_Player) == 0x0003D0, "Member 'UCondorFort_Enemy_Hp_C::Img_HPGauge_Unit_Player' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_HPGaugeCover) == 0x0003D8, "Member 'UCondorFort_Enemy_Hp_C::Img_HPGaugeCover' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, Img_Ripples) == 0x0003E0, "Member 'UCondorFort_Enemy_Hp_C::Img_Ripples' has a wrong offset!");
static_assert(offsetof(UCondorFort_Enemy_Hp_C, RoleIcon) == 0x0003E8, "Member 'UCondorFort_Enemy_Hp_C::RoleIcon' has a wrong offset!");

}

