#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EB0016_10_Helicopter_Missile_AI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass EB0016_10_Helicopter_Missile_AI.EB0016_10_Helicopter_Missile_AI_C
// 0x0070 (0x22F8 - 0x2288)
class AEB0016_10_Helicopter_Missile_AI_C final : public AEndBattleAIController
{
public:
	uint8                                         Pad_2288[0x8];                                     // 0x2288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2290(0x0008)(Transient, DuplicateTransient)
	class UEndAITimerComponent*                   Interval_Attack;                                   // 0x2298(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEndAITimerComponent*                   Interval_HeightChange;                             // 0x22A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEndAITimerComponent*                   Interval_PositionUpdate;                           // 0x22A8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FEndBattleHelicopterSpec               Heli_Move;                                         // 0x22B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FName                                   DarkNation_RaceName;                               // 0x22D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Rufus_RaceName;                                    // 0x22E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Heli_GoalNavName;                                  // 0x22E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Heli_Waited;                                       // 0x22F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_EB0016_10_Helicopter_Missile_AI(int32 EntryPoint);
	void OnMetaMessage(const class FString& InMessage);
	void OnEntryBattleScene();
	void OnUpdate(EEndAiBattleRole InRole, int32 InStep, float DeltaTime);
	void OnFirstUpdate(EEndAiBattleRole InRole, int32 InStep);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EB0016_10_Helicopter_Missile_AI_C">();
	}
	static class AEB0016_10_Helicopter_Missile_AI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEB0016_10_Helicopter_Missile_AI_C>();
	}
};
static_assert(alignof(AEB0016_10_Helicopter_Missile_AI_C) == 0x000008, "Wrong alignment on AEB0016_10_Helicopter_Missile_AI_C");
static_assert(sizeof(AEB0016_10_Helicopter_Missile_AI_C) == 0x0022F8, "Wrong size on AEB0016_10_Helicopter_Missile_AI_C");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, UberGraphFrame) == 0x002290, "Member 'AEB0016_10_Helicopter_Missile_AI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Interval_Attack) == 0x002298, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Interval_Attack' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Interval_HeightChange) == 0x0022A0, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Interval_HeightChange' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Interval_PositionUpdate) == 0x0022A8, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Interval_PositionUpdate' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Heli_Move) == 0x0022B0, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Heli_Move' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, DarkNation_RaceName) == 0x0022D8, "Member 'AEB0016_10_Helicopter_Missile_AI_C::DarkNation_RaceName' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Rufus_RaceName) == 0x0022E0, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Rufus_RaceName' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Heli_GoalNavName) == 0x0022E8, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Heli_GoalNavName' has a wrong offset!");
static_assert(offsetof(AEB0016_10_Helicopter_Missile_AI_C, Heli_Waited) == 0x0022F0, "Member 'AEB0016_10_Helicopter_Missile_AI_C::Heli_Waited' has a wrong offset!");

}

