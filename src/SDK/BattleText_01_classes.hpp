#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleText_01

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleText_01.BattleText_01_C
// 0x0078 (0x0778 - 0x0700)
class UBattleText_01_C final : public UEndPopupMessage
{
public:
	class UWidgetAnimation*                       Learning_In;                                       // 0x0700(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Materia_In;                                        // 0x0708(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Weapon_In;                                         // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0718(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_BattleText_01;                                 // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Base;                                          // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Learning;                               // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Level;                                  // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Materia;                                // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Effect_Particle;                               // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Weapon;                                 // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBorder*                             Nut_Txt;                                           // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_LevelUp;                                       // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleText_01_C">();
	}
	static class UBattleText_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleText_01_C>();
	}
};
static_assert(alignof(UBattleText_01_C) == 0x000008, "Wrong alignment on UBattleText_01_C");
static_assert(sizeof(UBattleText_01_C) == 0x000778, "Wrong size on UBattleText_01_C");
static_assert(offsetof(UBattleText_01_C, Learning_In) == 0x000700, "Member 'UBattleText_01_C::Learning_In' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Materia_In) == 0x000708, "Member 'UBattleText_01_C::Materia_In' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Weapon_In) == 0x000710, "Member 'UBattleText_01_C::Weapon_In' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, In) == 0x000718, "Member 'UBattleText_01_C::In' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, All_BattleText_01) == 0x000720, "Member 'UBattleText_01_C::All_BattleText_01' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Base) == 0x000728, "Member 'UBattleText_01_C::Img_Base' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_00) == 0x000730, "Member 'UBattleText_01_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_01) == 0x000738, "Member 'UBattleText_01_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_Learning) == 0x000740, "Member 'UBattleText_01_C::Img_Effect_Learning' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_Level) == 0x000748, "Member 'UBattleText_01_C::Img_Effect_Level' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_Materia) == 0x000750, "Member 'UBattleText_01_C::Img_Effect_Materia' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_Particle) == 0x000758, "Member 'UBattleText_01_C::Img_Effect_Particle' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Img_Effect_Weapon) == 0x000760, "Member 'UBattleText_01_C::Img_Effect_Weapon' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Nut_Txt) == 0x000768, "Member 'UBattleText_01_C::Nut_Txt' has a wrong offset!");
static_assert(offsetof(UBattleText_01_C, Txt_LevelUp) == 0x000770, "Member 'UBattleText_01_C::Txt_LevelUp' has a wrong offset!");

}

