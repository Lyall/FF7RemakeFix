#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SystemFunctionLibrary

#include "Basic.hpp"

#include "SystemFunctionLibrary_classes.hpp"
#include "SystemFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function SystemFunctionLibrary.SystemFunctionLibrary_C.GetDebugMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugMode                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USystemFunctionLibrary_C::GetDebugMode(class UObject* __WorldContext, bool* DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "GetDebugMode");

	Params::SystemFunctionLibrary_C_GetDebugMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DebugMode != nullptr)
		*DebugMode = Parms.DebugMode;
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.SetActiveLocation
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LocationName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             OverRideEnvName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::SetActiveLocation(const class FString& LocationName, class FName OverRideEnvName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "SetActiveLocation");

	Params::SystemFunctionLibrary_C_SetActiveLocation Parms{};

	Parms.LocationName = std::move(LocationName);
	Parms.OverRideEnvName = OverRideEnvName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.GetActiveLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ActiveLocation                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::GetActiveLocation(class UObject* __WorldContext, class FString* ActiveLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "GetActiveLocation");

	Params::SystemFunctionLibrary_C_GetActiveLocation Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ActiveLocation != nullptr)
		*ActiveLocation = std::move(Parms.ActiveLocation);
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.SetGameMode
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMode                               LocationName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::SetGameMode(EGameMode LocationName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "SetGameMode");

	Params::SystemFunctionLibrary_C_SetGameMode Parms{};

	Parms.LocationName = LocationName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.GetGameMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGameMode                               GameMode                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::GetGameMode(class UObject* __WorldContext, EGameMode* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "GetGameMode");

	Params::SystemFunctionLibrary_C_GetGameMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GameMode != nullptr)
		*GameMode = Parms.GameMode;
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.SetGameStatus
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameStatus                             Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Set                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::SetGameStatus(EGameStatus Status, bool Set, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "SetGameStatus");

	Params::SystemFunctionLibrary_C_SetGameStatus Parms{};

	Parms.Status = Status;
	Parms.Set = Set;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.IsGameStatus
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameStatus                             Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USystemFunctionLibrary_C::IsGameStatus(EGameStatus Status, class UObject* __WorldContext, bool* Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "IsGameStatus");

	Params::SystemFunctionLibrary_C_IsGameStatus Parms{};

	Parms.Status = Status;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Flag != nullptr)
		*Flag = Parms.Flag;
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.IsGamePlayMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugMode                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USystemFunctionLibrary_C::IsGamePlayMode(class UObject* __WorldContext, bool* DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "IsGamePlayMode");

	Params::SystemFunctionLibrary_C_IsGamePlayMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DebugMode != nullptr)
		*DebugMode = Parms.DebugMode;
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.SetTestCutScene
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LocationName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EnvSetName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CutSceneName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::SetTestCutScene(const class FString& LocationName, const class FString& EnvSetName, const class FString& CutSceneName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "SetTestCutScene");

	Params::SystemFunctionLibrary_C_SetTestCutScene Parms{};

	Parms.LocationName = std::move(LocationName);
	Parms.EnvSetName = std::move(EnvSetName);
	Parms.CutSceneName = std::move(CutSceneName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function SystemFunctionLibrary.SystemFunctionLibrary_C.GetTestCutScene
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           LocationName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CutSceneName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USystemFunctionLibrary_C::GetTestCutScene(class UObject* __WorldContext, class FString* LocationName, class FString* CutSceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SystemFunctionLibrary_C", "GetTestCutScene");

	Params::SystemFunctionLibrary_C_GetTestCutScene Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LocationName != nullptr)
		*LocationName = std::move(Parms.LocationName);

	if (CutSceneName != nullptr)
		*CutSceneName = std::move(Parms.CutSceneName);
}

}

