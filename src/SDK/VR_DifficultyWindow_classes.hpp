#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_DifficultyWindow

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_DifficultyWindow.VR_DifficultyWindow_C
// 0x0028 (0x0388 - 0x0360)
class UVR_DifficultyWindow_C final : public UEndUserWidget
{
public:
	class UEndImage*                              Base;                                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndListBox*                            SelectList;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Shadow2;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Title_Line;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Title;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_DifficultyWindow_C">();
	}
	static class UVR_DifficultyWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_DifficultyWindow_C>();
	}
};
static_assert(alignof(UVR_DifficultyWindow_C) == 0x000008, "Wrong alignment on UVR_DifficultyWindow_C");
static_assert(sizeof(UVR_DifficultyWindow_C) == 0x000388, "Wrong size on UVR_DifficultyWindow_C");
static_assert(offsetof(UVR_DifficultyWindow_C, Base) == 0x000360, "Member 'UVR_DifficultyWindow_C::Base' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, SelectList) == 0x000368, "Member 'UVR_DifficultyWindow_C::SelectList' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, Shadow2) == 0x000370, "Member 'UVR_DifficultyWindow_C::Shadow2' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, Title_Line) == 0x000378, "Member 'UVR_DifficultyWindow_C::Title_Line' has a wrong offset!");
static_assert(offsetof(UVR_DifficultyWindow_C, Txt_Title) == 0x000380, "Member 'UVR_DifficultyWindow_C::Txt_Title' has a wrong offset!");

}

