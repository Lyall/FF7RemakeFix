#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TalkLogs

#include "Basic.hpp"


namespace SDK::Params
{

// Function TalkLogs.TalkLogs_C.On_Log_Messages_SetupContent_0
// 0x0048 (0x0048 - 0x0000)
struct TalkLogs_C_On_Log_Messages_SetupContent_0 final
{
public:
	class UUserWidget*                            MessageWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UTalkLogs_Cell_C*                       K2Node_DynamicCast_AsTalk_Logs_Cell;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(TalkLogs_C_On_Log_Messages_SetupContent_0) == 0x000008, "Wrong alignment on TalkLogs_C_On_Log_Messages_SetupContent_0");
static_assert(sizeof(TalkLogs_C_On_Log_Messages_SetupContent_0) == 0x000048, "Wrong size on TalkLogs_C_On_Log_Messages_SetupContent_0");
static_assert(offsetof(TalkLogs_C_On_Log_Messages_SetupContent_0, MessageWidget) == 0x000000, "Member 'TalkLogs_C_On_Log_Messages_SetupContent_0::MessageWidget' has a wrong offset!");
static_assert(offsetof(TalkLogs_C_On_Log_Messages_SetupContent_0, Type) == 0x000008, "Member 'TalkLogs_C_On_Log_Messages_SetupContent_0::Type' has a wrong offset!");
static_assert(offsetof(TalkLogs_C_On_Log_Messages_SetupContent_0, Message) == 0x000010, "Member 'TalkLogs_C_On_Log_Messages_SetupContent_0::Message' has a wrong offset!");
static_assert(offsetof(TalkLogs_C_On_Log_Messages_SetupContent_0, K2Node_DynamicCast_AsTalk_Logs_Cell) == 0x000020, "Member 'TalkLogs_C_On_Log_Messages_SetupContent_0::K2Node_DynamicCast_AsTalk_Logs_Cell' has a wrong offset!");
static_assert(offsetof(TalkLogs_C_On_Log_Messages_SetupContent_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TalkLogs_C_On_Log_Messages_SetupContent_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TalkLogs_C_On_Log_Messages_SetupContent_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'TalkLogs_C_On_Log_Messages_SetupContent_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

