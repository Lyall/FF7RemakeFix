#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PreInput_Icon

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PreInput_Icon.PreInput_Icon_C
// 0x0068 (0x03C8 - 0x0360)
class UPreInput_Icon_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Loop;                                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_10;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_00;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_01;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_02;                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_03;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_04;                              // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_05;                              // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_06;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_07;                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_08;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Cell_09;                              // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_PreInput_Icon_BG;                              // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PreInput_Icon_C">();
	}
	static class UPreInput_Icon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPreInput_Icon_C>();
	}
};
static_assert(alignof(UPreInput_Icon_C) == 0x000008, "Wrong alignment on UPreInput_Icon_C");
static_assert(sizeof(UPreInput_Icon_C) == 0x0003C8, "Wrong size on UPreInput_Icon_C");
static_assert(offsetof(UPreInput_Icon_C, Loop) == 0x000360, "Member 'UPreInput_Icon_C::Loop' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_10) == 0x000368, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_10' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_00) == 0x000370, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_00' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_01) == 0x000378, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_01' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_02) == 0x000380, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_02' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_03) == 0x000388, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_03' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_04) == 0x000390, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_04' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_05) == 0x000398, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_05' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_06) == 0x0003A0, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_06' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_07) == 0x0003A8, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_07' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_08) == 0x0003B0, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_08' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Cell_09) == 0x0003B8, "Member 'UPreInput_Icon_C::Img_PreInput_Cell_09' has a wrong offset!");
static_assert(offsetof(UPreInput_Icon_C, Img_PreInput_Icon_BG) == 0x0003C0, "Member 'UPreInput_Icon_C::Img_PreInput_Icon_BG' has a wrong offset!");

}

