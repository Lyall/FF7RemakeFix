#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_Options_Cell2

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MainMenu_Options_Cell2.MainMenu_Options_Cell2_C
// 0x0018 (0x0378 - 0x0360)
class UMainMenu_Options_Cell2_C final : public UEndUserWidget
{
public:
	class UEndImage*                              CellOff;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CellOn;                                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_0;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MainMenu_Options_Cell2_C">();
	}
	static class UMainMenu_Options_Cell2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_Options_Cell2_C>();
	}
};
static_assert(alignof(UMainMenu_Options_Cell2_C) == 0x000008, "Wrong alignment on UMainMenu_Options_Cell2_C");
static_assert(sizeof(UMainMenu_Options_Cell2_C) == 0x000378, "Wrong size on UMainMenu_Options_Cell2_C");
static_assert(offsetof(UMainMenu_Options_Cell2_C, CellOff) == 0x000360, "Member 'UMainMenu_Options_Cell2_C::CellOff' has a wrong offset!");
static_assert(offsetof(UMainMenu_Options_Cell2_C, CellOn) == 0x000368, "Member 'UMainMenu_Options_Cell2_C::CellOn' has a wrong offset!");
static_assert(offsetof(UMainMenu_Options_Cell2_C, EndImage_0) == 0x000370, "Member 'UMainMenu_Options_Cell2_C::EndImage_0' has a wrong offset!");

}

