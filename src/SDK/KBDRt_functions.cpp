#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KBDRt

#include "Basic.hpp"

#include "KBDRt_classes.hpp"
#include "KBDRt_parameters.hpp"


namespace SDK
{

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQEX_KBD_Component*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReferenceGroupName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_AddReference(class USQEX_KBD_Component* OtherComponent, const class FString& ReferenceGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_AddReference");

	Params::SQEX_KBD_Component_SQEX_Bonamik_AddReference Parms{};

	Parms.OtherComponent = OtherComponent;
	Parms.ReferenceGroupName = std::move(ReferenceGroupName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddReferenceCommon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQEX_KBD_Component*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_AddReferenceCommon(class USQEX_KBD_Component* OtherComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_AddReferenceCommon");

	Params::SQEX_KBD_Component_SQEX_Bonamik_AddReferenceCommon Parms{};

	Parms.OtherComponent = OtherComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddReferenceDefault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableOtherInstance                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_AddReferenceDefault(bool bEnableOtherInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_AddReferenceDefault");

	Params::SQEX_KBD_Component_SQEX_Bonamik_AddReferenceDefault Parms{};

	Parms.bEnableOtherInstance = bEnableOtherInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddTemporaryCollision
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     CollisionGroups                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FSQEX_BonamikTempCollisionParameter>CollisionParam                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USQEX_KBD_Component::SQEX_Bonamik_AddTemporaryCollision(const TArray<class FName>& CollisionGroups, const TArray<struct FSQEX_BonamikTempCollisionParameter>& CollisionParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_AddTemporaryCollision");

	Params::SQEX_KBD_Component_SQEX_Bonamik_AddTemporaryCollision Parms{};

	Parms.CollisionGroups = std::move(CollisionGroups);
	Parms.CollisionParam = std::move(CollisionParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_ClearAllPresetWind
// (Final, Native, Public, BlueprintCallable)

void USQEX_KBD_Component::SQEX_Bonamik_ClearAllPresetWind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_ClearAllPresetWind");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_ClearEmissiveWind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_ClearEmissiveWind(float BlendTime, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_ClearEmissiveWind");

	Params::SQEX_KBD_Component_SQEX_Bonamik_ClearEmissiveWind Parms{};

	Parms.BlendTime = BlendTime;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_ClearExtendEmissiveWind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_ClearExtendEmissiveWind(float BlendTime, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_ClearExtendEmissiveWind");

	Params::SQEX_KBD_Component_SQEX_Bonamik_ClearExtendEmissiveWind Parms{};

	Parms.BlendTime = BlendTime;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_DisablePresetWind
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     PresetNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_DisablePresetWind(const TArray<class FName>& PresetNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_DisablePresetWind");

	Params::SQEX_KBD_Component_SQEX_Bonamik_DisablePresetWind Parms{};

	Parms.PresetNames = std::move(PresetNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_EnablePresetWind
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     PresetNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_EnablePresetWind(const TArray<class FName>& PresetNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_EnablePresetWind");

	Params::SQEX_KBD_Component_SQEX_Bonamik_EnablePresetWind Parms{};

	Parms.PresetNames = std::move(PresetNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetTeleportDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USQEX_KBD_Component::SQEX_Bonamik_GetTeleportDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_GetTeleportDistance");

	Params::SQEX_KBD_Component_SQEX_Bonamik_GetTeleportDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USQEX_KBD_Component::SQEX_Bonamik_GetWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_GetWeight");

	Params::SQEX_KBD_Component_SQEX_Bonamik_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_IsAutoDisable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEX_KBD_Component::SQEX_Bonamik_IsAutoDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_IsAutoDisable");

	Params::SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_IsSetup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USQEX_KBD_Component::SQEX_Bonamik_IsSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_IsSetup");

	Params::SQEX_KBD_Component_SQEX_Bonamik_IsSetup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_ReinitializeSimulationPose
// (Final, Native, Public, BlueprintCallable)

void USQEX_KBD_Component::SQEX_Bonamik_ReinitializeSimulationPose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_ReinitializeSimulationPose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQEX_KBD_Component*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReferenceGroupName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_RemoveReference(class USQEX_KBD_Component* OtherComponent, const class FString& ReferenceGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RemoveReference");

	Params::SQEX_KBD_Component_SQEX_Bonamik_RemoveReference Parms{};

	Parms.OtherComponent = OtherComponent;
	Parms.ReferenceGroupName = std::move(ReferenceGroupName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveReferenceAll
// (Final, Native, Public, BlueprintCallable)

void USQEX_KBD_Component::SQEX_Bonamik_RemoveReferenceAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RemoveReferenceAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveReferenceCommon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQEX_KBD_Component*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_RemoveReferenceCommon(class USQEX_KBD_Component* OtherComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RemoveReferenceCommon");

	Params::SQEX_KBD_Component_SQEX_Bonamik_RemoveReferenceCommon Parms{};

	Parms.OtherComponent = OtherComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveReferenceDefault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableOtherInstance                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_RemoveReferenceDefault(bool bEnableOtherInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RemoveReferenceDefault");

	Params::SQEX_KBD_Component_SQEX_Bonamik_RemoveReferenceDefault Parms{};

	Parms.bEnableOtherInstance = bEnableOtherInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveTemporaryCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CollisionId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_RemoveTemporaryCollision(int32 CollisionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RemoveTemporaryCollision");

	Params::SQEX_KBD_Component_SQEX_Bonamik_RemoveTemporaryCollision Parms{};

	Parms.CollisionId = CollisionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_Reset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bResetPose                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_Reset(bool bResetPose, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_Reset");

	Params::SQEX_KBD_Component_SQEX_Bonamik_Reset Parms{};

	Parms.bResetPose = bResetPose;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_ResetGravity
// (Final, Native, Public, BlueprintCallable)

void USQEX_KBD_Component::SQEX_Bonamik_ResetGravity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_ResetGravity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RestoreDefaultParameters
// (Final, Native, Public, BlueprintCallable)

void USQEX_KBD_Component::SQEX_Bonamik_RestoreDefaultParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RestoreDefaultParameters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RestoreGroupParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSQEX_BonamikChangingParameter>GroupParam                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_RestoreGroupParam(const TArray<struct FSQEX_BonamikChangingParameter>& GroupParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RestoreGroupParam");

	Params::SQEX_KBD_Component_SQEX_Bonamik_RestoreGroupParam Parms{};

	Parms.GroupParam = std::move(GroupParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RestoreGroupParamExt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSQEX_BonamikChangingParameterExt>GroupParam                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_RestoreGroupParamExt(const TArray<struct FSQEX_BonamikChangingParameterExt>& GroupParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_RestoreGroupParamExt");

	Params::SQEX_KBD_Component_SQEX_Bonamik_RestoreGroupParamExt Parms{};

	Parms.GroupParam = std::move(GroupParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_ScaleGroupParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSQEX_BonamikChangingParameter>GroupParam                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_ScaleGroupParam(const TArray<struct FSQEX_BonamikChangingParameter>& GroupParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_ScaleGroupParam");

	Params::SQEX_KBD_Component_SQEX_Bonamik_ScaleGroupParam Parms{};

	Parms.GroupParam = std::move(GroupParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetAnimPos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   BoneIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceSet                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetAnimPos(int32 BoneIndex, bool bForceSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetAnimPos");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetAnimPos Parms{};

	Parms.BoneIndex = BoneIndex;
	Parms.bForceSet = bForceSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetAutoDisable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AutoDisable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetAutoDisable(bool AutoDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetAutoDisable");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable Parms{};

	Parms.AutoDisable = AutoDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEmissiveWind
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// ESQEX_Bonamik_EmissiveDirection         DirectionSpace                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DirectionVec                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BaseStrength                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaveAmplitude                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaveFreq                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetEmissiveWind(const TArray<class FName>& Groups, ESQEX_Bonamik_EmissiveDirection DirectionSpace, const struct FVector& DirectionVec, float BaseStrength, float WaveAmplitude, float WaveFreq, float BlendTime, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetEmissiveWind");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetEmissiveWind Parms{};

	Parms.Groups = std::move(Groups);
	Parms.DirectionSpace = DirectionSpace;
	Parms.DirectionVec = std::move(DirectionVec);
	Parms.BaseStrength = BaseStrength;
	Parms.WaveAmplitude = WaveAmplitude;
	Parms.WaveFreq = WaveFreq;
	Parms.BlendTime = BlendTime;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetEnable(bool NewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetEnable");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetEnable Parms{};

	Parms.NewEnable = NewEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnableGroundCollision
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bNewEnable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetEnableGroundCollision(const TArray<class FName>& Groups, bool bNewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetEnableGroundCollision");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision Parms{};

	Parms.Groups = std::move(Groups);
	Parms.bNewEnable = bNewEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnableGroundCollisionAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewEnable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetEnableGroundCollisionAll(bool bNewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetEnableGroundCollisionAll");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll Parms{};

	Parms.bNewEnable = bNewEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetExtendEmissiveWind
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// ESQEX_Bonamik_EmissiveDirection         DirectionSpace                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DirectionVec                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BaseStrength                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaveAmplitude                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WaveFreq                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetExtendEmissiveWind(const TArray<class FName>& Groups, ESQEX_Bonamik_EmissiveDirection DirectionSpace, const struct FVector& DirectionVec, float BaseStrength, float WaveAmplitude, float WaveFreq, float BlendTime, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetExtendEmissiveWind");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetExtendEmissiveWind Parms{};

	Parms.Groups = std::move(Groups);
	Parms.DirectionSpace = DirectionSpace;
	Parms.DirectionVec = std::move(DirectionVec);
	Parms.BaseStrength = BaseStrength;
	Parms.WaveAmplitude = WaveAmplitude;
	Parms.WaveFreq = WaveFreq;
	Parms.BlendTime = BlendTime;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGravity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Gravity                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetGravity(const struct FVector& Gravity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetGravity");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetGravity Parms{};

	Parms.Gravity = std::move(Gravity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGroupParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSQEX_BonamikChangingParameter>GroupParam                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetGroupParam(const TArray<struct FSQEX_BonamikChangingParameter>& GroupParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetGroupParam");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetGroupParam Parms{};

	Parms.GroupParam = std::move(GroupParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGroupParamExt
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSQEX_BonamikChangingParameterExt>GroupParam                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetGroupParamExt(const TArray<struct FSQEX_BonamikChangingParameterExt>& GroupParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetGroupParamExt");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetGroupParamExt Parms{};

	Parms.GroupParam = std::move(GroupParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGroupWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Weight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WeightChangeTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ResetWhenNonZeroWeight                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AutoDisable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetGroupWeight(const TArray<class FName>& Groups, float Weight, float WeightChangeTime, bool ResetWhenNonZeroWeight, bool AutoDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetGroupWeight");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Weight = Weight;
	Parms.WeightChangeTime = WeightChangeTime;
	Parms.ResetWhenNonZeroWeight = ResetWhenNonZeroWeight;
	Parms.AutoDisable = AutoDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetInnerConeScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetInnerConeScale(const TArray<class FName>& Groups, float Scale, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetInnerConeScale");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Scale = Scale;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetLocalForceScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetLocalForceScale(const TArray<class FName>& Groups, float Scale, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetLocalForceScale");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Scale = Scale;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetMassScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetMassScale(const TArray<class FName>& Groups, float Scale, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetMassScale");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetMassScale Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Scale = Scale;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetMeshSpaceSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bMeshSpaceSimulation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetMeshSpaceSimulation(bool bMeshSpaceSimulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetMeshSpaceSimulation");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetMeshSpaceSimulation Parms{};

	Parms.bMeshSpaceSimulation = bMeshSpaceSimulation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetOuterConeScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetOuterConeScale(const TArray<class FName>& Groups, float Scale, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetOuterConeScale");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Scale = Scale;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetPreRoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetPreRoll(int32 Step, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetPreRoll");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll Parms{};

	Parms.Step = Step;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetPresetWindScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     PresetNames                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetPresetWindScale(const TArray<class FName>& PresetNames, const float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetPresetWindScale");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetPresetWindScale Parms{};

	Parms.PresetNames = std::move(PresetNames);
	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetSpeedRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SpeedRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedRateChangeTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetSpeedRate(float SpeedRate, float SpeedRateChangeTime, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetSpeedRate");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate Parms{};

	Parms.SpeedRate = SpeedRate;
	Parms.SpeedRateChangeTime = SpeedRateChangeTime;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetTeleportDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TeleportPreRollStep                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetTeleportDistance(float Distance, int32 TeleportPreRollStep, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetTeleportDistance");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetTeleportDistance Parms{};

	Parms.Distance = Distance;
	Parms.TeleportPreRollStep = TeleportPreRollStep;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetUpdateOnlyRendered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUpdateOnlyRendered                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetUpdateOnlyRendered(bool bUpdateOnlyRendered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetUpdateOnlyRendered");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetUpdateOnlyRendered Parms{};

	Parms.bUpdateOnlyRendered = bUpdateOnlyRendered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetUpdateOnlyVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUpdateOnlyVisible                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetUpdateOnlyVisible(bool bUpdateOnlyVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetUpdateOnlyVisible");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetUpdateOnlyVisible Parms{};

	Parms.bUpdateOnlyVisible = bUpdateOnlyVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Weight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WeightChangeTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ResetWhenNonZeroWeight                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AutoDisable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetWeight(float Weight, float WeightChangeTime, bool ResetWhenNonZeroWeight, bool AutoDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetWeight");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetWeight Parms{};

	Parms.Weight = Weight;
	Parms.WeightChangeTime = WeightChangeTime;
	Parms.ResetWhenNonZeroWeight = ResetWhenNonZeroWeight;
	Parms.AutoDisable = AutoDisable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetWorldWindScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_SetWorldWindScale(const TArray<class FName>& Groups, float Scale, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_SetWorldWindScale");

	Params::SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Scale = Scale;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_TurnOff
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    preserveLatestResult                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_TurnOff(bool preserveLatestResult, const TArray<class FName>& Groups, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_TurnOff");

	Params::SQEX_KBD_Component_SQEX_Bonamik_TurnOff Parms{};

	Parms.preserveLatestResult = preserveLatestResult;
	Parms.Groups = std::move(Groups);
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_TurnOn
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_Bonamik_TurnOn(const TArray<class FName>& Groups, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_TurnOn");

	Params::SQEX_KBD_Component_SQEX_Bonamik_TurnOn Parms{};

	Parms.Groups = std::move(Groups);
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_SetEmissiveWindScale
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     Groups                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyToChildren                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USQEX_KBD_Component::SQEX_SetEmissiveWindScale(const TArray<class FName>& Groups, const float Scale, bool bApplyToChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_SetEmissiveWindScale");

	Params::SQEX_KBD_Component_SQEX_SetEmissiveWindScale Parms{};

	Parms.Groups = std::move(Groups);
	Parms.Scale = Scale;
	Parms.bApplyToChildren = bApplyToChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetGravity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector USQEX_KBD_Component::SQEX_Bonamik_GetGravity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_GetGravity");

	Params::SQEX_KBD_Component_SQEX_Bonamik_GetGravity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetNumReferences
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USQEX_KBD_Component::SQEX_Bonamik_GetNumReferences() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_GetNumReferences");

	Params::SQEX_KBD_Component_SQEX_Bonamik_GetNumReferences Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetSpeedRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USQEX_KBD_Component::SQEX_Bonamik_GetSpeedRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SQEX_KBD_Component", "SQEX_Bonamik_GetSpeedRate");

	Params::SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

