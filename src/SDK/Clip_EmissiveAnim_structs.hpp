#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Clip_EmissiveAnim

#include "Basic.hpp"

#include "EndGame_structs.hpp"


namespace SDK
{

// UserDefinedStruct Clip_EmissiveAnim.Clip_EmissiveAnim
// 0x0060 (0x0060 - 0x0000)
struct FClip_EmissiveAnim final
{
public:
	class FString                                 LevelName_7_C6B2ED9E46658F5DCB520C98721C4A88;      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ActorName_26_AE6F648142F232AD3900D6BB39044FE0;     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 RequestID_46_F2B5CECF4C216749680E3284B76AD108;     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          StopAnim_69_8EA6C84E457DC3ACAD0624BF3AEF3155;      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ColorPaletteID_53_9DF1BB3A4F2C99DC9D00AEAB69001E3A; // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EEndEmissiveCurveType                         CurveType_66_077ECA0E45395281B0B118A917F525F5;     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop_58_6BE149FD4608D524AC14D3A18877B476;          // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration_63_ABF86EDE409531810E03D2A666EA32B2;      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendIn_59_EEEE28764D63E06D114FF39509397DC3;       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOut_60_CCFD4A7F4CBDEC6C1871DA8346128EFA;      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideColor_72_6B0EB2D84D6D488603741D8BFFEA2FFE; // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Priority_49_AB5BF63F4EE3831B9F394B9B6AD09C9E;      // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FClip_EmissiveAnim) == 0x000008, "Wrong alignment on FClip_EmissiveAnim");
static_assert(sizeof(FClip_EmissiveAnim) == 0x000060, "Wrong size on FClip_EmissiveAnim");
static_assert(offsetof(FClip_EmissiveAnim, LevelName_7_C6B2ED9E46658F5DCB520C98721C4A88) == 0x000000, "Member 'FClip_EmissiveAnim::LevelName_7_C6B2ED9E46658F5DCB520C98721C4A88' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, ActorName_26_AE6F648142F232AD3900D6BB39044FE0) == 0x000010, "Member 'FClip_EmissiveAnim::ActorName_26_AE6F648142F232AD3900D6BB39044FE0' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, RequestID_46_F2B5CECF4C216749680E3284B76AD108) == 0x000020, "Member 'FClip_EmissiveAnim::RequestID_46_F2B5CECF4C216749680E3284B76AD108' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, StopAnim_69_8EA6C84E457DC3ACAD0624BF3AEF3155) == 0x000030, "Member 'FClip_EmissiveAnim::StopAnim_69_8EA6C84E457DC3ACAD0624BF3AEF3155' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, ColorPaletteID_53_9DF1BB3A4F2C99DC9D00AEAB69001E3A) == 0x000038, "Member 'FClip_EmissiveAnim::ColorPaletteID_53_9DF1BB3A4F2C99DC9D00AEAB69001E3A' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, CurveType_66_077ECA0E45395281B0B118A917F525F5) == 0x000048, "Member 'FClip_EmissiveAnim::CurveType_66_077ECA0E45395281B0B118A917F525F5' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, Loop_58_6BE149FD4608D524AC14D3A18877B476) == 0x000049, "Member 'FClip_EmissiveAnim::Loop_58_6BE149FD4608D524AC14D3A18877B476' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, Duration_63_ABF86EDE409531810E03D2A666EA32B2) == 0x00004C, "Member 'FClip_EmissiveAnim::Duration_63_ABF86EDE409531810E03D2A666EA32B2' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, BlendIn_59_EEEE28764D63E06D114FF39509397DC3) == 0x000050, "Member 'FClip_EmissiveAnim::BlendIn_59_EEEE28764D63E06D114FF39509397DC3' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, BlendOut_60_CCFD4A7F4CBDEC6C1871DA8346128EFA) == 0x000054, "Member 'FClip_EmissiveAnim::BlendOut_60_CCFD4A7F4CBDEC6C1871DA8346128EFA' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, OverrideColor_72_6B0EB2D84D6D488603741D8BFFEA2FFE) == 0x000058, "Member 'FClip_EmissiveAnim::OverrideColor_72_6B0EB2D84D6D488603741D8BFFEA2FFE' has a wrong offset!");
static_assert(offsetof(FClip_EmissiveAnim, Priority_49_AB5BF63F4EE3831B9F394B9B6AD09C9E) == 0x000059, "Member 'FClip_EmissiveAnim::Priority_49_AB5BF63F4EE3831B9F394B9B6AD09C9E' has a wrong offset!");

}

