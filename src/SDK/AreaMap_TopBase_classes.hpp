#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AreaMap_TopBase

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AreaMap_TopBase.AreaMap_TopBase_C
// 0x0218 (0x06B8 - 0x04A0)
class UAreaMap_TopBase_C final : public UEndMapJournalMenu
{
public:
	class UWidgetAnimation*                       Menu_In_0;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Menu_In;                                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseDot1;                                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseDot3;                                          // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseDot4;                                          // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseDot5;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseDot6;                                          // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseSpace1;                                        // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_BottomLeft;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_BottomRight;                                   // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_Left;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_Line;                                          // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_Right;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_TopLeft;                                       // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot_TopRight;                                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_0;                                        // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_1;                                        // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_2;                                        // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_3;                                        // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_5;                                        // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_7;                                        // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_8;                                        // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_9;                                        // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_12;                                       // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_18;                                       // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_19;                                       // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_20;                                       // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_22;                                       // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_24;                                       // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_26;                                       // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_27;                                       // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_31;                                       // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_33;                                       // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              GrayBg;                                            // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_L2;                                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Left;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Left2;                                        // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_R2;                                           // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Right;                                        // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Right2;                                       // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light01;                                           // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light02;                                           // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light03;                                           // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              LightDot;                                          // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Bottom;                                       // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Top;                                          // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Noise_02;                                          // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Noise_04;                                          // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Noise_05;                                          // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              NoiseLight_01;                                     // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              NoiseLight_02;                                     // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              NoiseLight_03;                                     // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              NoiseLight_04;                                     // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Open_Effact;                                       // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Open_Light;                                        // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Shadow;                                            // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Shadow2;                                           // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Win_01;                                            // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Win_02;                                            // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Win_03;                                            // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Win_04;                                            // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Z_Center;                                          // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Z_L1_1;                                            // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Z_L1_2;                                            // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Z_L1_3;                                            // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Z_L1_4;                                            // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AreaMap_TopBase_C">();
	}
	static class UAreaMap_TopBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAreaMap_TopBase_C>();
	}
};
static_assert(alignof(UAreaMap_TopBase_C) == 0x000008, "Wrong alignment on UAreaMap_TopBase_C");
static_assert(sizeof(UAreaMap_TopBase_C) == 0x0006B8, "Wrong size on UAreaMap_TopBase_C");
static_assert(offsetof(UAreaMap_TopBase_C, Menu_In_0) == 0x0004A0, "Member 'UAreaMap_TopBase_C::Menu_In_0' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Menu_In) == 0x0004A8, "Member 'UAreaMap_TopBase_C::Menu_In' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Base) == 0x0004B0, "Member 'UAreaMap_TopBase_C::Base' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, BaseDot1) == 0x0004B8, "Member 'UAreaMap_TopBase_C::BaseDot1' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, BaseDot3) == 0x0004C0, "Member 'UAreaMap_TopBase_C::BaseDot3' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, BaseDot4) == 0x0004C8, "Member 'UAreaMap_TopBase_C::BaseDot4' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, BaseDot5) == 0x0004D0, "Member 'UAreaMap_TopBase_C::BaseDot5' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, BaseDot6) == 0x0004D8, "Member 'UAreaMap_TopBase_C::BaseDot6' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, BaseSpace1) == 0x0004E0, "Member 'UAreaMap_TopBase_C::BaseSpace1' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_BottomLeft) == 0x0004E8, "Member 'UAreaMap_TopBase_C::Dot_BottomLeft' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_BottomRight) == 0x0004F0, "Member 'UAreaMap_TopBase_C::Dot_BottomRight' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_Left) == 0x0004F8, "Member 'UAreaMap_TopBase_C::Dot_Left' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_Line) == 0x000500, "Member 'UAreaMap_TopBase_C::Dot_Line' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_Right) == 0x000508, "Member 'UAreaMap_TopBase_C::Dot_Right' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_TopLeft) == 0x000510, "Member 'UAreaMap_TopBase_C::Dot_TopLeft' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Dot_TopRight) == 0x000518, "Member 'UAreaMap_TopBase_C::Dot_TopRight' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_0) == 0x000520, "Member 'UAreaMap_TopBase_C::EndImage_0' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_1) == 0x000528, "Member 'UAreaMap_TopBase_C::EndImage_1' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_2) == 0x000530, "Member 'UAreaMap_TopBase_C::EndImage_2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_3) == 0x000538, "Member 'UAreaMap_TopBase_C::EndImage_3' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_5) == 0x000540, "Member 'UAreaMap_TopBase_C::EndImage_5' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_7) == 0x000548, "Member 'UAreaMap_TopBase_C::EndImage_7' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_8) == 0x000550, "Member 'UAreaMap_TopBase_C::EndImage_8' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_9) == 0x000558, "Member 'UAreaMap_TopBase_C::EndImage_9' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_12) == 0x000560, "Member 'UAreaMap_TopBase_C::EndImage_12' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_18) == 0x000568, "Member 'UAreaMap_TopBase_C::EndImage_18' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_19) == 0x000570, "Member 'UAreaMap_TopBase_C::EndImage_19' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_20) == 0x000578, "Member 'UAreaMap_TopBase_C::EndImage_20' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_22) == 0x000580, "Member 'UAreaMap_TopBase_C::EndImage_22' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_24) == 0x000588, "Member 'UAreaMap_TopBase_C::EndImage_24' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_26) == 0x000590, "Member 'UAreaMap_TopBase_C::EndImage_26' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_27) == 0x000598, "Member 'UAreaMap_TopBase_C::EndImage_27' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_31) == 0x0005A0, "Member 'UAreaMap_TopBase_C::EndImage_31' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, EndImage_33) == 0x0005A8, "Member 'UAreaMap_TopBase_C::EndImage_33' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, GrayBg) == 0x0005B0, "Member 'UAreaMap_TopBase_C::GrayBg' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Icon_L2) == 0x0005B8, "Member 'UAreaMap_TopBase_C::Icon_L2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Icon_Left) == 0x0005C0, "Member 'UAreaMap_TopBase_C::Icon_Left' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Icon_Left2) == 0x0005C8, "Member 'UAreaMap_TopBase_C::Icon_Left2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Icon_R2) == 0x0005D0, "Member 'UAreaMap_TopBase_C::Icon_R2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Icon_Right) == 0x0005D8, "Member 'UAreaMap_TopBase_C::Icon_Right' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Icon_Right2) == 0x0005E0, "Member 'UAreaMap_TopBase_C::Icon_Right2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Light01) == 0x0005E8, "Member 'UAreaMap_TopBase_C::Light01' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Light02) == 0x0005F0, "Member 'UAreaMap_TopBase_C::Light02' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Light03) == 0x0005F8, "Member 'UAreaMap_TopBase_C::Light03' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, LightDot) == 0x000600, "Member 'UAreaMap_TopBase_C::LightDot' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Line_Bottom) == 0x000608, "Member 'UAreaMap_TopBase_C::Line_Bottom' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Line_Top) == 0x000610, "Member 'UAreaMap_TopBase_C::Line_Top' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Noise_02) == 0x000618, "Member 'UAreaMap_TopBase_C::Noise_02' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Noise_04) == 0x000620, "Member 'UAreaMap_TopBase_C::Noise_04' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Noise_05) == 0x000628, "Member 'UAreaMap_TopBase_C::Noise_05' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, NoiseLight_01) == 0x000630, "Member 'UAreaMap_TopBase_C::NoiseLight_01' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, NoiseLight_02) == 0x000638, "Member 'UAreaMap_TopBase_C::NoiseLight_02' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, NoiseLight_03) == 0x000640, "Member 'UAreaMap_TopBase_C::NoiseLight_03' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, NoiseLight_04) == 0x000648, "Member 'UAreaMap_TopBase_C::NoiseLight_04' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Open_Effact) == 0x000650, "Member 'UAreaMap_TopBase_C::Open_Effact' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Open_Light) == 0x000658, "Member 'UAreaMap_TopBase_C::Open_Light' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Shadow) == 0x000660, "Member 'UAreaMap_TopBase_C::Shadow' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Shadow2) == 0x000668, "Member 'UAreaMap_TopBase_C::Shadow2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Win_01) == 0x000670, "Member 'UAreaMap_TopBase_C::Win_01' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Win_02) == 0x000678, "Member 'UAreaMap_TopBase_C::Win_02' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Win_03) == 0x000680, "Member 'UAreaMap_TopBase_C::Win_03' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Win_04) == 0x000688, "Member 'UAreaMap_TopBase_C::Win_04' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Z_Center) == 0x000690, "Member 'UAreaMap_TopBase_C::Z_Center' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Z_L1_1) == 0x000698, "Member 'UAreaMap_TopBase_C::Z_L1_1' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Z_L1_2) == 0x0006A0, "Member 'UAreaMap_TopBase_C::Z_L1_2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Z_L1_3) == 0x0006A8, "Member 'UAreaMap_TopBase_C::Z_L1_3' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopBase_C, Z_L1_4) == 0x0006B0, "Member 'UAreaMap_TopBase_C::Z_L1_4' has a wrong offset!");

}

