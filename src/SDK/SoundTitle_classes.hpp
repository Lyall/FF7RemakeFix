#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoundTitle

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SoundTitle.SoundTitle_C
// 0x0060 (0x03C0 - 0x0360)
class USoundTitle_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Blue;                                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop_Green;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Green;                                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_SubQuest;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BG;                                            // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_02;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Icon;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Icon_Turtle;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SoundTitle_C">();
	}
	static class USoundTitle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USoundTitle_C>();
	}
};
static_assert(alignof(USoundTitle_C) == 0x000008, "Wrong alignment on USoundTitle_C");
static_assert(sizeof(USoundTitle_C) == 0x0003C0, "Wrong size on USoundTitle_C");
static_assert(offsetof(USoundTitle_C, Blue) == 0x000360, "Member 'USoundTitle_C::Blue' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Loop_Green) == 0x000368, "Member 'USoundTitle_C::Loop_Green' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Green) == 0x000370, "Member 'USoundTitle_C::Green' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, In) == 0x000378, "Member 'USoundTitle_C::In' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Loop) == 0x000380, "Member 'USoundTitle_C::Loop' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Icon_SubQuest) == 0x000388, "Member 'USoundTitle_C::Icon_SubQuest' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Img_BG) == 0x000390, "Member 'USoundTitle_C::Img_BG' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Img_Effect_00) == 0x000398, "Member 'USoundTitle_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Img_Effect_01) == 0x0003A0, "Member 'USoundTitle_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Img_Effect_02) == 0x0003A8, "Member 'USoundTitle_C::Img_Effect_02' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Img_Icon) == 0x0003B0, "Member 'USoundTitle_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(USoundTitle_C, Img_Icon_Turtle) == 0x0003B8, "Member 'USoundTitle_C::Img_Icon_Turtle' has a wrong offset!");

}

