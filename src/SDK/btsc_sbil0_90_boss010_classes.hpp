#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: btsc_sbil0_90_boss010

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass btsc_sbil0_90_boss010.btsc_sbil0_90_boss010_C
// 0x0068 (0x0420 - 0x03B8)
class Abtsc_sbil0_90_boss010_C final : public AEndBattleScene_btsc_sbil0_90_boss010
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         mDebug_BGFAControl00;                              // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         mDebug_BGFAControl01;                              // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameCount;                                        // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_Barret;                                      // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_Tifa;                                        // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_Aerith;                                      // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddScore_Lv1;                                      // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddScore_Lv2;                                      // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddScore_Lv3;                                      // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddScore_LV4;                                      // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Start_P1_Btl3;                                     // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AIPCPilotMode;                                     // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2[0x2];                                      // 0x03F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PilotRunProgress_brt;                              // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PilotRunProgress_tif;                              // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookingToCloud_brt;                                // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LookingToCloud_tif;                                // 0x03FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Played_SlideDownCamera;                            // 0x03FE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Running_brt;                                       // 0x03FF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Running_tif;                                       // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReadyToBtl_P1Final_brt;                            // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReadyToBtl_P1Final_tif;                            // 0x0402(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThroughP1area2_cld;                                // 0x0403(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThroughP1area2_brt;                                // 0x0404(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThroughP1area2_tif;                                // 0x0405(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReadyOnWarpToShootPoint1000;                       // 0x0406(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReadyOnWarpToShootPoint2000;                       // 0x0407(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BarretLastShoot;                                   // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ForceDisappearMiniPra;                             // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          P1_0120_CompletedWarp_brt;                         // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          P1_0120_CompletedWarp_tif;                         // 0x0411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          P1_0050_FirstForceStopCloud;                       // 0x0412(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          P1_0050_SecondForceStopCloud;                      // 0x0413(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         AttackIntervalP2;                                  // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackIntervalMaxP2;                               // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableAttackP2;                                    // 0x041C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayedRailCamera120;                               // 0x041D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_btsc_sbil0_90_boss010(int32 EntryPoint);
	void ReceiveBeginPlay();
	void P2DummyBattle();
	void ChangePhase(int32 mphase);
	void RestartPilotRun_tif();
	void TakeBurstByPC(const class FString& CharaName);
	void OnEntryBattleScene(const class FName& BattleSceneID, const struct FEndDataTableBattleScene& dataTableBattleScene);
	void OnExitBattleScene();
	void OnMetaMessage(const class FString& InMessage);
	void OnBeginTalkTriggerBoxCollide(class FName TriggerBoxActorName, class FName CollideCharaName);
	void SendForceDisappear();
	void OnEndFreeAct(class FName InName);
	void FinishShoot_002();
	void ReceiveTick(float DeltaSeconds);
	void LookAtCloud_brt();
	void AccentAction_brt();
	void FinishShoot_001();
	void OnEndTalkTriggerBoxCollide(class FName TriggerBoxActorName, class FName CollideCharaName);
	void LookAtCloud_tif();
	void ShootBreakCar_brt010();
	void ShootBreakCar_brt000();
	void OnEndRailCamera(const class FName& RailCameraID);
	void OnIncrementBattleCountPerID(class FName CauserCharaName, class FName TargetCharaName, EEndBattleCountLogType Type, class FName ID, int32 Count);
	void RestartPilotRun_brt();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"btsc_sbil0_90_boss010_C">();
	}
	static class Abtsc_sbil0_90_boss010_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abtsc_sbil0_90_boss010_C>();
	}
};
static_assert(alignof(Abtsc_sbil0_90_boss010_C) == 0x000008, "Wrong alignment on Abtsc_sbil0_90_boss010_C");
static_assert(sizeof(Abtsc_sbil0_90_boss010_C) == 0x000420, "Wrong size on Abtsc_sbil0_90_boss010_C");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, UberGraphFrame) == 0x0003B8, "Member 'Abtsc_sbil0_90_boss010_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, DefaultSceneRoot) == 0x0003C0, "Member 'Abtsc_sbil0_90_boss010_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, mDebug_BGFAControl00) == 0x0003C8, "Member 'Abtsc_sbil0_90_boss010_C::mDebug_BGFAControl00' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, mDebug_BGFAControl01) == 0x0003CC, "Member 'Abtsc_sbil0_90_boss010_C::mDebug_BGFAControl01' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, FrameCount) == 0x0003D0, "Member 'Abtsc_sbil0_90_boss010_C::FrameCount' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Score_Barret) == 0x0003D4, "Member 'Abtsc_sbil0_90_boss010_C::Score_Barret' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Score_Tifa) == 0x0003D8, "Member 'Abtsc_sbil0_90_boss010_C::Score_Tifa' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Score_Aerith) == 0x0003DC, "Member 'Abtsc_sbil0_90_boss010_C::Score_Aerith' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AddScore_Lv1) == 0x0003E0, "Member 'Abtsc_sbil0_90_boss010_C::AddScore_Lv1' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AddScore_Lv2) == 0x0003E4, "Member 'Abtsc_sbil0_90_boss010_C::AddScore_Lv2' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AddScore_Lv3) == 0x0003E8, "Member 'Abtsc_sbil0_90_boss010_C::AddScore_Lv3' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AddScore_LV4) == 0x0003EC, "Member 'Abtsc_sbil0_90_boss010_C::AddScore_LV4' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Start_P1_Btl3) == 0x0003F0, "Member 'Abtsc_sbil0_90_boss010_C::Start_P1_Btl3' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AIPCPilotMode) == 0x0003F1, "Member 'Abtsc_sbil0_90_boss010_C::AIPCPilotMode' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, PilotRunProgress_brt) == 0x0003F4, "Member 'Abtsc_sbil0_90_boss010_C::PilotRunProgress_brt' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, PilotRunProgress_tif) == 0x0003F8, "Member 'Abtsc_sbil0_90_boss010_C::PilotRunProgress_tif' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, LookingToCloud_brt) == 0x0003FC, "Member 'Abtsc_sbil0_90_boss010_C::LookingToCloud_brt' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, LookingToCloud_tif) == 0x0003FD, "Member 'Abtsc_sbil0_90_boss010_C::LookingToCloud_tif' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Played_SlideDownCamera) == 0x0003FE, "Member 'Abtsc_sbil0_90_boss010_C::Played_SlideDownCamera' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Running_brt) == 0x0003FF, "Member 'Abtsc_sbil0_90_boss010_C::Running_brt' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, Running_tif) == 0x000400, "Member 'Abtsc_sbil0_90_boss010_C::Running_tif' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ReadyToBtl_P1Final_brt) == 0x000401, "Member 'Abtsc_sbil0_90_boss010_C::ReadyToBtl_P1Final_brt' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ReadyToBtl_P1Final_tif) == 0x000402, "Member 'Abtsc_sbil0_90_boss010_C::ReadyToBtl_P1Final_tif' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ThroughP1area2_cld) == 0x000403, "Member 'Abtsc_sbil0_90_boss010_C::ThroughP1area2_cld' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ThroughP1area2_brt) == 0x000404, "Member 'Abtsc_sbil0_90_boss010_C::ThroughP1area2_brt' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ThroughP1area2_tif) == 0x000405, "Member 'Abtsc_sbil0_90_boss010_C::ThroughP1area2_tif' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ReadyOnWarpToShootPoint1000) == 0x000406, "Member 'Abtsc_sbil0_90_boss010_C::ReadyOnWarpToShootPoint1000' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ReadyOnWarpToShootPoint2000) == 0x000407, "Member 'Abtsc_sbil0_90_boss010_C::ReadyOnWarpToShootPoint2000' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, BarretLastShoot) == 0x000408, "Member 'Abtsc_sbil0_90_boss010_C::BarretLastShoot' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, ForceDisappearMiniPra) == 0x00040C, "Member 'Abtsc_sbil0_90_boss010_C::ForceDisappearMiniPra' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, P1_0120_CompletedWarp_brt) == 0x000410, "Member 'Abtsc_sbil0_90_boss010_C::P1_0120_CompletedWarp_brt' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, P1_0120_CompletedWarp_tif) == 0x000411, "Member 'Abtsc_sbil0_90_boss010_C::P1_0120_CompletedWarp_tif' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, P1_0050_FirstForceStopCloud) == 0x000412, "Member 'Abtsc_sbil0_90_boss010_C::P1_0050_FirstForceStopCloud' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, P1_0050_SecondForceStopCloud) == 0x000413, "Member 'Abtsc_sbil0_90_boss010_C::P1_0050_SecondForceStopCloud' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AttackIntervalP2) == 0x000414, "Member 'Abtsc_sbil0_90_boss010_C::AttackIntervalP2' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, AttackIntervalMaxP2) == 0x000418, "Member 'Abtsc_sbil0_90_boss010_C::AttackIntervalMaxP2' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, EnableAttackP2) == 0x00041C, "Member 'Abtsc_sbil0_90_boss010_C::EnableAttackP2' has a wrong offset!");
static_assert(offsetof(Abtsc_sbil0_90_boss010_C, PlayedRailCamera120) == 0x00041D, "Member 'Abtsc_sbil0_90_boss010_C::PlayedRailCamera120' has a wrong offset!");

}

