#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: btsc_sbil0_80_boss020

#include "Basic.hpp"

#include "EndGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct btsc_sbil0_80_boss020_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_ReceiveTick) == 0x000004, "Wrong alignment on btsc_sbil0_80_boss020_C_ReceiveTick");
static_assert(sizeof(btsc_sbil0_80_boss020_C_ReceiveTick) == 0x000004, "Wrong size on btsc_sbil0_80_boss020_C_ReceiveTick");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.ChangePhase
// 0x0004 (0x0004 - 0x0000)
struct btsc_sbil0_80_boss020_C_ChangePhase final
{
public:
	int32                                         mphase;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_ChangePhase) == 0x000004, "Wrong alignment on btsc_sbil0_80_boss020_C_ChangePhase");
static_assert(sizeof(btsc_sbil0_80_boss020_C_ChangePhase) == 0x000004, "Wrong size on btsc_sbil0_80_boss020_C_ChangePhase");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ChangePhase, mphase) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_ChangePhase::mphase' has a wrong offset!");

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.ExecuteUbergraph_btsc_sbil0_80_boss020
// 0x0100 (0x0100 - 0x0000)
struct btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__phase;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_CauserCharaName3;                     // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TargetCharaName;                      // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleCountLogType                        K2Node_Event_Type;                                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ID;                                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Count;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InMessage;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Damage;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_CauserCharaName2;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_DamagedCharaName;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_AbilityID;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBind;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bGuard;                               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bDodge;                               // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_HitBoneName;                          // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAttributeHit;                        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_DamageSourceID;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       K2Node_Event_DmgSrcAttributeType;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_JustHitRotYaw;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitPosition;                          // 0x0088(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHeal;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharaFromRaceID_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResidentParameterIntegerBP_ReturnValue; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharaHPP_ReturnValue;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPhase_ReturnValue;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_AttackedCharaName;                    // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ReceivedCharaName;                    // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StateID;                              // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_StateCount;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_SyncActionID;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_CauserCharaName;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharaFromRaceID_ReturnValue2;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStatusChangeFromChara_ReturnValue;     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStatusChangeFromChara_ReturnValue2;    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020) == 0x000008, "Wrong alignment on btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020");
static_assert(sizeof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020) == 0x000100, "Wrong size on btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, EntryPoint) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::EntryPoint' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, Temp_bool_Variable) == 0x000005, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event__phase) == 0x00000C, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event__phase' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_CauserCharaName3) == 0x000014, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_CauserCharaName3' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_TargetCharaName) == 0x00001C, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_TargetCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_Type) == 0x000024, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_ID) == 0x000028, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_ID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_Count) == 0x000030, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_Count' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_InMessage) == 0x000038, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_InMessage' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_SwitchName_CmpSuccess) == 0x000048, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_SwitchString_CmpSuccess) == 0x000049, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_Damage) == 0x00004C, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_CauserCharaName2) == 0x000050, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_CauserCharaName2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_DamagedCharaName) == 0x000058, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_DamagedCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_AbilityID) == 0x000060, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_AbilityID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_bBind) == 0x000068, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_bBind' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_bGuard) == 0x000069, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_bGuard' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_bDodge) == 0x00006A, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_bDodge' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_HitBoneName) == 0x00006C, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_HitBoneName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_bAttributeHit) == 0x000074, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_bAttributeHit' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_DamageSourceID) == 0x000078, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_DamageSourceID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_DmgSrcAttributeType) == 0x000080, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_DmgSrcAttributeType' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_JustHitRotYaw) == 0x000084, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_JustHitRotYaw' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_HitPosition) == 0x000088, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_HitPosition' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_bHeal) == 0x000094, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_bHeal' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000095, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_GetCharaFromRaceID_ReturnValue) == 0x000098, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_GetCharaFromRaceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_GetResidentParameterIntegerBP_ReturnValue) == 0x0000A0, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_GetResidentParameterIntegerBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_GetCharaHPP_ReturnValue) == 0x0000A4, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_GetCharaHPP_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_GetPhase_ReturnValue) == 0x0000AC, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_GetPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_BooleanAND_ReturnValue2) == 0x0000B1, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_AttackedCharaName) == 0x0000B4, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_AttackedCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_ReceivedCharaName) == 0x0000BC, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_ReceivedCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_StateID) == 0x0000C4, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_StateID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_StateCount) == 0x0000CC, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_StateCount' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_SyncActionID) == 0x0000D0, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_SyncActionID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, K2Node_Event_CauserCharaName) == 0x0000D8, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::K2Node_Event_CauserCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x0000E0, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_Not_PreBool_ReturnValue2) == 0x0000E1, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x0000E2, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_BooleanOR_ReturnValue) == 0x0000E3, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_GetCharaFromRaceID_ReturnValue2) == 0x0000E8, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_GetCharaFromRaceID_ReturnValue2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_BooleanAND_ReturnValue3) == 0x0000F0, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_HasStatusChangeFromChara_ReturnValue) == 0x0000F1, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_HasStatusChangeFromChara_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_HasStatusChangeFromChara_ReturnValue2) == 0x0000F2, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_HasStatusChangeFromChara_ReturnValue2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_BooleanNOR_ReturnValue) == 0x0000F3, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000F4, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x0000F8, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, Temp_bool_IsClosed_Variable) == 0x0000F9, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_BooleanAND_ReturnValue4) == 0x0000FA, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'btsc_sbil0_80_boss020_C_ExecuteUbergraph_btsc_sbil0_80_boss020::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.OnCharaSyncAction
// 0x002C (0x002C - 0x0000)
struct btsc_sbil0_80_boss020_C_OnCharaSyncAction final
{
public:
	class FName                                   AttackedCharaName;                                 // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReceivedCharaName;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StateId;                                           // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StateCount;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   syncActionID;                                      // 0x001C(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CauserCharaName;                                   // 0x0024(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_OnCharaSyncAction) == 0x000004, "Wrong alignment on btsc_sbil0_80_boss020_C_OnCharaSyncAction");
static_assert(sizeof(btsc_sbil0_80_boss020_C_OnCharaSyncAction) == 0x00002C, "Wrong size on btsc_sbil0_80_boss020_C_OnCharaSyncAction");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnCharaSyncAction, AttackedCharaName) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_OnCharaSyncAction::AttackedCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnCharaSyncAction, ReceivedCharaName) == 0x000008, "Member 'btsc_sbil0_80_boss020_C_OnCharaSyncAction::ReceivedCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnCharaSyncAction, StateId) == 0x000010, "Member 'btsc_sbil0_80_boss020_C_OnCharaSyncAction::StateId' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnCharaSyncAction, StateCount) == 0x000018, "Member 'btsc_sbil0_80_boss020_C_OnCharaSyncAction::StateCount' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnCharaSyncAction, syncActionID) == 0x00001C, "Member 'btsc_sbil0_80_boss020_C_OnCharaSyncAction::syncActionID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnCharaSyncAction, CauserCharaName) == 0x000024, "Member 'btsc_sbil0_80_boss020_C_OnCharaSyncAction::CauserCharaName' has a wrong offset!");

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.OnTakeDamage
// 0x004C (0x004C - 0x0000)
struct btsc_sbil0_80_boss020_C_OnTakeDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CauserCharaName;                                   // 0x0004(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DamagedCharaName;                                  // 0x000C(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AbilityID;                                         // 0x0014(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBind;                                             // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bGuard;                                            // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDodge;                                            // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   hitBoneName;                                       // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAttributeHit;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DamageSourceID;                                    // 0x002C(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       DmgSrcAttributeType;                               // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         justHitRotYaw;                                     // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                hitPosition;                                       // 0x003C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHeal;                                             // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_OnTakeDamage) == 0x000004, "Wrong alignment on btsc_sbil0_80_boss020_C_OnTakeDamage");
static_assert(sizeof(btsc_sbil0_80_boss020_C_OnTakeDamage) == 0x00004C, "Wrong size on btsc_sbil0_80_boss020_C_OnTakeDamage");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, Damage) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::Damage' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, CauserCharaName) == 0x000004, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::CauserCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, DamagedCharaName) == 0x00000C, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::DamagedCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, AbilityID) == 0x000014, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::AbilityID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, bBind) == 0x00001C, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::bBind' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, bGuard) == 0x00001D, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::bGuard' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, bDodge) == 0x00001E, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::bDodge' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, hitBoneName) == 0x000020, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::hitBoneName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, bAttributeHit) == 0x000028, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::bAttributeHit' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, DamageSourceID) == 0x00002C, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::DamageSourceID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, DmgSrcAttributeType) == 0x000034, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::DmgSrcAttributeType' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, justHitRotYaw) == 0x000038, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::justHitRotYaw' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, hitPosition) == 0x00003C, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::hitPosition' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnTakeDamage, bHeal) == 0x000048, "Member 'btsc_sbil0_80_boss020_C_OnTakeDamage::bHeal' has a wrong offset!");

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.OnMetaMessage
// 0x0010 (0x0010 - 0x0000)
struct btsc_sbil0_80_boss020_C_OnMetaMessage final
{
public:
	class FString                                 InMessage;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_OnMetaMessage) == 0x000008, "Wrong alignment on btsc_sbil0_80_boss020_C_OnMetaMessage");
static_assert(sizeof(btsc_sbil0_80_boss020_C_OnMetaMessage) == 0x000010, "Wrong size on btsc_sbil0_80_boss020_C_OnMetaMessage");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnMetaMessage, InMessage) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_OnMetaMessage::InMessage' has a wrong offset!");

// Function btsc_sbil0_80_boss020.btsc_sbil0_80_boss020_C.OnIncrementBattleCountPerID
// 0x0020 (0x0020 - 0x0000)
struct btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID final
{
public:
	class FName                                   CauserCharaName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetCharaName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleCountLogType                        Type;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ID;                                                // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID) == 0x000004, "Wrong alignment on btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID");
static_assert(sizeof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID) == 0x000020, "Wrong size on btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID, CauserCharaName) == 0x000000, "Member 'btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID::CauserCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID, TargetCharaName) == 0x000008, "Member 'btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID::TargetCharaName' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID, Type) == 0x000010, "Member 'btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID::Type' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID, ID) == 0x000014, "Member 'btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID::ID' has a wrong offset!");
static_assert(offsetof(btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID, Count) == 0x00001C, "Member 'btsc_sbil0_80_boss020_C_OnIncrementBattleCountPerID::Count' has a wrong offset!");

}

