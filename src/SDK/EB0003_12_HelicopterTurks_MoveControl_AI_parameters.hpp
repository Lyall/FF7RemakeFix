#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EB0003_12_HelicopterTurks_MoveControl_AI

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EndGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI
// 0x05F0 (0x05F0 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetLeader_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AEndNavModifierVolume* InVolume)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AEndNavModifierVolume* InVolume)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchName2_CmpSuccess;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplinePointFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplinePointFloat_ReturnValue2;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplinePointFloat_ReturnValue3;         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplinePointFloat_ReturnValue4;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue4;     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplinePointFloat_ReturnValue5;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue5;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_InName;                         // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName3_CmpSuccess;                     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName InName)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_Event_InMessage2;                           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName4_CmpSuccess;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InNew;                                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InOld;                                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndNavModifierVolume*                  CallFunc_GetNavFromName_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAiBattleRole                              K2Node_Event_InRole2;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InStep2;                              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName5_CmpSuccess;                     // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_message;                              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName6_CmpSuccess;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Damage2;                              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          K2Node_Event_InTarget;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName3;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InBind2;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndNavModifierVolume*                  K2Node_CustomEvent_InVolume2;                      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndNavModifierVolume*                  K2Node_CustomEvent_InVolume;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName7_CmpSuccess;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue2;               // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue2;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndNavModifierVolume*                  CallFunc_GetNavFromName_ReturnValue2;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName8_CmpSuccess;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Damage;                               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          K2Node_Event_InChara2;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName2;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAbilityCommandType                  K2Node_Event_InCommandType;                        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InBind;                               // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InGuard;                              // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InDodge;                              // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Event_InBoneName;                           // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InAttributeWeak;                      // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InDmgSrcID;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       K2Node_Event_InDmgSrcAttribute;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_JustHitRotYaw;                        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitPosition;                          // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InHeal;                               // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InCounter;                            // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataTableBattleDamageSource        K2Node_Event_dataTableBattleDamageSource;          // 0x01B8(0x0340)()
	bool                                          K2Node_Event_useAbilityUCPC;                       // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName9_CmpSuccess;                     // 0x04FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPC_ReturnValue;                       // 0x04FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHPPercent_ReturnValue;                 // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0505(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_506[0x2];                                      // 0x0506(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue2;                // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue3;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AEndCharacter*>                  K2Node_MakeArray_Array;                            // 0x0518(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchName10_CmpSuccess;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndNavModifierVolume*                  CallFunc_GetNavFromName_ReturnValue3;              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue4;                // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key2;                         // 0x0540(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetSplinePointFloat_ReturnValue6;         // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue6;     // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_InMotionName;                         // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName;                               // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue;                           // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue;                         // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAiBattleRole                              K2Node_Event_InRole;                               // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InStep;                               // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          K2Node_Event_InChara;                              // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_InMessage;                            // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue5;                // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue6;                // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue7;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_cutSceneId;                           // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName11_CmpSuccess;                    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHPPercent_ReturnValue2;                // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          CallFunc_GetCharacter_ReturnValue8;                // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x05D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x05DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VecToYaw_ReturnValue;                     // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VecToPitch_ReturnValue;                   // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI) == 0x0005F0, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, EntryPoint) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::EntryPoint' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetLeader_ReturnValue) == 0x000008, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_CreateDelegate_OutputDelegate2) == 0x000030, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName_CmpSuccess) == 0x000040, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_InputKeyEvent_Key) == 0x000048, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName2_CmpSuccess) == 0x000060, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetSplinePointFloat_ReturnValue) == 0x000064, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetSplinePointFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetSplinePointFloat_ReturnValue2) == 0x00006C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetSplinePointFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000070, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetSplinePointFloat_ReturnValue3) == 0x000074, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetSplinePointFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x000078, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetSplinePointFloat_ReturnValue4) == 0x00007C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetSplinePointFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_FloatFloat_ReturnValue4) == 0x000080, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetSplinePointFloat_ReturnValue5) == 0x000084, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetSplinePointFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_FloatFloat_ReturnValue5) == 0x000088, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_CustomEvent_InName) == 0x00008C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_CustomEvent_InName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName3_CmpSuccess) == 0x000094, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_CreateDelegate_OutputDelegate3) == 0x000098, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InMessage2) == 0x0000A8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InMessage2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchString_CmpSuccess) == 0x0000B8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_Map_Find_Value) == 0x0000BC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_Map_Find_ReturnValue) == 0x0000C0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName4_CmpSuccess) == 0x0000C1, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName4_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InNew) == 0x0000C4, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InNew' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InOld) == 0x0000C8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InOld' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchInteger_CmpSuccess) == 0x0000CC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetNavFromName_ReturnValue) == 0x0000D0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetNavFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InRole2) == 0x0000D8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InRole2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InStep2) == 0x0000DC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InStep2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_DeltaTime) == 0x0000E0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName5_CmpSuccess) == 0x0000E4, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName5_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue) == 0x0000E8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_DeltaSeconds) == 0x0000F0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_message) == 0x0000F4, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_message' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName6_CmpSuccess) == 0x0000FC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName6_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, Temp_bool_Has_Been_Initd_Variable) == 0x0000FD, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_Damage2) == 0x000100, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_Damage2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InTarget) == 0x000108, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InTarget' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InName3) == 0x000110, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InName3' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InBind2) == 0x000118, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InBind2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_CustomEvent_InVolume2) == 0x000120, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_CustomEvent_InVolume2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetObjectName_ReturnValue) == 0x000128, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_Conv_StringToName_ReturnValue) == 0x000138, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_CustomEvent_InVolume) == 0x000140, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_CustomEvent_InVolume' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName7_CmpSuccess) == 0x000148, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName7_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetObjectName_ReturnValue2) == 0x000150, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetObjectName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_Conv_StringToName_ReturnValue2) == 0x000160, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_Conv_StringToName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetNavFromName_ReturnValue2) == 0x000168, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetNavFromName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName8_CmpSuccess) == 0x000170, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName8_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_Damage) == 0x000174, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InChara2) == 0x000178, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InChara2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InName2) == 0x000180, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InName2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InCommandType) == 0x000188, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InCommandType' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InBind) == 0x000189, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InBind' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InGuard) == 0x00018A, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InGuard' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InDodge) == 0x00018B, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InDodge' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InBoneName) == 0x00018C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InBoneName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InAttributeWeak) == 0x000194, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InDmgSrcID) == 0x000198, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InDmgSrcID' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InDmgSrcAttribute) == 0x0001A0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InDmgSrcAttribute' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_JustHitRotYaw) == 0x0001A4, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_JustHitRotYaw' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_HitPosition) == 0x0001A8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_HitPosition' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InHeal) == 0x0001B4, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InHeal' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InCounter) == 0x0001B5, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InCounter' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_dataTableBattleDamageSource) == 0x0001B8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_dataTableBattleDamageSource' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_useAbilityUCPC) == 0x0004F8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_useAbilityUCPC' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchEnum_CmpSuccess) == 0x0004F9, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName9_CmpSuccess) == 0x0004FA, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName9_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_IsAIPC_ReturnValue) == 0x0004FB, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_IsAIPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004FC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetHPPercent_ReturnValue) == 0x000500, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetHPPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000504, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, Temp_bool_IsClosed_Variable) == 0x000505, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue2) == 0x000508, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue3) == 0x000510, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_MakeArray_Array) == 0x000518, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName10_CmpSuccess) == 0x000528, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName10_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetNavFromName_ReturnValue3) == 0x000530, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetNavFromName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue4) == 0x000538, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_InputKeyEvent_Key2) == 0x000540, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_InputKeyEvent_Key2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetSplinePointFloat_ReturnValue6) == 0x000558, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetSplinePointFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GreaterEqual_FloatFloat_ReturnValue6) == 0x00055C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GreaterEqual_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InMotionName) == 0x000560, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InMotionName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InName) == 0x000568, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InIntValue) == 0x000570, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InIntValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InFloatValue) == 0x000574, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InFloatValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InRole) == 0x000578, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InRole' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InStep) == 0x00057C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InStep' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InChara) == 0x000580, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InChara' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_InMessage) == 0x000588, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_InMessage' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue5) == 0x000598, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue5' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue6) == 0x0005A0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue6' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue7) == 0x0005A8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue7' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_Event_cutSceneId) == 0x0005B0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_Event_cutSceneId' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, K2Node_SwitchName11_CmpSuccess) == 0x0005B8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::K2Node_SwitchName11_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetHPPercent_ReturnValue2) == 0x0005BC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetHPPercent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0005C0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_GetCharacter_ReturnValue8) == 0x0005C8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_GetCharacter_ReturnValue8' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x0005D0, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0005DC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_VecToYaw_ReturnValue) == 0x0005E8, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_VecToYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI, CallFunc_VecToPitch_ReturnValue) == 0x0005EC, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI::CallFunc_VecToPitch_ReturnValue' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnEndCutScene
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene final
{
public:
	class FName                                   CutsceneID;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene, CutsceneID) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnEndCutScene::CutsceneID' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnMetaMessageAboutCharacter
// 0x0018 (0x0018 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter final
{
public:
	class AEndCharacter*                          InChara;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InMessage;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter) == 0x000018, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter, InChara) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter::InChara' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter, InMessage) == 0x000008, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessageAboutCharacter::InMessage' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnFirstUpdate
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate final
{
public:
	EEndAiBattleRole                              InRole;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InStep;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate, InRole) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate::InRole' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate, InStep) == 0x000004, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnFirstUpdate::InStep' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnMotionMessage
// 0x0018 (0x0018 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage) == 0x000018, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage, InMotionName) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage::InMotionName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage, InName) == 0x000008, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage::InName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage, InIntValue) == 0x000010, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage::InIntValue' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage, InFloatValue) == 0x000014, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMotionMessage::InFloatValue' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnTakeDamage
// 0x0390 (0x0390 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          InChara;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAbilityCommandType                  InCommandType;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBind;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InGuard;                                           // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InDodge;                                           // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   InBoneName;                                        // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAttributeWeak;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InDmgSrcID;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndBattleAttributeType                       InDmgSrcAttribute;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         justHitRotYaw;                                     // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                hitPosition;                                       // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHeal;                                            // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InCounter;                                         // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndDataTableBattleDamageSource        dataTableBattleDamageSource;                       // 0x0048(0x0340)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          useAbilityUCPC;                                    // 0x0388(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage) == 0x000390, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, Damage) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::Damage' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InChara) == 0x000008, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InChara' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InName) == 0x000010, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InCommandType) == 0x000018, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InCommandType' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InBind) == 0x000019, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InBind' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InGuard) == 0x00001A, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InGuard' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InDodge) == 0x00001B, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InDodge' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InBoneName) == 0x00001C, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InBoneName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InAttributeWeak) == 0x000024, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InAttributeWeak' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InDmgSrcID) == 0x000028, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InDmgSrcID' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InDmgSrcAttribute) == 0x000030, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InDmgSrcAttribute' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, justHitRotYaw) == 0x000034, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::justHitRotYaw' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, hitPosition) == 0x000038, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::hitPosition' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InHeal) == 0x000044, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InHeal' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, InCounter) == 0x000045, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::InCounter' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, dataTableBattleDamageSource) == 0x000048, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::dataTableBattleDamageSource' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage, useAbilityUCPC) == 0x000388, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnTakeDamage::useAbilityUCPC' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.CustomEvent_1
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1 final
{
public:
	class AEndNavModifierVolume*                  InVolume;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1, InVolume) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent_1::InVolume' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.CustomEvent
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent final
{
public:
	class AEndNavModifierVolume*                  InVolume;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent, InVolume) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_CustomEvent::InVolume' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnKilled
// 0x0020 (0x0020 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEndCharacter*                          InTarget;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBind;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled) == 0x000020, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled, Damage) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled::Damage' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled, InTarget) == 0x000008, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled::InTarget' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled, InName) == 0x000010, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled::InName' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled, InBind) == 0x000018, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnKilled::InBind' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnCutSceneMessage
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage final
{
public:
	class FName                                   Message;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage, Message) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnCutSceneMessage::Message' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick) == 0x000004, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnUpdate
// 0x000C (0x000C - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate final
{
public:
	EEndAiBattleRole                              InRole;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InStep;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate) == 0x00000C, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate, InRole) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate::InRole' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate, InStep) == 0x000004, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate::InStep' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate, DeltaTime) == 0x000008, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnUpdate::DeltaTime' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.InpActEvt_NumPadOne_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnChangePhase
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase final
{
public:
	int32                                         InNew;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InOld;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase, InNew) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase::InNew' has a wrong offset!");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase, InOld) == 0x000004, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnChangePhase::InOld' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.OnMetaMessage
// 0x0010 (0x0010 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage final
{
public:
	class FString                                 InMessage;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage) == 0x000008, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage) == 0x000010, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage, InMessage) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_OnMetaMessage::InMessage' has a wrong offset!");

// Function EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C.stay
// 0x0008 (0x0008 - 0x0000)
struct EB0003_12_HelicopterTurks_MoveControl_AI_C_stay final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EB0003_12_HelicopterTurks_MoveControl_AI_C_stay) == 0x000004, "Wrong alignment on EB0003_12_HelicopterTurks_MoveControl_AI_C_stay");
static_assert(sizeof(EB0003_12_HelicopterTurks_MoveControl_AI_C_stay) == 0x000008, "Wrong size on EB0003_12_HelicopterTurks_MoveControl_AI_C_stay");
static_assert(offsetof(EB0003_12_HelicopterTurks_MoveControl_AI_C_stay, InName) == 0x000000, "Member 'EB0003_12_HelicopterTurks_MoveControl_AI_C_stay::InName' has a wrong offset!");

}

