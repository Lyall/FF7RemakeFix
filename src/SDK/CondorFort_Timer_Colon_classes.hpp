#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CondorFort_Timer_Colon

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CondorFort_Timer_Colon.CondorFort_Timer_Colon_C
// 0x0028 (0x0388 - 0x0360)
class UCondorFort_Timer_Colon_C final : public UEndUserWidget
{
public:
	class UEndCanvasPanel*                        All_Timer_Colon;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Colon_Blue;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Colon_Red;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Blue;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Red;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CondorFort_Timer_Colon_C">();
	}
	static class UCondorFort_Timer_Colon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCondorFort_Timer_Colon_C>();
	}
};
static_assert(alignof(UCondorFort_Timer_Colon_C) == 0x000008, "Wrong alignment on UCondorFort_Timer_Colon_C");
static_assert(sizeof(UCondorFort_Timer_Colon_C) == 0x000388, "Wrong size on UCondorFort_Timer_Colon_C");
static_assert(offsetof(UCondorFort_Timer_Colon_C, All_Timer_Colon) == 0x000360, "Member 'UCondorFort_Timer_Colon_C::All_Timer_Colon' has a wrong offset!");
static_assert(offsetof(UCondorFort_Timer_Colon_C, Img_Colon_Blue) == 0x000368, "Member 'UCondorFort_Timer_Colon_C::Img_Colon_Blue' has a wrong offset!");
static_assert(offsetof(UCondorFort_Timer_Colon_C, Img_Colon_Red) == 0x000370, "Member 'UCondorFort_Timer_Colon_C::Img_Colon_Red' has a wrong offset!");
static_assert(offsetof(UCondorFort_Timer_Colon_C, Nut_Blue) == 0x000378, "Member 'UCondorFort_Timer_Colon_C::Nut_Blue' has a wrong offset!");
static_assert(offsetof(UCondorFort_Timer_Colon_C, Nut_Red) == 0x000380, "Member 'UCondorFort_Timer_Colon_C::Nut_Red' has a wrong offset!");

}

