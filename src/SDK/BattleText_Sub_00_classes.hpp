#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleText_Sub_00

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleText_Sub_00.BattleText_Sub_00_C
// 0x0078 (0x0468 - 0x03F0)
class UBattleText_Sub_00_C final : public UEndDamageSubText
{
public:
	class UWidgetAnimation*                       Chain_Color;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Resist_Color;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Weakness_Color;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       DamageCritical_Color;                              // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       BurstCritical_Color;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AttackCritical_Color;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Guard_Color;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All;                                               // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BG_00;                                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl;                                               // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Sub;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleText_Sub_00_C">();
	}
	static class UBattleText_Sub_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleText_Sub_00_C>();
	}
};
static_assert(alignof(UBattleText_Sub_00_C) == 0x000008, "Wrong alignment on UBattleText_Sub_00_C");
static_assert(sizeof(UBattleText_Sub_00_C) == 0x000468, "Wrong size on UBattleText_Sub_00_C");
static_assert(offsetof(UBattleText_Sub_00_C, Chain_Color) == 0x0003F0, "Member 'UBattleText_Sub_00_C::Chain_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Resist_Color) == 0x0003F8, "Member 'UBattleText_Sub_00_C::Resist_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Weakness_Color) == 0x000400, "Member 'UBattleText_Sub_00_C::Weakness_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, DamageCritical_Color) == 0x000408, "Member 'UBattleText_Sub_00_C::DamageCritical_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, BurstCritical_Color) == 0x000410, "Member 'UBattleText_Sub_00_C::BurstCritical_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, AttackCritical_Color) == 0x000418, "Member 'UBattleText_Sub_00_C::AttackCritical_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Guard_Color) == 0x000420, "Member 'UBattleText_Sub_00_C::Guard_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Loop) == 0x000428, "Member 'UBattleText_Sub_00_C::Loop' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Out) == 0x000430, "Member 'UBattleText_Sub_00_C::Out' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, In) == 0x000438, "Member 'UBattleText_Sub_00_C::In' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, All) == 0x000440, "Member 'UBattleText_Sub_00_C::All' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Img_BG_00) == 0x000448, "Member 'UBattleText_Sub_00_C::Img_BG_00' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Img_Effect_00) == 0x000450, "Member 'UBattleText_Sub_00_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Pnl) == 0x000458, "Member 'UBattleText_Sub_00_C::Pnl' has a wrong offset!");
static_assert(offsetof(UBattleText_Sub_00_C, Txt_Sub) == 0x000460, "Member 'UBattleText_Sub_00_C::Txt_Sub' has a wrong offset!");

}

