#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleText_ParryEffect

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleText_ParryEffect.BattleText_ParryEffect_C
// 0x0030 (0x03C0 - 0x0390)
class UBattleText_ParryEffect_C final : public UEndPopupMessageEffect
{
public:
	class UWidgetAnimation*                       In;                                                // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_BattleText_ParryEffect;                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBorder*                             All_Nut_ParryEffect;                               // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_ParryEffect;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleText_ParryEffect_C">();
	}
	static class UBattleText_ParryEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleText_ParryEffect_C>();
	}
};
static_assert(alignof(UBattleText_ParryEffect_C) == 0x000008, "Wrong alignment on UBattleText_ParryEffect_C");
static_assert(sizeof(UBattleText_ParryEffect_C) == 0x0003C0, "Wrong size on UBattleText_ParryEffect_C");
static_assert(offsetof(UBattleText_ParryEffect_C, In) == 0x000390, "Member 'UBattleText_ParryEffect_C::In' has a wrong offset!");
static_assert(offsetof(UBattleText_ParryEffect_C, All_BattleText_ParryEffect) == 0x000398, "Member 'UBattleText_ParryEffect_C::All_BattleText_ParryEffect' has a wrong offset!");
static_assert(offsetof(UBattleText_ParryEffect_C, All_Nut_ParryEffect) == 0x0003A0, "Member 'UBattleText_ParryEffect_C::All_Nut_ParryEffect' has a wrong offset!");
static_assert(offsetof(UBattleText_ParryEffect_C, Img_Effect_00) == 0x0003A8, "Member 'UBattleText_ParryEffect_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UBattleText_ParryEffect_C, Img_Effect_01) == 0x0003B0, "Member 'UBattleText_ParryEffect_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(UBattleText_ParryEffect_C, Pnl_ParryEffect) == 0x0003B8, "Member 'UBattleText_ParryEffect_C::Pnl_ParryEffect' has a wrong offset!");

}

