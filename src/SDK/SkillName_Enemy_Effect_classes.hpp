#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillName_Enemy_Effect

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SkillName_Enemy_Effect.SkillName_Enemy_Effect_C
// 0x0030 (0x0390 - 0x0360)
class USkillName_Enemy_Effect_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_CrossLight;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_EffectLight;                                   // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_RingEffect;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkillName_Enemy_Effect_C">();
	}
	static class USkillName_Enemy_Effect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillName_Enemy_Effect_C>();
	}
};
static_assert(alignof(USkillName_Enemy_Effect_C) == 0x000008, "Wrong alignment on USkillName_Enemy_Effect_C");
static_assert(sizeof(USkillName_Enemy_Effect_C) == 0x000390, "Wrong size on USkillName_Enemy_Effect_C");
static_assert(offsetof(USkillName_Enemy_Effect_C, Out) == 0x000360, "Member 'USkillName_Enemy_Effect_C::Out' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_Effect_C, Loop) == 0x000368, "Member 'USkillName_Enemy_Effect_C::Loop' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_Effect_C, In) == 0x000370, "Member 'USkillName_Enemy_Effect_C::In' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_Effect_C, Img_CrossLight) == 0x000378, "Member 'USkillName_Enemy_Effect_C::Img_CrossLight' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_Effect_C, Img_EffectLight) == 0x000380, "Member 'USkillName_Enemy_Effect_C::Img_EffectLight' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_Effect_C, Img_RingEffect) == 0x000388, "Member 'USkillName_Enemy_Effect_C::Img_RingEffect' has a wrong offset!");

}

