#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_Equip_Block

#include "Basic.hpp"


namespace SDK::Params
{

// Function MainMenu_Equip_Block.MainMenu_Equip_Block_C.ExecuteUbergraph_MainMenu_Equip_Block
// 0x0078 (0x0078 - 0x0000)
struct MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Attack;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Defense;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MagicAttack;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MagicDefense;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue3;              // 0x0048(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue4;              // 0x0060(0x0018)()
};
static_assert(alignof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block) == 0x000008, "Wrong alignment on MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block");
static_assert(sizeof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block) == 0x000078, "Wrong size on MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, EntryPoint) == 0x000000, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::EntryPoint' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, K2Node_Event_Attack) == 0x000004, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::K2Node_Event_Attack' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, K2Node_Event_Defense) == 0x000008, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::K2Node_Event_Defense' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, K2Node_Event_MagicAttack) == 0x00000C, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::K2Node_Event_MagicAttack' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, K2Node_Event_MagicDefense) == 0x000010, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::K2Node_Event_MagicDefense' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, CallFunc_Conv_IntToText_ReturnValue2) == 0x000030, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, CallFunc_Conv_IntToText_ReturnValue3) == 0x000048, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::CallFunc_Conv_IntToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block, CallFunc_Conv_IntToText_ReturnValue4) == 0x000060, "Member 'MainMenu_Equip_Block_C_ExecuteUbergraph_MainMenu_Equip_Block::CallFunc_Conv_IntToText_ReturnValue4' has a wrong offset!");

// Function MainMenu_Equip_Block.MainMenu_Equip_Block_C.UpdateEquipStatus
// 0x0010 (0x0010 - 0x0000)
struct MainMenu_Equip_Block_C_UpdateEquipStatus final
{
public:
	int32                                         Attack;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Defense;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagicAttack;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagicDefense;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainMenu_Equip_Block_C_UpdateEquipStatus) == 0x000004, "Wrong alignment on MainMenu_Equip_Block_C_UpdateEquipStatus");
static_assert(sizeof(MainMenu_Equip_Block_C_UpdateEquipStatus) == 0x000010, "Wrong size on MainMenu_Equip_Block_C_UpdateEquipStatus");
static_assert(offsetof(MainMenu_Equip_Block_C_UpdateEquipStatus, Attack) == 0x000000, "Member 'MainMenu_Equip_Block_C_UpdateEquipStatus::Attack' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_UpdateEquipStatus, Defense) == 0x000004, "Member 'MainMenu_Equip_Block_C_UpdateEquipStatus::Defense' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_UpdateEquipStatus, MagicAttack) == 0x000008, "Member 'MainMenu_Equip_Block_C_UpdateEquipStatus::MagicAttack' has a wrong offset!");
static_assert(offsetof(MainMenu_Equip_Block_C_UpdateEquipStatus, MagicDefense) == 0x00000C, "Member 'MainMenu_Equip_Block_C_UpdateEquipStatus::MagicDefense' has a wrong offset!");

}

