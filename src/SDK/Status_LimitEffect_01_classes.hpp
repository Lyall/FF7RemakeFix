#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Status_LimitEffect_01

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Status_LimitEffect_01.Status_LimitEffect_01_C
// 0x00B0 (0x0418 - 0x0368)
class UStatus_LimitEffect_01_C final : public UEndMenuCmdLimitEffect
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_Command_LimitEffect;                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Color_00;                               // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Color_01;                               // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Color_02;                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Gradation_00;                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Light_00;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Light_01;                               // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Light_02;                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Light_04;                               // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Line_00;                                // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Particle_02;                            // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Particle_03;                            // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Particle_04;                            // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Particle_05;                            // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Particle_06;                            // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Command_LimitEffect;                           // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Effect_Color;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Effect_Light;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_Effect_Particle;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Status_LimitEffect_01_C">();
	}
	static class UStatus_LimitEffect_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatus_LimitEffect_01_C>();
	}
};
static_assert(alignof(UStatus_LimitEffect_01_C) == 0x000008, "Wrong alignment on UStatus_LimitEffect_01_C");
static_assert(sizeof(UStatus_LimitEffect_01_C) == 0x000418, "Wrong size on UStatus_LimitEffect_01_C");
static_assert(offsetof(UStatus_LimitEffect_01_C, Out) == 0x000368, "Member 'UStatus_LimitEffect_01_C::Out' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, In) == 0x000370, "Member 'UStatus_LimitEffect_01_C::In' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Loop) == 0x000378, "Member 'UStatus_LimitEffect_01_C::Loop' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, All_Command_LimitEffect) == 0x000380, "Member 'UStatus_LimitEffect_01_C::All_Command_LimitEffect' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Color_00) == 0x000388, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Color_00' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Color_01) == 0x000390, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Color_01' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Color_02) == 0x000398, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Color_02' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Gradation_00) == 0x0003A0, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Gradation_00' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Light_00) == 0x0003A8, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Light_00' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Light_01) == 0x0003B0, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Light_01' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Light_02) == 0x0003B8, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Light_02' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Light_04) == 0x0003C0, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Light_04' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Line_00) == 0x0003C8, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Line_00' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Particle_02) == 0x0003D0, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Particle_02' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Particle_03) == 0x0003D8, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Particle_03' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Particle_04) == 0x0003E0, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Particle_04' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Particle_05) == 0x0003E8, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Particle_05' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Img_Effect_Particle_06) == 0x0003F0, "Member 'UStatus_LimitEffect_01_C::Img_Effect_Particle_06' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Nut_Command_LimitEffect) == 0x0003F8, "Member 'UStatus_LimitEffect_01_C::Nut_Command_LimitEffect' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Nut_Effect_Color) == 0x000400, "Member 'UStatus_LimitEffect_01_C::Nut_Effect_Color' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Nut_Effect_Light) == 0x000408, "Member 'UStatus_LimitEffect_01_C::Nut_Effect_Light' has a wrong offset!");
static_assert(offsetof(UStatus_LimitEffect_01_C, Nut_Effect_Particle) == 0x000410, "Member 'UStatus_LimitEffect_01_C::Nut_Effect_Particle' has a wrong offset!");

}

