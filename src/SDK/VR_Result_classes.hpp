#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VR_Result

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VR_Result.VR_Result_C
// 0x00D0 (0x0510 - 0x0440)
class UVR_Result_C final : public UEndColosseumResultMenu
{
public:
	class UWidgetAnimation*                       New_Loop;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Menu_Out;                                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Failed_In;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Clear_In;                                          // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BG;                                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BlackBase;                                         // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Clear_BgLogo;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          EndTextBlock_11;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Failed_BgLogo;                                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              G1_Base1;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_X_G1;                                         // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_X_G2;                                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_X_G3;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light1;                                            // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light2;                                            // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light3;                                            // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              PrizeBase;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              TitleLight;                                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              TtileLine;                                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Btn;                                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Btn2;                                          // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_FailedInfo;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_TitleColiseum;                                 // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_TitleFailedTime;                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_TitlePrize;                                    // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_TitleTime;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VR_Result_C">();
	}
	static class UVR_Result_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVR_Result_C>();
	}
};
static_assert(alignof(UVR_Result_C) == 0x000008, "Wrong alignment on UVR_Result_C");
static_assert(sizeof(UVR_Result_C) == 0x000510, "Wrong size on UVR_Result_C");
static_assert(offsetof(UVR_Result_C, New_Loop) == 0x000440, "Member 'UVR_Result_C::New_Loop' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Menu_Out) == 0x000448, "Member 'UVR_Result_C::Menu_Out' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Failed_In) == 0x000450, "Member 'UVR_Result_C::Failed_In' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Clear_In) == 0x000458, "Member 'UVR_Result_C::Clear_In' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, BG) == 0x000460, "Member 'UVR_Result_C::BG' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, BlackBase) == 0x000468, "Member 'UVR_Result_C::BlackBase' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Clear_BgLogo) == 0x000470, "Member 'UVR_Result_C::Clear_BgLogo' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, EndTextBlock_11) == 0x000478, "Member 'UVR_Result_C::EndTextBlock_11' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Failed_BgLogo) == 0x000480, "Member 'UVR_Result_C::Failed_BgLogo' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, G1_Base1) == 0x000488, "Member 'UVR_Result_C::G1_Base1' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Icon_X_G1) == 0x000490, "Member 'UVR_Result_C::Icon_X_G1' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Icon_X_G2) == 0x000498, "Member 'UVR_Result_C::Icon_X_G2' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Icon_X_G3) == 0x0004A0, "Member 'UVR_Result_C::Icon_X_G3' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Light1) == 0x0004A8, "Member 'UVR_Result_C::Light1' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Light2) == 0x0004B0, "Member 'UVR_Result_C::Light2' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Light3) == 0x0004B8, "Member 'UVR_Result_C::Light3' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, PrizeBase) == 0x0004C0, "Member 'UVR_Result_C::PrizeBase' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, TitleLight) == 0x0004C8, "Member 'UVR_Result_C::TitleLight' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, TtileLine) == 0x0004D0, "Member 'UVR_Result_C::TtileLine' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_Btn) == 0x0004D8, "Member 'UVR_Result_C::Txt_Btn' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_Btn2) == 0x0004E0, "Member 'UVR_Result_C::Txt_Btn2' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_FailedInfo) == 0x0004E8, "Member 'UVR_Result_C::Txt_FailedInfo' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_TitleColiseum) == 0x0004F0, "Member 'UVR_Result_C::Txt_TitleColiseum' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_TitleFailedTime) == 0x0004F8, "Member 'UVR_Result_C::Txt_TitleFailedTime' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_TitlePrize) == 0x000500, "Member 'UVR_Result_C::Txt_TitlePrize' has a wrong offset!");
static_assert(offsetof(UVR_Result_C, Txt_TitleTime) == 0x000508, "Member 'UVR_Result_C::Txt_TitleTime' has a wrong offset!");

}

