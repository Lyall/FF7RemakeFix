#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Map_InfoWindow

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Map_InfoWindow.Map_InfoWindow_C
// 0x00F8 (0x04B8 - 0x03C0)
class UMap_InfoWindow_C final : public UEndAreaMapInfoWindow
{
public:
	class UWidgetAnimation*                       Menu_In_0;                                         // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Main_Child;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Menu_In;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Side;                                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Quest;                                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Main;                                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base1;                                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base2;                                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseSpace1;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Billboard_Quest;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Billboard_StoryImg;                                // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Controller_bg3;                                    // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              DetailBase;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              DownLight;                                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_0;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_1;                                        // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_2;                                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_3;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_4;                                        // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Frame1;                                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Frame2;                                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_BattleReport_Gauge_C*         Gauge;                                             // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              GaugeBase;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon;                                              // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Waku;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              LeftLight;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              LineShadow;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              PriorityIcon;                                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Btn;                                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              UpLight;                                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Map_InfoWindow_C">();
	}
	static class UMap_InfoWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMap_InfoWindow_C>();
	}
};
static_assert(alignof(UMap_InfoWindow_C) == 0x000008, "Wrong alignment on UMap_InfoWindow_C");
static_assert(sizeof(UMap_InfoWindow_C) == 0x0004B8, "Wrong size on UMap_InfoWindow_C");
static_assert(offsetof(UMap_InfoWindow_C, Menu_In_0) == 0x0003C0, "Member 'UMap_InfoWindow_C::Menu_In_0' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Main_Child) == 0x0003C8, "Member 'UMap_InfoWindow_C::Main_Child' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Menu_In) == 0x0003D0, "Member 'UMap_InfoWindow_C::Menu_In' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Side) == 0x0003D8, "Member 'UMap_InfoWindow_C::Side' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Quest) == 0x0003E0, "Member 'UMap_InfoWindow_C::Quest' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Main) == 0x0003E8, "Member 'UMap_InfoWindow_C::Main' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Base1) == 0x0003F0, "Member 'UMap_InfoWindow_C::Base1' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Base2) == 0x0003F8, "Member 'UMap_InfoWindow_C::Base2' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, BaseSpace1) == 0x000400, "Member 'UMap_InfoWindow_C::BaseSpace1' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Billboard_Quest) == 0x000408, "Member 'UMap_InfoWindow_C::Billboard_Quest' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Billboard_StoryImg) == 0x000410, "Member 'UMap_InfoWindow_C::Billboard_StoryImg' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Controller_bg3) == 0x000418, "Member 'UMap_InfoWindow_C::Controller_bg3' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, DetailBase) == 0x000420, "Member 'UMap_InfoWindow_C::DetailBase' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, DownLight) == 0x000428, "Member 'UMap_InfoWindow_C::DownLight' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, EndImage_0) == 0x000430, "Member 'UMap_InfoWindow_C::EndImage_0' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, EndImage_1) == 0x000438, "Member 'UMap_InfoWindow_C::EndImage_1' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, EndImage_2) == 0x000440, "Member 'UMap_InfoWindow_C::EndImage_2' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, EndImage_3) == 0x000448, "Member 'UMap_InfoWindow_C::EndImage_3' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, EndImage_4) == 0x000450, "Member 'UMap_InfoWindow_C::EndImage_4' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Frame1) == 0x000458, "Member 'UMap_InfoWindow_C::Frame1' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Frame2) == 0x000460, "Member 'UMap_InfoWindow_C::Frame2' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Gauge) == 0x000468, "Member 'UMap_InfoWindow_C::Gauge' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, GaugeBase) == 0x000470, "Member 'UMap_InfoWindow_C::GaugeBase' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Icon) == 0x000478, "Member 'UMap_InfoWindow_C::Icon' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Img_Waku) == 0x000480, "Member 'UMap_InfoWindow_C::Img_Waku' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, LeftLight) == 0x000488, "Member 'UMap_InfoWindow_C::LeftLight' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Line) == 0x000490, "Member 'UMap_InfoWindow_C::Line' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, LineShadow) == 0x000498, "Member 'UMap_InfoWindow_C::LineShadow' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, PriorityIcon) == 0x0004A0, "Member 'UMap_InfoWindow_C::PriorityIcon' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, Txt_Btn) == 0x0004A8, "Member 'UMap_InfoWindow_C::Txt_Btn' has a wrong offset!");
static_assert(offsetof(UMap_InfoWindow_C, UpLight) == 0x0004B0, "Member 'UMap_InfoWindow_C::UpLight' has a wrong offset!");

}

