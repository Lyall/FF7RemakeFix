#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OSDKCore

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "OSDKCore_structs.hpp"


namespace SDK
{

// Class OSDKCore.OSDKFutureObject
// 0x0008 (0x0030 - 0x0028)
class UOSDKFutureObject : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Await(class UObject* WorldContextObject, EOSDKFutureFinishResult* FinishResult, const struct FLatentActionInfo& LatentInfo);

	EOSDKFutureStatus GetStatus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKFutureObject">();
	}
	static class UOSDKFutureObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKFutureObject>();
	}
};
static_assert(alignof(UOSDKFutureObject) == 0x000008, "Wrong alignment on UOSDKFutureObject");
static_assert(sizeof(UOSDKFutureObject) == 0x000030, "Wrong size on UOSDKFutureObject");

// Class OSDKCore.OSDK
// 0x0008 (0x0038 - 0x0030)
class UOSDK final : public UOSDKFutureObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginNewGameSession(bool bSimulationRunning);
	class UOSDKWebServiceClient* CreateWebServiceClientWithUserId(const struct FOSDKUserId& UserId, const struct FOSDKClientConfig& ClientConfig);
	class UOSDKWebServiceClient* CreateWebServiceClientWithUserInfo(const struct FOSDKUserInfo& UserInfo, const struct FOSDKClientConfig& ClientConfig);
	struct FOSDKStatistics GetAndResetStatsInfo();
	class FString GetHardwareName();
	class FString GetSessionId();
	bool IsNetworkAvailable();
	void PauseGameSimulation();
	void StartGameSimulation();

	struct FOSDKInfo GetInfo() const;
	struct FOSDKStatistics GetStatsInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDK">();
	}
	static class UOSDK* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDK>();
	}
};
static_assert(alignof(UOSDK) == 0x000008, "Wrong alignment on UOSDK");
static_assert(sizeof(UOSDK) == 0x000038, "Wrong size on UOSDK");

// Class OSDKCore.OSDKSettings
// 0x0080 (0x00A8 - 0x0028)
class UOSDKSettings final : public UObject
{
public:
	bool                                          bCreateOSDKOnInit;                                 // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSteam;                                      // 0x0029(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoSteamInEditorMode;                              // 0x002A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseProvidedLibcurl;                               // 0x002B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultProjectName;                                // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultLoginURL;                                   // 0x0040(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultSignUpURL;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultRevision;                                   // 0x0060(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultConfigSandbox;                              // 0x0070(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultUserSandbox;                                // 0x0080(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultBuildId;                                    // 0x0090(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSDKLogLevel                                 OSDKLogLevel;                                      // 0x00A0(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSDKHTTPClientLoggingFlags                   OSDKHTTPClientLoggingFlags;                        // 0x00A1(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKSettings">();
	}
	static class UOSDKSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKSettings>();
	}
};
static_assert(alignof(UOSDKSettings) == 0x000008, "Wrong alignment on UOSDKSettings");
static_assert(sizeof(UOSDKSettings) == 0x0000A8, "Wrong size on UOSDKSettings");
static_assert(offsetof(UOSDKSettings, bCreateOSDKOnInit) == 0x000028, "Member 'UOSDKSettings::bCreateOSDKOnInit' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, bEnableSteam) == 0x000029, "Member 'UOSDKSettings::bEnableSteam' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, bNoSteamInEditorMode) == 0x00002A, "Member 'UOSDKSettings::bNoSteamInEditorMode' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, bUseProvidedLibcurl) == 0x00002B, "Member 'UOSDKSettings::bUseProvidedLibcurl' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultProjectName) == 0x000030, "Member 'UOSDKSettings::DefaultProjectName' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultLoginURL) == 0x000040, "Member 'UOSDKSettings::DefaultLoginURL' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultSignUpURL) == 0x000050, "Member 'UOSDKSettings::DefaultSignUpURL' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultRevision) == 0x000060, "Member 'UOSDKSettings::DefaultRevision' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultConfigSandbox) == 0x000070, "Member 'UOSDKSettings::DefaultConfigSandbox' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultUserSandbox) == 0x000080, "Member 'UOSDKSettings::DefaultUserSandbox' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, DefaultBuildId) == 0x000090, "Member 'UOSDKSettings::DefaultBuildId' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, OSDKLogLevel) == 0x0000A0, "Member 'UOSDKSettings::OSDKLogLevel' has a wrong offset!");
static_assert(offsetof(UOSDKSettings, OSDKHTTPClientLoggingFlags) == 0x0000A1, "Member 'UOSDKSettings::OSDKHTTPClientLoggingFlags' has a wrong offset!");

// Class OSDKCore.OSDKWebServiceClient
// 0x0008 (0x0038 - 0x0030)
class UOSDKWebServiceClient final : public UOSDKFutureObject
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetFeatureNames(const class FString& FeatureName, TSet<class FString>* outSettingNames);
	class FString GetFeatureSetting(const class FString& FeatureName, const class FString& SettingName);
	void GetFeatureSettings(const class FString& FeatureName, TMap<class FString, class FString>* outSettings);
	struct FOSDKHTTPClient GetHTTPClient();
	struct FOSDKProfileId GetPrimaryProfileId();
	struct FOSDKProfileId GetSecondaryProfileId(const class FString& Name_0);
	bool GetUserConsentsToSendingMetrics();
	bool IsNetworkAvailable();
	void RefreshAuthentication();
	void ResetAllLocalStorages();
	void ResetClient();
	void SetDefaultHeader(const class FString& HeaderName, const class FString& HeaderValue);
	void SetUserConsentsToSendingMetrics(bool OptIn, bool EmitConsentMetric);
	void SetUserLanguage(const class FString& LanguageCode);

	struct FOSDKClientInfo GetClientInfo() const;
	struct FOSDKServerInfo GetServerInfo() const;
	struct FOSDKUserInfo GetUserInfo() const;
	bool IsAuthenticated() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OSDKWebServiceClient">();
	}
	static class UOSDKWebServiceClient* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOSDKWebServiceClient>();
	}
};
static_assert(alignof(UOSDKWebServiceClient) == 0x000008, "Wrong alignment on UOSDKWebServiceClient");
static_assert(sizeof(UOSDKWebServiceClient) == 0x000038, "Wrong size on UOSDKWebServiceClient");

}

