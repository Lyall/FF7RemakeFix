#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_BattleSetting_Limit2

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MainMenu_BattleSetting_Limit2.MainMenu_BattleSetting_Limit2_C
// 0x0050 (0x03B0 - 0x0360)
class UMainMenu_BattleSetting_Limit2_C final : public UEndUserWidget
{
public:
	class UEndImage*                              All_Base;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_0;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_1;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              LeftLine;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_01;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Shadow2;                                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_LimitInfo1;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_LimitName1;                                    // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Title;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Title_LimitInfo;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MainMenu_BattleSetting_Limit2_C">();
	}
	static class UMainMenu_BattleSetting_Limit2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_BattleSetting_Limit2_C>();
	}
};
static_assert(alignof(UMainMenu_BattleSetting_Limit2_C) == 0x000008, "Wrong alignment on UMainMenu_BattleSetting_Limit2_C");
static_assert(sizeof(UMainMenu_BattleSetting_Limit2_C) == 0x0003B0, "Wrong size on UMainMenu_BattleSetting_Limit2_C");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, All_Base) == 0x000360, "Member 'UMainMenu_BattleSetting_Limit2_C::All_Base' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, EndImage_0) == 0x000368, "Member 'UMainMenu_BattleSetting_Limit2_C::EndImage_0' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, EndImage_1) == 0x000370, "Member 'UMainMenu_BattleSetting_Limit2_C::EndImage_1' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, LeftLine) == 0x000378, "Member 'UMainMenu_BattleSetting_Limit2_C::LeftLine' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, Line_01) == 0x000380, "Member 'UMainMenu_BattleSetting_Limit2_C::Line_01' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, Shadow2) == 0x000388, "Member 'UMainMenu_BattleSetting_Limit2_C::Shadow2' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, Txt_LimitInfo1) == 0x000390, "Member 'UMainMenu_BattleSetting_Limit2_C::Txt_LimitInfo1' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, Txt_LimitName1) == 0x000398, "Member 'UMainMenu_BattleSetting_Limit2_C::Txt_LimitName1' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, Txt_Title) == 0x0003A0, "Member 'UMainMenu_BattleSetting_Limit2_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UMainMenu_BattleSetting_Limit2_C, Txt_Title_LimitInfo) == 0x0003A8, "Member 'UMainMenu_BattleSetting_Limit2_C::Txt_Title_LimitInfo' has a wrong offset!");

}

