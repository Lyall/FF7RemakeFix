#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EB0003_12_HelicopterTurks_MoveControl_AI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EndGame_structs.hpp"
#include "EB0003_12_HelicopterTurks_Standard_AI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass EB0003_12_HelicopterTurks_MoveControl_AI.EB0003_12_HelicopterTurks_MoveControl_AI_C
// 0x0138 (0x23F8 - 0x22C0)
class AEB0003_12_HelicopterTurks_MoveControl_AI_C final : public AEB0003_12_HelicopterTurks_Standard_AI_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_EB0003_12_HelicopterTurks_MoveControl_AI_C; // 0x22C0(0x0008)(Transient, DuplicateTransient)
	class UEndAITimerComponent*                   StayTimer;                                         // 0x22C8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEndBattleAIOverlapComponent*           EndBattleAIOverlap_0;                              // 0x22D0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEndAITimerComponent*                   EndAITimer_0;                                      // 0x22D8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEndAITimerComponent*                   EndAITimerSet_0;                                   // 0x22E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                centerPos_0;                                       // 0x22E8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Wait_0;                                            // 0x22F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F5[0x3];                                     // 0x22F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Situation;                                         // 0x22F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEndBattleHelicopterSpec               HeliStay;                                          // 0x2300(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FEndBattleHelicopterSpec               HeliMove;                                          // 0x2328(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FEndBattleHelicopterSpec               HeliAtk;                                           // 0x2350(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMap<class FName, int32>                      GoalPoint;                                         // 0x2378(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FEndBattleHelicopterSpec               NewVar_0_0;                                        // 0x23C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          FinReserve;                                        // 0x23F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FinFix;                                            // 0x23F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_EB0003_12_HelicopterTurks_MoveControl_AI(int32 EntryPoint);
	void OnEndCutScene(const class FName& CutsceneID);
	void OnMetaMessageAboutCharacter(class AEndCharacter* InChara, const class FString& InMessage);
	void OnFirstUpdate(EEndAiBattleRole InRole, int32 InStep);
	void OnMotionMessage(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue);
	void OnTakeDamage(int32 Damage, class AEndCharacter* InChara, class FName InName, EEndBattleAbilityCommandType InCommandType, bool InBind, bool InGuard, bool InDodge, class FName InBoneName, bool InAttributeWeak, class FName InDmgSrcID, EEndBattleAttributeType InDmgSrcAttribute, float justHitRotYaw, const struct FVector& hitPosition, bool InHeal, bool InCounter, const struct FEndDataTableBattleDamageSource& dataTableBattleDamageSource, bool useAbilityUCPC);
	void CustomEvent_1(class AEndNavModifierVolume* InVolume);
	void CustomEvent(class AEndNavModifierVolume* InVolume);
	void OnKilled(int32 Damage, class AEndCharacter* InTarget, class FName InName, bool InBind);
	void OnCutSceneMessage(const class FName& Message);
	void ReceiveTick(float DeltaSeconds);
	void OnUpdate(EEndAiBattleRole InRole, int32 InStep, float DeltaTime);
	void InpActEvt_NumPadOne_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_NumPadTwo_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void NextSituation();
	void OnChangePhase(int32 InNew, int32 InOld);
	void OnEntryBattleScene();
	void OnMetaMessage(const class FString& InMessage);
	void ReceiveBeginPlay();
	void stay(class FName InName);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EB0003_12_HelicopterTurks_MoveControl_AI_C">();
	}
	static class AEB0003_12_HelicopterTurks_MoveControl_AI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEB0003_12_HelicopterTurks_MoveControl_AI_C>();
	}
};
static_assert(alignof(AEB0003_12_HelicopterTurks_MoveControl_AI_C) == 0x000008, "Wrong alignment on AEB0003_12_HelicopterTurks_MoveControl_AI_C");
static_assert(sizeof(AEB0003_12_HelicopterTurks_MoveControl_AI_C) == 0x0023F8, "Wrong size on AEB0003_12_HelicopterTurks_MoveControl_AI_C");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, UberGraphFrame_EB0003_12_HelicopterTurks_MoveControl_AI_C) == 0x0022C0, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::UberGraphFrame_EB0003_12_HelicopterTurks_MoveControl_AI_C' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, StayTimer) == 0x0022C8, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::StayTimer' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, EndBattleAIOverlap_0) == 0x0022D0, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::EndBattleAIOverlap_0' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, EndAITimer_0) == 0x0022D8, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::EndAITimer_0' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, EndAITimerSet_0) == 0x0022E0, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::EndAITimerSet_0' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, centerPos_0) == 0x0022E8, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::centerPos_0' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, Wait_0) == 0x0022F4, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::Wait_0' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, Situation) == 0x0022F8, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::Situation' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, HeliStay) == 0x002300, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::HeliStay' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, HeliMove) == 0x002328, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::HeliMove' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, HeliAtk) == 0x002350, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::HeliAtk' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, GoalPoint) == 0x002378, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::GoalPoint' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, NewVar_0_0) == 0x0023C8, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::NewVar_0_0' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, FinReserve) == 0x0023F0, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::FinReserve' has a wrong offset!");
static_assert(offsetof(AEB0003_12_HelicopterTurks_MoveControl_AI_C, FinFix) == 0x0023F1, "Member 'AEB0003_12_HelicopterTurks_MoveControl_AI_C::FinFix' has a wrong offset!");

}

